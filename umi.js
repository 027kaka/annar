(function(n){var e={};function t(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return n[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(r,a,function(e){return n[e]}.bind(null,a));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/anna-remax-ui/",t(t.s=0)})({"+2a4":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("7BAe"),l=t("jbR1"),s=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{some:function(n){var e=o(this),t=l(e),r=i(n,arguments.length>1?arguments[1]:void 0,3);return s(t,(function(n){if(r(n,n,e))return s.stop()}),void 0,!1,!0).stopped}})},"+4le":function(n,e,t){t("UXQe")},"+Dq+":function(n,e,t){n.exports={item:"item___SIMz-"}},"+GPJ":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("/dTS"),c=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{intersection:function(n){var e=i(this),t=new(s(e,o("Set"))),r=l(e.has),a=l(t.add);return c(n,(function(n){r.call(e,n)&&a.call(t,n)})),t}})},"+Hw1":function(n,e,t){var r=t("MMxC");r({target:"Math",stat:!0},{iaddh:function(n,e,t,r){var a=n>>>0,o=e>>>0,i=t>>>0;return o+(r>>>0)+((a&i|(a|i)&~(a+i>>>0))>>>31)|0}})},"+SQA":function(n,e,t){"use strict";var r=t("cT1L"),a=t("tSXo"),o=[].slice,i={},l=function(n,e,t){if(!(e in i)){for(var r=[],a=0;a<e;a++)r[a]="a["+a+"]";i[e]=Function("C,a","return new C("+r.join(",")+")")}return i[e](n,t)};n.exports=Function.bind||function(n){var e=r(this),t=o.call(arguments,1),i=function(){var r=t.concat(o.call(arguments));return this instanceof i?l(e,r.length,r):e.apply(n,r)};return a(e.prototype)&&(i.prototype=e.prototype),i}},"+X1D":function(n,e,t){"use strict";var r=t("f1E4"),a=t("cT1L");n.exports=function(){for(var n,e=r(this),t=a(e["delete"]),o=!0,i=0,l=arguments.length;i<l;i++)n=t.call(e,arguments[i]),o=o&&n;return!!o}},"+l9e":function(n,e,t){"use strict";var r=t("MMxC"),a=t("zv1X").map,o=t("jMDO"),i=t("kGMc"),l=o("map"),s=i("map");r({target:"Array",proto:!0,forced:!l||!s},{map:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},"+rjg":function(n,e,t){"use strict";var r=t("m0kY"),a=t("FCfD");n.exports="".repeat||function(n){var e=String(a(this)),t="",o=r(n);if(o<0||o==1/0)throw RangeError("Wrong number of repetitions");for(;o>0;(o>>>=1)&&(e+=e))1&o&&(t+=e);return t}},"+su7":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var r=a(t("q1tI"));function a(n){return n&&n.__esModule?n:{default:n}}function o(){return o=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},o.apply(this,arguments)}function i(n,e){if(null==n)return{};var t,r,a=l(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}function l(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}t("KCaj");var s=function(n){var e=n.children,t=i(n,["children"]);return r["default"].createElement("span",o({className:"__dumi-default-badge"},t),e)};e["default"]=s},"+t3K":function(n,e,t){"use strict";function r(){var n=a(t("q1tI"));return r=function(){return n},n}function a(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var o=r()["default"].createContext({rootPath:"/",slug:"",locale:"",locales:[],mode:"doc",logo:"",title:"",desc:"",repoUrl:"",navs:[],menus:[],routeMeta:{}});e["default"]=o},"+u1y":function(n,e,t){"use strict";var r=t("tny8"),a=t("eNh0"),o=t("cTDu"),i=t("oa35"),l=t("YfKC").f;r&&!("lastIndex"in[])&&(l(Array.prototype,"lastIndex",{configurable:!0,get:function(){var n=o(this),e=i(n.length);return 0==e?0:e-1}}),a("lastIndex"))},"+vfm":function(n,e,t){var r=t("tSXo"),a=t("g1ZG");n.exports=function(n,e,t){var o,i;return a&&"function"==typeof(o=e.constructor)&&o!==t&&r(i=o.prototype)&&i!==t.prototype&&a(n,i),n}},"+wdc":function(n,e,t){"use strict";var r,a,o,i,l;if("undefined"===typeof window||"function"!==typeof MessageChannel){var s=null,c=null,p=function n(){if(null!==s)try{var t=e.unstable_now();s(!0,t),s=null}catch(r){throw setTimeout(n,0),r}},u=Date.now();e.unstable_now=function(){return Date.now()-u},r=function(n){null!==s?setTimeout(r,0,n):(s=n,setTimeout(p,0))},a=function(n,e){c=setTimeout(n,e)},o=function(){clearTimeout(c)},i=function(){return!1},l=e.unstable_forceFrameRate=function(){}}else{var d=window.performance,m=window.Date,f=window.setTimeout,h=window.clearTimeout;if("undefined"!==typeof console){var x=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof x&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===typeof d&&"function"===typeof d.now)e.unstable_now=function(){return d.now()};else{var g=m.now();e.unstable_now=function(){return m.now()-g}}var y=!1,C=null,w=-1,v=5,b=0;i=function(){return e.unstable_now()>=b},l=function(){},e.unstable_forceFrameRate=function(n){0>n||125<n?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):v=0<n?Math.floor(1e3/n):5};var k=new MessageChannel,V=k.port2;k.port1.onmessage=function(){if(null!==C){var n=e.unstable_now();b=n+v;try{C(!0,n)?V.postMessage(null):(y=!1,C=null)}catch(t){throw V.postMessage(null),t}}else y=!1},r=function(n){C=n,y||(y=!0,V.postMessage(null))},a=function(n,t){w=f((function(){n(e.unstable_now())}),t)},o=function(){h(w),w=-1}}function P(n,e){var t=n.length;n.push(e);n:for(;;){var r=t-1>>>1,a=n[r];if(!(void 0!==a&&0<S(a,e)))break n;n[r]=e,n[t]=a,t=r}}function N(n){return n=n[0],void 0===n?null:n}function R(n){var e=n[0];if(void 0!==e){var t=n.pop();if(t!==e){n[0]=t;n:for(var r=0,a=n.length;r<a;){var o=2*(r+1)-1,i=n[o],l=o+1,s=n[l];if(void 0!==i&&0>S(i,t))void 0!==s&&0>S(s,i)?(n[r]=s,n[l]=t,r=l):(n[r]=i,n[o]=t,r=o);else{if(!(void 0!==s&&0>S(s,t)))break n;n[r]=s,n[l]=t,r=l}}}return e}return null}function S(n,e){var t=n.sortIndex-e.sortIndex;return 0!==t?t:n.id-e.id}var T=[],E=[],$=1,I=null,_=3,F=!1,O=!1,A=!1;function M(n){for(var e=N(E);null!==e;){if(null===e.callback)R(E);else{if(!(e.startTime<=n))break;R(E),e.sortIndex=e.expirationTime,P(T,e)}e=N(E)}}function z(n){if(A=!1,M(n),!O)if(null!==N(T))O=!0,r(j);else{var e=N(E);null!==e&&a(z,e.startTime-n)}}function j(n,t){O=!1,A&&(A=!1,o()),F=!0;var r=_;try{for(M(t),I=N(T);null!==I&&(!(I.expirationTime>t)||n&&!i());){var l=I.callback;if(null!==l){I.callback=null,_=I.priorityLevel;var s=l(I.expirationTime<=t);t=e.unstable_now(),"function"===typeof s?I.callback=s:I===N(T)&&R(T),M(t)}else R(T);I=N(T)}if(null!==I)var c=!0;else{var p=N(E);null!==p&&a(z,p.startTime-t),c=!1}return c}finally{I=null,_=r,F=!1}}function B(n){switch(n){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var D=l;e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(n){n.callback=null},e.unstable_continueExecution=function(){O||F||(O=!0,r(j))},e.unstable_getCurrentPriorityLevel=function(){return _},e.unstable_getFirstCallbackNode=function(){return N(T)},e.unstable_next=function(n){switch(_){case 1:case 2:case 3:var e=3;break;default:e=_}var t=_;_=e;try{return n()}finally{_=t}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=D,e.unstable_runWithPriority=function(n,e){switch(n){case 1:case 2:case 3:case 4:case 5:break;default:n=3}var t=_;_=n;try{return e()}finally{_=t}},e.unstable_scheduleCallback=function(n,t,i){var l=e.unstable_now();if("object"===typeof i&&null!==i){var s=i.delay;s="number"===typeof s&&0<s?l+s:l,i="number"===typeof i.timeout?i.timeout:B(n)}else i=B(n),s=l;return i=s+i,n={id:$++,callback:t,priorityLevel:n,startTime:s,expirationTime:i,sortIndex:-1},s>l?(n.sortIndex=s,P(E,n),null===N(T)&&n===N(E)&&(A?o():A=!0,a(z,s-l))):(n.sortIndex=i,P(T,n),O||F||(O=!0,r(j))),n},e.unstable_shouldYield=function(){var n=e.unstable_now();M(n);var t=N(T);return t!==I&&null!==I&&null!==t&&null!==t.callback&&t.startTime<=n&&t.expirationTime<I.expirationTime||i()},e.unstable_wrapCallback=function(n){var e=_;return function(){var t=_;_=e;try{return n.apply(this,arguments)}finally{_=t}}}},"/0sN":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("PPXv"),l=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{keyOf:function(n){return l(i(o(this)),(function(e,t){if(t===n)return l.stop(e)}),void 0,!0,!0).result}})},"/3zY":function(n,e,t){var r=t("0qr0"),a=t("oa35"),o=t("bIKR"),i=function(n){return function(e,t,i){var l,s=r(e),c=a(s.length),p=o(i,c);if(n&&t!=t){while(c>p)if(l=s[p++],l!=l)return!0}else for(;c>p;p++)if((n||p in s)&&s[p]===t)return n||p||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},"/8bt":function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t.n(a),i=t("YCKM"),l=t("TSYQ"),s=t.n(l),c=t("f4X2"),p=t("IOv4"),u=t("ZLBb"),d=t.n(u),m=c["v"].CheckableTag,f=[{key:"0",value:"\u88c5\u9970\u7247"},{key:"1",value:"\u7ec7\u5e26"},{key:"2",value:"\u7f1d\u7eab\u7ebf"},{key:"3",value:"\u82b1\u8fb9"},{key:"4",value:"\u73e0\u94bb"}],h=[{key:"0",value:"1000"},{key:"1",value:"2000"},{key:"2",value:"3000"}];e["default"]=()=>{var n=Object(a["useRef"])(),e=o.a.useState(),t=Object(r["a"])(e,2),l=t[0],u=t[1],x=o.a.useState(),g=Object(r["a"])(x,2),y=g[0],C=g[1],w=o.a.useState("2"),v=Object(r["a"])(w,2),b=v[0],k=v[1],V=o.a.useState(!1),P=Object(r["a"])(V,2),N=P[0],R=P[1],S=o.a.useState(!1),T=Object(r["a"])(S,2),E=T[0],$=T[1],I=o.a.useState(!1),_=Object(r["a"])(I,2),F=_[0],O=_[1],A=o.a.useState(!1),M=Object(r["a"])(A,2),z=M[0],j=M[1],B=()=>{n.current.toggle()},D=()=>{R(!1),$(!1),O(!1),j(!1)};return o.a.createElement(p["b"],{grayBg:!0,style:{overflow:"hidden"}},o.a.createElement(p["a"],{title:"Basic"},o.a.createElement(c["g"],{style:{zIndex:5}},o.a.createElement(c["g"].Item,{title:"\u54c1\u7c7b",value:l,options:f,onChange:n=>u(n.key)}),o.a.createElement(c["g"].Item,{title:"\u4ef7\u683c",value:y,options:h,onChange:n=>C(n.key)}))),o.a.createElement(p["a"],{title:"Custom"},o.a.createElement(c["g"],{style:{zIndex:4}},o.a.createElement(c["g"].Item,{title:"\u54c1\u7c7b",value:b,options:f,onChange:n=>k(n.key)}),o.a.createElement(c["g"].Item,{title:"\u66f4\u591a",ref:n},o.a.createElement(i["d"],{className:d.a.custom},o.a.createElement(i["d"],{className:d.a.tags},o.a.createElement(i["d"],{className:d.a.tag},o.a.createElement(i["d"],{className:d.a.title},"\u54c1\u8d28"),o.a.createElement(m,{checked:N,onChange:n=>R(n)},"\u5927\u4f17\u4f18\u9009"),o.a.createElement(m,{checked:E,onChange:n=>$(n)},"\u70b9\u8bc4\u9ad8\u5206")),o.a.createElement(i["d"],{className:d.a.tag},o.a.createElement(i["d"],{className:d.a.title},"\u901f\u5ea6"),o.a.createElement(m,{checked:F,onChange:()=>O(n=>!n)},"60\u5206\u949f\u5185"),o.a.createElement(m,{checked:z,onChange:()=>j(n=>!n)},"40\u5206\u949f\u5185"))),o.a.createElement(i["d"],{className:d.a.action},o.a.createElement(i["d"],{className:s()({[d.a.btn]:!0,[d.a.reset]:!0}),onTap:D},"\u91cd\u7f6e"),o.a.createElement(i["d"],{className:s()({[d.a.btn]:!0,[d.a.complete]:!0}),onTap:B},"\u5b8c\u6210")))))),o.a.createElement(p["a"],{title:"ActiveColor"},o.a.createElement(c["g"],{style:{zIndex:3}},o.a.createElement(c["g"].Item,{title:"\u54c1\u7c7b",value:l,options:f,onChange:n=>u(n.key),activeColor:"#FF9999"}),o.a.createElement(c["g"].Item,{title:"\u4ef7\u683c",value:y,options:h,onChange:n=>C(n.key),activeColor:"#FF9999"}))),o.a.createElement(p["a"],{title:"Disabled"},o.a.createElement(c["g"],{style:{zIndex:2}},o.a.createElement(c["g"].Item,{title:"\u54c1\u7c7b",value:l,options:f,onChange:n=>u(n.key),disabled:!0}),o.a.createElement(c["g"].Item,{title:"\u4ef7\u683c",value:y,options:h,onChange:n=>C(n.key),disabled:!0}))))}},"/EW0":function(n,e,t){},"/R3g":function(n,e,t){var r=t("MMxC"),a=t("zTPR"),o=t("ls1J"),i=t("f1E4"),l=t("Acmb"),s=t("IuhT"),c=o.keys,p=o.toKey,u=function(n){var e=[];return s(n,e.push,e),e},d=function(n,e){var t=c(n,e),r=l(n);if(null===r)return t;var o=d(r,e);return o.length?t.length?u(new a(t.concat(o))):o:t};r({target:"Reflect",stat:!0},{getMetadataKeys:function(n){var e=arguments.length<2?void 0:p(arguments[1]);return d(i(n),e)}})},"/dTS":function(n,e,t){var r=t("f1E4"),a=t("cT1L"),o=t("2kyd"),i=o("species");n.exports=function(n,e){var t,o=r(n).constructor;return void 0===o||void 0==(t=r(o)[i])?e:a(t)}},"/gva":function(n,e,t){"use strict";var r=t("MMxC"),a=t("ukPv"),o=t("kkxG"),i=t("NMFW"),l=t("a5mf"),s=t("IuhT"),c=t("igoe"),p=t("tSXo"),u=t("MVys"),d=t("GPrf"),m=t("kiNa"),f=t("+vfm");n.exports=function(n,e,t){var h=-1!==n.indexOf("Map"),x=-1!==n.indexOf("Weak"),g=h?"set":"add",y=a[n],C=y&&y.prototype,w=y,v={},b=function(n){var e=C[n];i(C,n,"add"==n?function(n){return e.call(this,0===n?0:n),this}:"delete"==n?function(n){return!(x&&!p(n))&&e.call(this,0===n?0:n)}:"get"==n?function(n){return x&&!p(n)?void 0:e.call(this,0===n?0:n)}:"has"==n?function(n){return!(x&&!p(n))&&e.call(this,0===n?0:n)}:function(n,t){return e.call(this,0===n?0:n,t),this})};if(o(n,"function"!=typeof y||!(x||C.forEach&&!u((function(){(new y).entries().next()})))))w=t.getConstructor(e,n,h,g),l.REQUIRED=!0;else if(o(n,!0)){var k=new w,V=k[g](x?{}:-0,1)!=k,P=u((function(){k.has(1)})),N=d((function(n){new y(n)})),R=!x&&u((function(){var n=new y,e=5;while(e--)n[g](e,e);return!n.has(-0)}));N||(w=e((function(e,t){c(e,w,n);var r=f(new y,e,w);return void 0!=t&&s(t,r[g],r,h),r})),w.prototype=C,C.constructor=w),(P||R)&&(b("delete"),b("has"),h&&b("get")),(R||V)&&b(g),x&&C.clear&&delete C.clear}return v[n]=w,r({global:!0,forced:w!=y},v),m(w,n),x||t.setStrong(w,n,h),w}},"/mKc":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("7BAe"),c=t("/dTS"),p=t("jbR1"),u=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{filter:function(n){var e=i(this),t=p(e),r=s(n,arguments.length>1?arguments[1]:void 0,3),a=new(c(e,o("Set"))),d=l(a.add);return u(t,(function(n){r(n,n,e)&&d.call(a,n)}),void 0,!1,!0),a}})},"/vMi":function(n,e,t){"use strict";var r=t("/gva"),a=t("uz3g");r("WeakSet",(function(n){return function(){return n(this,arguments.length?arguments[0]:void 0)}}),a)},"/yC2":function(n,e,t){var r=t("tny8"),a=t("MVys"),o=t("8w+9");n.exports=!r&&!a((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},0:function(n,e,t){n.exports=t("1/Kc")},"09U7":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var r=f(t("q1tI")),a=t("ArA+"),o=d(t("+t3K")),i=d(t("Y2Fy")),l=d(t("8tWd")),s=f(t("NKr8")),c=d(t("Q6P9"));t("qHiR"),t("vg9a"),t("1EFV");var p=d(t("mZso")),u=d(t("N6At"));function d(n){return n&&n.__esModule?n:{default:n}}function m(){if("function"!==typeof WeakMap)return null;var n=new WeakMap;return m=function(){return n},n}function f(n){if(n&&n.__esModule)return n;if(null===n||"object"!==h(n)&&"function"!==typeof n)return{default:n};var e=m();if(e&&e.has(n))return e.get(n);var t={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in n)if(Object.prototype.hasOwnProperty.call(n,a)){var o=r?Object.getOwnPropertyDescriptor(n,a):null;o&&(o.get||o.set)?Object.defineProperty(t,a,o):t[a]=n[a]}return t["default"]=n,e&&e.set(n,t),t}function h(n){return h="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},h(n)}function x(n){return w(n)||C(n)||y(n)||g()}function g(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function y(n,e){if(n){if("string"===typeof n)return v(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?v(n,e):void 0}}function C(n){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}function w(n){if(Array.isArray(n))return v(n)}function v(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function b(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function k(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function V(n,e,t){return e&&k(n.prototype,e),t&&k(n,t),n}function P(n,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&N(n,e)}function N(n,e){return N=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n},N(n,e)}function R(n){return function(){var e,t=$(n);if(E()){var r=$(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return S(this,e)}}function S(n,e){return!e||"object"!==h(e)&&"function"!==typeof e?T(n):e}function T(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function E(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}function $(n){return $=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)},$(n)}var I=function(n,e){var t,r=null===(t=n.routes.find((function(n){return n.path===e.pathname})))||void 0===t?void 0:t.meta;return r||{}};function _(n,e){if(!n)return 0;if(!n.getClientRects().length)return 0;var t=n.getBoundingClientRect();return t.width||t.height?e===window?(e=n.ownerDocument.documentElement,t.top-e.clientTop):t.top-e.getBoundingClientRect().top:t.top}var F=function(n){P(t,n);var e=R(t);function t(){var n;b(this,t);for(var o=arguments.length,i=new Array(o),l=0;l<o;l++)i[l]=arguments[l];return n=e.call.apply(e,[this].concat(i)),n.state={menuCollapsed:!0,currentSlug:"",currentLocale:"",currentRouteMeta:{},navs:[],menus:[]},n.timeout=null,n.timestamp=0,n.debounceOnScroll=function(){var e=100,t=T(n),r=t.setAnchorToUrl,a=!n.timeout;a&&r();var o=Date.now()-n.timestamp;o<e&&o>=0?(window.clearTimeout(n.timeout),n.timeout=window.setTimeout((function(){n.debounceOnScroll()}),e)):(n.timestamp=Date.now(),r())},n.setAnchorToUrl=function(){if("undefined"!==typeof document){var e=n.props.location,t=n.state.currentRouteMeta.slugs,r=void 0===t?[]:t,o=n.state.currentSlug,i=window,l=[];if(x(r).filter((function(n){var e=n.depth;return e>1})).sort((function(n,e){return n.depth-e.depth})).forEach((function(n){var e=n.heading,t=document.getElementById(e);if(t){var r=_(t,i)-68,a=r>0?r:Math.abs(r)+50;a>100||l.push({heading:e,top:a})}})),0!==document.documentElement.scrollTop){if(l.length){var s=l.reduce((function(n,e){return e.top>n.top?e:n}));s.heading!==o&&a.history.replace((0,u["default"])(e.pathname,s.heading))}}else e.hash&&a.history.replace(e.pathname)}},n.renderHero=function(n){return r["default"].createElement(r["default"].Fragment,null,r["default"].createElement("div",{className:"__dumi-default-layout-hero"},r["default"].createElement("h1",null,n.title),r["default"].createElement("div",{dangerouslySetInnerHTML:{__html:n.desc}}),n.actions&&n.actions.map((function(n){return r["default"].createElement(a.Link,{to:n.link,key:n.text},r["default"].createElement("button",{type:"button"},n.text))}))))},n.renderFeatures=function(n){return r["default"].createElement("div",{className:"__dumi-default-layout-features"},n.map((function(n){return r["default"].createElement("dl",{key:n.title,style:{backgroundImage:n.icon?"url(".concat(n.icon,")"):void 0}},r["default"].createElement("dt",null,n.title),r["default"].createElement("dd",{dangerouslySetInnerHTML:{__html:n.desc}}))})))},n}return V(t,[{key:"componentDidMount",value:function(){var n=this;window.requestAnimationFrame((function(){if(n.state.currentSlug){var e=document.getElementById(n.state.currentSlug);e&&(document.documentElement.scrollTop=_(e,document.documentElement)-100)}window.addEventListener("scroll",n.debounceOnScroll,{passive:!0})})),/\w\/$/.test(this.props.location.pathname)&&a.history.replace(this.props.location.pathname.replace(/\/$/,""))}},{key:"componentWillUnmount",value:function(){window.removeEventListener("scroll",this.debounceOnScroll)}},{key:"componentDidUpdate",value:function(n){this.props.location.pathname!==n.location.pathname&&(this.props.location.hash?(0,s.scrollToSlug)(this.props.location.hash.replace("#","")):window.scrollTo(0,0))}},{key:"render",value:function(){var n,e,t,a=this,p=this.props,u=p.mode,d=p.title,m=p.desc,f=p.logo,h=p.repoUrl,x=p.locales,g=p.children,y=this.state,C=y.navs,w=y.menus,v=y.menuCollapsed,b=y.currentLocale,k=y.currentSlug,V=y.currentRouteMeta,P="site"===this.props.mode,N=P&&V.hero,R=P&&V.features,S=!1!==V.sidemenu&&!N&&!R,T=!N&&!R&&Boolean(null===(n=V.slugs)||void 0===n?void 0:n.length)&&("content"===V.toc||void 0===V.toc),E="zh-CN"===b||"*"===b&&"zh-CN"===(null===(e=x[0])||void 0===e?void 0:e.name),$=new Date(V.updatedTime),I={github:"GitHub",gitlab:"GitLab"}[(null===(t=(h||"").match(/(github|gitlab)/))||void 0===t?void 0:t[1])||"nothing"];try{$=$.toLocaleString(b)}catch(_){$=$.toLocaleString()}return r["default"].createElement(o["default"].Provider,{value:{mode:u,title:d,desc:m,repoUrl:h,logo:f,navs:C,menus:w,locales:x,slug:k,locale:b,routeMeta:V,rootPath:x.length&&b!==x[0].name?"/".concat(b):"/"}},r["default"].createElement("div",{className:"__dumi-default-layout","data-show-sidemenu":String(S),"data-show-slugs":String(T),"data-site-mode":P},r["default"].createElement(i["default"],{navPrefix:r["default"].createElement(c["default"],{routes:this.props.route.routes}),onMobileMenuClick:function(){return a.setState({menuCollapsed:!v})}}),r["default"].createElement(l["default"],{mobileMenuCollapsed:v,location:this.props.location}),T&&r["default"].createElement(s["default"],{base:"",slugs:V.slugs,location:this.props.location,className:"__dumi-default-layout-toc"}),N&&this.renderHero(V.hero),R&&this.renderFeatures(V.features),r["default"].createElement("div",{className:"__dumi-default-layout-content"},g,!N&&!R&&r["default"].createElement("div",{className:"__dumi-default-layout-footer-meta"},I&&r["default"].createElement("a",{target:"_blank",href:"".concat(h,"/edit/master/").concat(V.filePath)},E?"\u5728 ".concat(I," \u4e0a\u7f16\u8f91\u8fd9\u7bc7\u6587\u6863"):"Edit this doc on ".concat(I),r["default"].createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},r["default"].createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),r["default"].createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))),r["default"].createElement("span",{"data-updated-text":E?"\u6700\u540e\u66f4\u65b0\u65f6\u95f4\uff1a":"Last Update: "},$)),(N||R)&&V.footer&&r["default"].createElement("div",{className:"__dumi-default-layout-footer",dangerouslySetInnerHTML:{__html:V.footer}}))))}}],[{key:"getDerivedStateFromProps",value:function(n){for(var e,t=n.locales,r=n.navs,a=n.location,o=n.menus,i=n.route,l="*",s={currentLocale:(t[0]||{name:"*"}).name,currentRouteMeta:I(i,a),currentSlug:(0,p["default"])(a)?a.query.anchor:decodeURIComponent(a.hash).replace("#",""),navs:[],menus:[]},c=t.length-1;c>=0;c-=1){var u=(t[c]||{name:""}).name;if(a.pathname.startsWith("/".concat(u))){s.currentLocale=u;break}}if(r[s.currentLocale])for(var d=r[s.currentLocale].length-1;d>=0;d-=1){var m=r[s.currentLocale][d];if(new RegExp("^".concat(m.path.replace(/\.html$/,""),"(/|.|$)")).test(a.pathname)){l=m.path;break}}return s.navs=r[s.currentLocale]||[],s.menus=(null===(e=o[s.currentLocale])||void 0===e?void 0:e[l])||[],s}}]),t}(r.Component);e["default"]=F},"0O5u":function(n,e,t){"use strict";var r=t("MMxC"),a=t("MVys"),o=t("Un+d"),i=t("tSXo"),l=t("cTDu"),s=t("oa35"),c=t("arQb"),p=t("nMuc"),u=t("jMDO"),d=t("2kyd"),m=t("hRxt"),f=d("isConcatSpreadable"),h=9007199254740991,x="Maximum allowed index exceeded",g=m>=51||!a((function(){var n=[];return n[f]=!1,n.concat()[0]!==n})),y=u("concat"),C=function(n){if(!i(n))return!1;var e=n[f];return void 0!==e?!!e:o(n)},w=!g||!y;r({target:"Array",proto:!0,forced:w},{concat:function(n){var e,t,r,a,o,i=l(this),u=p(i,0),d=0;for(e=-1,r=arguments.length;e<r;e++)if(o=-1===e?i:arguments[e],C(o)){if(a=s(o.length),d+a>h)throw TypeError(x);for(t=0;t<a;t++,d++)t in o&&c(u,d,o[t])}else{if(d>=h)throw TypeError(x);c(u,d++,o)}return u.length=d,u}})},"0Owb":function(n,e,t){"use strict";function r(){return r=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},r.apply(this,arguments)}t.d(e,"a",(function(){return r}))},"0cmj":function(n,e,t){n.exports={remarks:"remarks___2AwmV"}},"0lgO":function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("1L6A")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"cascade"},o.a.createElement("a",{"aria-hidden":"true",href:"#cascade"},o.a.createElement("span",{className:"icon icon-link"})),"Cascade"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:"import React, { useRef } from 'react';\nimport { View } from 'remax/one';\nimport { Cascade, CascadePopup, Cell, Filter } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport { Categorys } from '../../mock';\n\nconst options1 = [\n  {\n    key: '0',\n    value: '1000',\n  },\n  {\n    key: '1',\n    value: '2000',\n  },\n  {\n    key: '2',\n    value: '3000',\n  },\n];\n\nexport default () => {\n  const [selector, setSelector] = React.useState<any[]>([]);\n  const [selector1, setSelector1] = React.useState<any[]>([]);\n  const [selector2, setSelector2] = React.useState<any[]>([]);\n\n  const [value3, setValue3] = React.useState('0');\n\n  const handleChangeCategory = (value: any[], last: any) => {\n    setSelector(value);\n  };\n\n  const handleCompleteCategory = (value: any[], last: any) => {};\n\n  const handleChangeCategory1 = (value: any[], last: any) => {\n    setSelector1(value);\n  };\n\n  const handleCompleteCategory1 = (value: any[], last: any) => {};\n\n  // Filter\n  const seletorRef = useRef<any>();\n  const handleChangeCategory2 = (value: any, valueStr: any) => {\n    setSelector2(value);\n  };\n  const handleCompleteCategory2 = (value: any, valueStr: any) => {\n    seletorRef.current.toggle();\n  };\n\n  return (\n    <Frame grayBg style={{ overflow: 'hidden' }}>\n      <Block title=\"Basic\">\n        <Cascade\n          name=\"\u54c1\u7c7b\"\n          options={Categorys}\n          onChange={handleChangeCategory}\n          onComplete={handleCompleteCategory}\n          value={selector}\n        />\n      </Block>\n      <Block title=\"With Filter\">\n        <Filter zIndex={998}>\n          <Filter.Item title=\"\u54c1\u7c7b\" ref={seletorRef}>\n            <Cascade\n              name=\"\u54c1\u7c7b\"\n              options={Categorys}\n              onChange={handleChangeCategory2}\n              onComplete={handleCompleteCategory2}\n              value={selector2}\n            />\n          </Filter.Item>\n          <Filter.Item\n            label=\"\u4ef7\u683c\"\n            value={value3}\n            options={options1}\n            onChange={e => setValue3(e.key)}\n          />\n        </Filter>\n      </Block>\n      <View style={{ height: '500px' }} />\n      <Block title=\"With Cell and Popup\">\n        <Cell label=\"\u54c1\u7c7b\" arrow>\n          <CascadePopup\n            name=\"\u54c1\u7c7b\"\n            placeholder=\"\u8bf7\u9009\u62e9\"\n            options={Categorys}\n            onChange={handleChangeCategory1}\n            onComplete={handleCompleteCategory1}\n            value={selector1}\n            height=\"1024px\"\n          />\n        </Cell>\n      </Block>\n    </Frame>\n  );\n};\n",jsx:"import React, { useRef } from 'react';\nimport { View } from 'remax/one';\nimport { Cascade, CascadePopup, Cell, Filter } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport { Categorys } from '../../mock';\n\nconst options1 = [\n  {\n    key: '0',\n    value: '1000',\n  },\n  {\n    key: '1',\n    value: '2000',\n  },\n  {\n    key: '2',\n    value: '3000',\n  },\n];\nexport default () => {\n  const [selector, setSelector] = React.useState([]);\n  const [selector1, setSelector1] = React.useState([]);\n  const [selector2, setSelector2] = React.useState([]);\n  const [value3, setValue3] = React.useState('0');\n\n  const handleChangeCategory = (value, last) => {\n    setSelector(value);\n  };\n\n  const handleCompleteCategory = (value, last) => {};\n\n  const handleChangeCategory1 = (value, last) => {\n    setSelector1(value);\n  };\n\n  const handleCompleteCategory1 = (value, last) => {}; // Filter\n\n  const seletorRef = useRef();\n\n  const handleChangeCategory2 = (value, valueStr) => {\n    setSelector2(value);\n  };\n\n  const handleCompleteCategory2 = (value, valueStr) => {\n    seletorRef.current.toggle();\n  };\n\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n      style: {\n        overflow: 'hidden',\n      },\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(Cascade, {\n        name: '\\u54C1\\u7C7B',\n        options: Categorys,\n        onChange: handleChangeCategory,\n        onComplete: handleCompleteCategory,\n        value: selector,\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Filter',\n      },\n      /* #__PURE__ */ React.createElement(\n        Filter,\n        {\n          zIndex: 998,\n        },\n        /* #__PURE__ */ React.createElement(\n          Filter.Item,\n          {\n            title: '\\u54C1\\u7C7B',\n            ref: seletorRef,\n          },\n          /* #__PURE__ */ React.createElement(Cascade, {\n            name: '\\u54C1\\u7C7B',\n            options: Categorys,\n            onChange: handleChangeCategory2,\n            onComplete: handleCompleteCategory2,\n            value: selector2,\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(Filter.Item, {\n          label: '\\u4EF7\\u683C',\n          value: value3,\n          options: options1,\n          onChange: e => setValue3(e.key),\n        }),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(View, {\n      style: {\n        height: '500px',\n      },\n    }),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Cell and Popup',\n      },\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: '\\u54C1\\u7C7B',\n          arrow: true,\n        },\n        /* #__PURE__ */ React.createElement(CascadePopup, {\n          name: '\\u54C1\\u7C7B',\n          placeholder: '\\u8BF7\\u9009\\u62E9',\n          options: Categorys,\n          onChange: handleChangeCategory1,\n          onComplete: handleCompleteCategory1,\n          value: selector1,\n          height: '1024px',\n        }),\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-4",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"mock/index.ts":{path:"../../mock",content:"export const ReturnDeliveryWay = [\n  {\n    children: [\n      {\n        value: '\u516c\u53f8\u81ea\u53d6',\n        key: 'companySelfFetch',\n      },\n      {\n        value: '\u8d27\u62c9\u62c9',\n        key: 'companyHuoLaLa',\n      },\n      {\n        value: '\u5176\u4ed6\u7b2c\u4e09\u65b9\u7269\u6d41',\n        key: 'companyOtherLogistics',\n      },\n    ],\n    value: '\u516c\u53f8\u914d\u9001',\n    key: 'company',\n  },\n  {\n    children: [\n      {\n        value: '\u5ba2\u6237\u81ea\u9001',\n        key: 'customerSelfSend',\n      },\n      {\n        value: '\u8d27\u62c9\u62c9',\n        key: 'customerHuoLaLa',\n      },\n      {\n        value: '\u5176\u4ed6\u7b2c\u4e09\u65b9\u7269\u6d41',\n        key: 'customerOtherLogistics',\n      },\n    ],\n    value: '\u5ba2\u6237\u914d\u9001',\n    key: 'customer',\n  },\n];\n\nexport const Categorys = [\n  {\n    key: '20191217161304575-000001y6tyZNjU',\n    value: '\u8f85\u6750',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165823924-000002gO44PH4L',\n        value: '\u5305\u88c5\u888b',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656301-0000399wiWTEts',\n            value: 'PE',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656301-00004069R24fKd',\n            value: 'OPP',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656302-000041aYgkOREr',\n            value: '\u65e0\u7eba\u5e03',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656302-000042eCtjDn1k',\n            value: '\u6c14\u6ce1\u888b',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656302-000043UFAkA6vU',\n            value: '\u5305\u88c5\u76d2',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656302-0000442hqIqGoF',\n            value: '\u7279\u79cd\u819c',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165823925-000003lcmwrD8L',\n        value: '\u5546\u6807',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656303-000047tPRW1CcA',\n            value: '\u7ec7\u551b',\n            parentKey: '20191217165823925-000003lcmwrD8L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656303-000048AdtxHrs8',\n            value: '\u540a\u724c',\n            parentKey: '20191217165823925-000003lcmwrD8L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656303-0000498cYkKVZU',\n            value: '\u6d17\u6c34\u551b',\n            parentKey: '20191217165823925-000003lcmwrD8L',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165823925-000004jnmMJAhI',\n        value: '\u8863\u67b6',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: [\n          {\n            key: '20200207134709826-0000017IdxzBg1',\n            value: '\u5851\u6599\u8863\u67b6',\n            parentKey: '20191217165823925-000004jnmMJAhI',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165823925-000005zNvplXoZ',\n        value: '\u9b54\u672f\u8d34',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: [\n          {\n            key: '20200207134709841-000004CbGGqtSn',\n            value: '\u901a\u7528\u9b54\u672f\u8d34',\n            parentKey: '20191217165823925-000005zNvplXoZ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20200427132730707-000001Eb7GSuIf',\n        value: '\u540a\u7c92',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20200427132730717-000002NMWmmiYK',\n        value: '\u9632\u76d7\u6263',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20200427132730717-000003jRLoFOfD',\n        value: '\u7eb8\u5361',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304576-000002r1LOtUSo',\n    value: '\u88c5\u9970\u7247',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217162147778-000001JsV6LYt9',\n        value: '\u624b\u5de5\u9489\u73e0',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: [\n          {\n            key: '20191217163043957-0000018FENDbBC',\n            value: '\u6bdb\u6be1\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 3,\n            children: null,\n          },\n          {\n            key: '20191217163043959-000002wGATJohh',\n            value: '\u7eb1\u7c7b\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 4,\n            children: null,\n          },\n          {\n            key: '20191217163043959-000003YfJc0a7y',\n            value: '\u7ee3\u82b1\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 5,\n            children: null,\n          },\n          {\n            key: '20191217163043959-000004gQb8fOXl',\n            value: '\u88c1\u7247\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 6,\n            children: null,\n          },\n          {\n            key: '20191217163043960-000005p8It3KTK',\n            value: '\u8863\u9886\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 7,\n            children: null,\n          },\n          {\n            key: '20191217163043960-000006L6oJJMyg',\n            value: '\u6210\u8863\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 8,\n            children: null,\n          },\n          {\n            key: '20191217163043960-000007RptOyytA',\n            value: '\u7ec7\u5e26\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 9,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217162147782-000002fV02O3ca',\n        value: '\u673a\u5668\u6253\u73e0',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: [\n          {\n            key: '20191217163814286-000001uWoEKBrA',\n            value: '\u673a\u5668\u6253\u73cd\u73e0',\n            parentKey: '20191217162147782-000002fV02O3ca',\n            sort: 3,\n            children: null,\n          },\n          {\n            key: '20191217163814288-000002trUKEqmp',\n            value: '\u673a\u5668\u6253\u94bb',\n            parentKey: '20191217162147782-000002fV02O3ca',\n            sort: 4,\n            children: null,\n          },\n          {\n            key: '20191217163814288-000003IJia6iAW',\n            value: '\u673a\u5668\u6253\u91d1\u5c5e\u9489',\n            parentKey: '20191217162147782-000002fV02O3ca',\n            sort: 5,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217162147782-000003M6Y1PIl2',\n        value: '\u624b\u94a9\u82b1',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: null,\n      },\n      {\n        key: '20191217162147782-000004CgQkO75J',\n        value: '\u8863\u9886',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: null,\n      },\n      {\n        key: '20191217162147782-000005Ty3EoFjO',\n        value: '\u70eb\u753b',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304576-000003HHVXFr6e',\n    value: '\u523a\u7ee3',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232236-00000166H9exyS',\n        value: '\u7ee3\u82b1\u7ae0',\n        parentKey: '20191217161304576-000003HHVXFr6e',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430118-000001mc4VstBq',\n            value: '\u73e0\u7247\u7ee3',\n            parentKey: '20191217165232236-00000166H9exyS',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232237-000002Y1kBzGKT',\n        value: '\u88c1\u7247\u523a\u7ee3',\n        parentKey: '20191217161304576-000003HHVXFr6e',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430120-000002kvZwHAkn',\n            value: '\u73e0\u5b50\u7ee3',\n            parentKey: '20191217165232237-000002Y1kBzGKT',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232237-000003CgD4oONp',\n        value: '\u6210\u8863\u523a\u7ee3',\n        parentKey: '20191217161304576-000003HHVXFr6e',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430120-000003BvPrzoaN',\n            value: '\u76d8\u7ef3\u7ee3',\n            parentKey: '20191217165232237-000003CgD4oONp',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000004KyaioEsi',\n        value: '\u9762\u6599\u523a\u7ee3',\n        parentKey: '20191217161304576-000003HHVXFr6e',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430120-0000044F3f0sLK',\n            value: '\u7ebf\u7ee3/\u5e73\u7ee3',\n            parentKey: '20191217165232238-000004KyaioEsi',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430120-000005I63gL7tF',\n            value: '\u7259\u5237\u7ee3',\n            parentKey: '20191217165232238-000004KyaioEsi',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430121-000006PC2r6L31',\n            value: '\u6bdb\u5dfe\u7ee3',\n            parentKey: '20191217165232238-000004KyaioEsi',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430121-0000073c2ZeSAy',\n            value: '\u690d\u7ed2\u7ee3',\n            parentKey: '20191217165232238-000004KyaioEsi',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20191217161304576-000004FTr9G76t',\n    value: '\u82b1\u8fb9',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232238-000005yrkmxC6f',\n        value: '\u6c34\u6eb6\u82b1\u8fb9',\n        parentKey: '20191217161304576-000004FTr9G76t',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430121-000008FSnIRmdM',\n            value: '\u725b\u5976\u4e1d',\n            parentKey: '20191217165232238-000005yrkmxC6f',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430121-0000096Vs9uQ0R',\n            value: '\u68c9\u4e1d',\n            parentKey: '20191217165232238-000005yrkmxC6f',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430121-000010tDxNfTNC',\n            value: '\u6da4\u5149',\n            parentKey: '20191217165232238-000005yrkmxC6f',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000006pYONxAlu',\n        value: '\u857e\u4e1d\u82b1\u8fb9',\n        parentKey: '20191217161304576-000004FTr9G76t',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430121-000011VYPB6U7b',\n            value: '\u776b\u6bdb\u82b1\u8fb9',\n            parentKey: '20191217165232238-000006pYONxAlu',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000007ivSMOS92',\n        value: '\u523a\u7ee3\u82b1\u8fb9',\n        parentKey: '20191217161304576-000004FTr9G76t',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430121-000012dexmjeIf',\n            value: '\u68c9\u5e03\u7ee3',\n            parentKey: '20191217165232238-000007ivSMOS92',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430122-000013CRNBFK23',\n            value: '\u96d5\u5b54\u7ee3',\n            parentKey: '20191217165232238-000007ivSMOS92',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20191217161304576-000005RN9X3YFT',\n    value: '\u5143\u7d20',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232238-000008MglUKL6v',\n        value: '\u6c34\u94bb',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430122-0000141P9Tz4yw',\n            value: '\u82b1\u7bee\u722a',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430122-000015bMmUBISy',\n            value: '\u56db\u722a',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430122-000016Vt8nK231',\n            value: '\u5305\u6263',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430122-000017ucrwcbfx',\n            value: '\u7c98\u80f6',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430123-0000180mx2t9BL',\n            value: '\u88f8\u6c34\u94bb',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000009I56kLELs',\n        value: '\u94bb\u94fe',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430123-000019aZy65KbG',\n            value: '\u5355\u6392\u94bb\u94fe',\n            parentKey: '20191217165232238-000009I56kLELs',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430123-000020sBM1lVrC',\n            value: '\u7ec4\u5408\u94bb\u94fe',\n            parentKey: '20191217165232238-000009I56kLELs',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430123-000021Tg0mAI20',\n            value: '\u94bb\u7f51',\n            parentKey: '20191217165232238-000009I56kLELs',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000010CIhXWh7P',\n        value: '\u6c34\u6676',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430123-000022t2wJHZWG',\n            value: '\u5c16\u5e95\u6c34\u6676',\n            parentKey: '20191217165232238-000010CIhXWh7P',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430123-0000238vmPQmJc',\n            value: '\u5e73\u5e95\u6c34\u6676',\n            parentKey: '20191217165232238-000010CIhXWh7P',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-0000115uliki3x',\n        value: '\u6c34\u6676\u73e0',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232238-000012wyxWG27j',\n        value: '\u918b\u9178\u677f\u6750',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232238-000013xYUqVQb4',\n        value: '\u70eb\u77f3',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430124-000024TEPGQYbl',\n            value: '\u70eb\u94bb',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-000025qCudkwHK',\n            value: '\u94dd\u70eb\u7247',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-0000266timdVxn',\n            value: '\u94dc\u70eb\u7247',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-000027k9heSLmy',\n            value: '\u73cd\u73e0\u70eb\u7247',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-000028uQLunj2D',\n            value: '\u6811\u8102\u70eb',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-000029i1UqkwGh',\n            value: '\u4e9a\u514b\u529b\u70eb',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232239-000014JrMYVHhM',\n        value: '\u5c3f\u7d20\u73e0',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232239-0000154JEiSkDU',\n        value: '\u4eff\u73cd\u73e0',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232239-000016w3UwMSLn',\n        value: '\u6811\u8102',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430124-000030KiG9kCZt',\n            value: '\u5c16\u5e95\u6811\u8102',\n            parentKey: '20191217165232239-000016w3UwMSLn',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430125-000031MqyFnI35',\n            value: '\u5e73\u5e95\u6811\u8102',\n            parentKey: '20191217165232239-000016w3UwMSLn',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430125-000032B4Lbm1yI',\n            value: '\u6811\u8102\u677f\u6750',\n            parentKey: '20191217165232239-000016w3UwMSLn',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232239-000017hyf9ZTce',\n        value: '\u4e9a\u514b\u529b',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430125-000033kl68NHe8',\n            value: '\u5c16\u5e95\u4e9a\u514b\u529b',\n            parentKey: '20191217165232239-000017hyf9ZTce',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430125-000034bNEkm1JS',\n            value: '\u5e73\u5e95\u4e9a\u514b\u529b',\n            parentKey: '20191217165232239-000017hyf9ZTce',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430125-000035IbpW6shj',\n            value: '\u4e9a\u514b\u529b\u677f\u6750',\n            parentKey: '20191217165232239-000017hyf9ZTce',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232239-000018X2VXnwJr',\n        value: '\u6ef4\u6cb9',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430125-000036StiCLSoY',\n            value: '\u6ef4\u6cb9\u94bb',\n            parentKey: '20191217165232239-000018X2VXnwJr',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430126-000037DcQr4Y6r',\n            value: '\u6ef4\u6cb9\u82b1',\n            parentKey: '20191217165232239-000018X2VXnwJr',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232239-000019pWyf1m8E',\n        value: '\u73e0\u5b50',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232239-000020rhGd9Exh',\n        value: '\u73e0\u7ba1',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232239-000021keUzT6bA',\n        value: '\u73e0\u7247',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-0000062lDupQwh',\n    value: '\u7ec7\u5e26',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232240-000022FVYyI6KA',\n        value: '\u677e\u7d27\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-000023XUanCWUJ',\n        value: '\u7ef3\u5b50',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430126-000038eLf0Tg9V',\n            value: '\u68c9\u7ef3',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: [\n              {\n                key: '20191217171318553-000001fJ1nTKgF',\n                value: '\u6241\u7ef3',\n                parentKey: '20191217170430126-000038eLf0Tg9V',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000002CM2D2GqJ',\n                value: '\u7f16\u7ec7\u7ef3',\n                parentKey: '20191217170430126-000038eLf0Tg9V',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000003pvgWKty2',\n                value: '\u5706\u7ef3',\n                parentKey: '20191217170430126-000038eLf0Tg9V',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20191217170430126-000039PUsVEnfM',\n            value: '\u6da4\u68c9',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430126-000040vgGwM3BI',\n            value: 'PP\u4e19\u7eb6',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430126-000041iRWU94sR',\n            value: '\u6da4\u7eb6(\u5706\u7ef3)',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: [\n              {\n                key: '20191217171318554-000004u64rvFci',\n                value: '\u7f16\u7ec7\u5706\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000005D82CJ2Zh',\n                value: '\u87ba\u7eb9\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000006AM320zG1',\n                value: '\u7f0e\u7eb9\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000007cD2sAorC',\n                value: '\u683c\u5b50\u7eb9',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-0000084gSupYXT',\n                value: '\u5706\u70b9\u7eb9',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-000009jMr56TvB',\n                value: '\u4eba\u5b57\u7eb9',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-000010giPOme5z',\n                value: '\u63d0\u82b1',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-0000114j3DTdyv',\n                value: '\u5e73\u7eb9\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-0000124dp8ALZu',\n                value: '\u5bc6\u7ec7\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20191217170430126-000042V2yKelNY',\n            value: '\u9526\u7eb6',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430127-000043Xhx3U4Pk',\n            value: '\u4e73\u80f6/\u50cf\u7b4b\u7ef3',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: [\n              {\n                key: '20191217171318555-0000138UnKaeCt',\n                value: '\u900f\u660e\u6241\u7ef3',\n                parentKey: '20191217170430127-000043Xhx3U4Pk',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-000014ey7W2NOj',\n                value: '\u5706\u7ef3',\n                parentKey: '20191217170430127-000043Xhx3U4Pk',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20191217170656292-000001T2mnDeIP',\n            value: '\u4eba\u9020\u4e1d',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656294-000002674NqDCg',\n            value: '\u5c3c\u9f99',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656294-000003re8ap0Hi',\n            value: '\u5316\u7ea4',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656294-000004JWEXgdHy',\n            value: '\u9ebb\u7ef3',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232240-000024z4jTsIAh',\n        value: '\u87ba\u7eb9',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-000025VNHMU170',\n        value: '\u5e3d\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-0000265uM1zXBk',\n        value: '\u4e1d\u7ed2\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-000027PgvfnF0C',\n        value: '\u91d1\u94f6\u8471\u7ec7\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-000028xlHru6lj',\n        value: '\u4e8c\u6b21\u5de5\u827a\u7ec7\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656295-000005DbDFXz0U',\n            value: '\u5c0f\u9999\u98ce\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-000006C7kIWn1n',\n            value: '\u6bdb\u5dfe\u7ee3\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-0000079klbAYsR',\n            value: '\u73e0\u7247\u7ee3\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-000008eat014IA',\n            value: 'TPU\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-000009JXZg7Fbj',\n            value: '\u6c11\u65cf\u98ce\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-000010FnPul1N0',\n            value: '\u4e94\u91d1\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232240-000029kdoKB8AZ',\n        value: '\u6d41\u82cf',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656296-000011whdNoZP3',\n            value: 'U\u578b/I\u578b\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656296-0000125i0Lb9zp',\n            value: '\u540a\u7a57\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656296-000013LfGEyCMB',\n            value: '\u76ae\u8d28\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656296-000014vN8M7dt7',\n            value: '\u4eae\u7247\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656296-000015dDY8NQ7N',\n            value: '\u73e0\u94bb\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-000007RvNnXMgX',\n    value: '\u4e94\u91d1',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232240-000030bweCQhxN',\n        value: '\u94fe\u6761',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657971-0000015c4MFng6',\n        value: '\u6c14\u773c',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657972-000002Lv0YsTin',\n        value: '\u94c6\u9489\u7c7b',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-000003tjwHCvBl',\n        value: '\u80f8\u9488',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-000004wTF2ZyE4',\n        value: '\u540a\u949f',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-000005yX7GUQOQ',\n        value: '\u91d1\u5c5e\u73af',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656297-000016fOKXol0z',\n            value: '\u65e5\u5b57\u73af',\n            parentKey: '20191217165657973-000005yX7GUQOQ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656297-000017FskDddgE',\n            value: 'D\u5b57\u73af',\n            parentKey: '20191217165657973-000005yX7GUQOQ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657973-000006F6cXFSYy',\n        value: '\u4e94\u91d1\u9970\u54c1',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656297-0000184Jd9TRtJ',\n            value: '\u94dc\u7c7b\u9970\u54c1',\n            parentKey: '20191217165657973-000006F6cXFSYy',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656297-000019sRveH0fP',\n            value: '\u950c\u5408\u91d1\u9970\u54c1',\n            parentKey: '20191217165657973-000006F6cXFSYy',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656298-000020wakZDCyA',\n            value: '\u7ec4\u5408\u9970\u54c1',\n            parentKey: '20191217165657973-000006F6cXFSYy',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-000008HsmOlG2W',\n    value: '\u7ebd\u6263',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165657973-000007o31Z6lyw',\n        value: '\u94bb\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656298-0000214QdZt0ak',\n            value: '\u5408\u91d1\u94bb\u6263',\n            parentKey: '20191217165657973-000007o31Z6lyw',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656298-000022PKF0mV1r',\n            value: 'ABS\u7c98\u94bb\u6263',\n            parentKey: '20191217165657973-000007o31Z6lyw',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656298-000023IRsreTfR',\n            value: '\u73cd\u73e0\u7ec4\u5408\u94bb\u6263',\n            parentKey: '20191217165657973-000007o31Z6lyw',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657973-0000080UuZhY3V',\n        value: '\u6c34\u6676\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-000009N2w7blXD',\n        value: '\u6811\u8102\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-0000100bCa6Vc7',\n        value: '\u918b\u9178\u677f\u6750\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657974-000011NPbUPhAK',\n        value: '\u5305\u5e03\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657974-000012JcZm9nla',\n        value: '\u56db\u5408\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656298-000024mkSTQQK8',\n            value: '\u9762\u677f',\n            parentKey: '20191217165657974-000012JcZm9nla',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656299-000025kawKkDbO',\n            value: '\u4e0b\u4e09\u4ef6',\n            parentKey: '20191217165657974-000012JcZm9nla',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657974-000013iiAWdkTL',\n        value: '\u91d1\u5c5e\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656299-000026UPO56ZC3',\n            value: '\u65e5\u5b57\u6263',\n            parentKey: '20191217165657974-000013iiAWdkTL',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656299-000027UriRNFog',\n            value: 'D\u5b57\u6263',\n            parentKey: '20191217165657974-000013iiAWdkTL',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656299-000028W4ScFbD0',\n            value: '\u4e94\u722a\u6263',\n            parentKey: '20191217165657974-000013iiAWdkTL',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656299-000029OOjaYjoJ',\n            value: '\u5de5\u5b57\u6263',\n            parentKey: '20191217165657974-000013iiAWdkTL',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657974-0000141GLhUHVz',\n        value: '\u5f39\u7c27\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656299-0000300M8MpigQ',\n            value: '\u5730\u96f7\u6263',\n            parentKey: '20191217165657974-0000141GLhUHVz',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656300-000031PtfsRGxv',\n            value: '\u5927\u7af9\u8282\u5f39\u7c27\u6263',\n            parentKey: '20191217165657974-0000141GLhUHVz',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656300-000032H4NE3wuY',\n            value: '\u53cc\u5934\u5f39\u7c27\u6263',\n            parentKey: '20191217165657974-0000141GLhUHVz',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656300-000033emnUX2Gw',\n            value: '\u5355\u5934\u5f39\u7c27\u6263',\n            parentKey: '20191217165657974-0000141GLhUHVz',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657974-000015eIs6S1GZ',\n        value: '\u6697\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656300-0000349J7FFIa6',\n            value: '\u91d1\u5c5e',\n            parentKey: '20191217165657974-000015eIs6S1GZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656300-000035pWgaROfZ',\n            value: '\u6811\u8102',\n            parentKey: '20191217165657974-000015eIs6S1GZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656301-000036YEOBRkDl',\n            value: '\u5305\u5e03',\n            parentKey: '20191217165657974-000015eIs6S1GZ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657974-000016voKKPOE9',\n        value: '\u725b\u89d2\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657974-0000178Syd6uqO',\n        value: '\u8d1d\u58f3\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657974-000018gXZz0iLB',\n        value: '\u6930\u5b50\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000019nKObN65V',\n        value: '\u6728\u5934\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20200414111318783-000001AYXiigA4',\n        value: '\u5361\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-000009kakIYneM',\n    value: '\u7f1d\u7eab\u7ebf',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217170656301-000037OrpfP8R1',\n        value: '\u6da4\u7eb6\u7f1d\u7eab\u7ebf',\n        parentKey: '20191217161304577-000009kakIYneM',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217170656301-000037OrpfP8RD',\n        value: '\u4f4e\u5f39\u4e1d',\n        parentKey: '20191217161304577-000009kakIYneM',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217170656301-000038RebaC6Pc',\n        value: '\u9ad8\u5f3a\u7ebf',\n        parentKey: '20191217161304577-000009kakIYneM',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-000010MmFCiK6I',\n    value: '\u91cc\u5e03',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165657975-000021Fiiskon1',\n        value: '\u96ea\u7eba',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000022F31oZ869',\n        value: '\u8272\u4e01',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000023van83q8e',\n        value: '\u9488\u7ec7',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000024lVAwJLPt',\n        value: '\u918b\u9178',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000025CnovdiJo',\n        value: '\u6da4\u5854\u592b',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000026smSLbU0R',\n        value: '\u6625\u4e9a\u7eba',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657976-000027E6qtGc83',\n        value: '\u8212\u7f8e\u7ef8',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165823923-0000010GHOJdYD',\n        value: '\u80c6\u5e03',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20200226091842647-000001yM5dZfDy',\n    value: '\u533b\u7597\u7528\u54c1',\n    parentKey: '0',\n    sort: 0,\n    children: [\n      {\n        key: '20200226091842649-0000025gFxW5l2',\n        value: '\u53e3\u7f69',\n        parentKey: '20200226091842647-000001yM5dZfDy',\n        sort: 0,\n        children: [\n          {\n            key: '20200226091842649-000004vCuabYKH',\n            value: '\u53e3\u7f69\u7ef3\u5b50',\n            parentKey: '20200226091842649-0000025gFxW5l2',\n            sort: 0,\n            children: [\n              {\n                key: '20200226091842650-000008pIo29kKY',\n                value: '\u6241\u7ef3',\n                parentKey: '20200226091842649-000004vCuabYKH',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842650-000009eIUMUpCq',\n                value: '\u5706\u5f62\u7ef3',\n                parentKey: '20200226091842649-000004vCuabYKH',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20200226091842649-000005rbAn6Lmm',\n            value: '\u53e3\u7f69\u9f3b\u6881\u6761',\n            parentKey: '20200226091842649-0000025gFxW5l2',\n            sort: 0,\n            children: [\n              {\n                key: '20200226091842650-000010Av15mvpG',\n                value: '\u5355\u94c1\u4e1d\u9f3b\u6881\u6761',\n                parentKey: '20200226091842649-000005rbAn6Lmm',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842650-000011TjOPF5Qz',\n                value: '\u5851\u6599\u9f3b\u6881\u6761',\n                parentKey: '20200226091842649-000005rbAn6Lmm',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20200226091842649-0000063CryWbUA',\n            value: '\u53e3\u7f69\u5e03\u6599',\n            parentKey: '20200226091842649-0000025gFxW5l2',\n            sort: 0,\n            children: [\n              {\n                key: '20200226091842650-000012xUA5yPhG',\n                value: '\u65e0\u7eba\u5e03',\n                parentKey: '20200226091842649-0000063CryWbUA',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842650-0000134NbHyUhr',\n                value: '\u7eba\u9ecf\u5e03',\n                parentKey: '20200226091842649-0000063CryWbUA',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842650-000014AJRbZ0Vc',\n                value: '\u7194\u55b7\u5e03',\n                parentKey: '20200226091842649-0000063CryWbUA',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        key: '20200226091842649-000003rv7VLKkK',\n        value: '\u9632\u62a4\u670d',\n        parentKey: '20200226091842647-000001yM5dZfDy',\n        sort: 0,\n        children: [\n          {\n            key: '20200226091842649-0000079Tp494QF',\n            value: '\u9632\u62a4\u670d\u62c9\u94fe',\n            parentKey: '20200226091842649-000003rv7VLKkK',\n            sort: 0,\n            children: [\n              {\n                key: '20200226091842651-000015jxNcTAcj',\n                value: '\u4e00\u822c\u5c3c\u9f99\u62c9\u94fe',\n                parentKey: '20200226091842649-0000079Tp494QF',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842651-000016lEOhJjOR',\n                value: '\u9632\u6c34\u62c9\u94fe',\n                parentKey: '20200226091842649-0000079Tp494QF',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20200309140701867-000007HFFNjGOQ',\n    value: '\u7eba\u7c98\u5e03',\n    parentKey: '0',\n    sort: 0,\n    children: [\n      {\n        key: '20200309140701867-000008JZbEaoZQ',\n        value: '\u7eba\u7c98\u5e03SS\u7ea7\u522b',\n        parentKey: '20200309140701867-000007HFFNjGOQ',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20200309140701867-000009a5QWRoXk',\n        value: '\u7eba\u7c98\u5e03SSS\u7ea7\u522b',\n        parentKey: '20200309140701867-000007HFFNjGOQ',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n];\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"cascade-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#cascade-1"},o.a.createElement("span",{className:"icon icon-link"})),"Cascade"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u6307\u5b9a\u5f53\u524d\u9009\u4e2d\u7684\u6761\u76ee"),o.a.createElement("td",null,"OptionProps"),o.a.createElement("td",null,o.a.createElement("code",null,"[]"))),o.a.createElement("tr",null,o.a.createElement("td",null,"options"),o.a.createElement("td",null,"\u53ef\u9009\u9879\u6570\u636e\u6e90"),o.a.createElement("td",null,"OptionProps"),o.a.createElement("td",null,o.a.createElement("code",null,"[]"))),o.a.createElement("tr",null,o.a.createElement("td",null,"name"),o.a.createElement("td",null,"Cascade\u7684\u540d\u79f0"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"height"),o.a.createElement("td",null,"Cascade\u7684\u9ad8\u5ea6"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"className"),o.a.createElement("td",null,"Cascade\u7684\u7c7b\u540d"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"prompt"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u5df2\u9009\u62e9\u7684\u9009\u9879\u7684\u63d0\u793a"),o.a.createElement("td",null,"(e: any) => string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"\u9009\u62e9\u5b8c\u6210\u540e\u7684\u56de\u8c03"),o.a.createElement("td",null,"(v: any[], last?: any) => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onComplete"),o.a.createElement("td",null,"\u9009\u62e9\u6700\u540e\u4e00\u7ea7\u8282\u70b9\u65f6\u8c03\u7528\u6b64\u51fd\u6570"),o.a.createElement("td",null,"(v: any[], last?: any)"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"optionprops"},o.a.createElement("a",{"aria-hidden":"true",href:"#optionprops"},o.a.createElement("span",{className:"icon icon-link"})),"OptionProps"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"key"),o.a.createElement("td",null,"\u6b64\u9879\u5fc5\u987b\u8bbe\u7f6e\uff08\u5176\u503c\u5728\u6574\u4e2a\u9009\u9879\u8303\u56f4\u5185\u552f\u4e00\uff09\uff0c\u6839\u636e\u6b64\u5c5e\u6027\u503c\u8fdb\u884c\u7b5b\u9009"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u503c"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"parentKey"),o.a.createElement("td",null,"\u7236\u8282\u70b9key\u503c"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"children"),o.a.createElement("td",null,"\u5b50\u8282\u70b9"),o.a.createElement("td",null,"OptionProps[]"),o.a.createElement("td",null,"-"))))))}},"0pSW":function(n,e,t){var r=t("MMxC"),a=t("ls1J"),o=t("f1E4"),i=a.get,l=a.toKey;r({target:"Reflect",stat:!0},{getOwnMetadata:function(n,e){var t=arguments.length<3?void 0:l(arguments[2]);return i(n,o(e),t)}})},"0qr0":function(n,e,t){var r=t("EzR6"),a=t("FCfD");n.exports=function(n){return r(a(n))}},"1/Kc":function(n,e,t){"use strict";t.r(e);t("Xn8V"),t("6spV"),t("wpse"),t("KUpu"),t("8OGu"),t("n7Qr"),t("VQRL"),t("SGZ1"),t("nEGZ"),t("IC/V"),t("H8Ov"),t("aHGi"),t("0O5u"),t("5qeZ"),t("NYJX"),t("mLN8"),t("YJpY"),t("7V/p"),t("dLjG"),t("fF/C"),t("CDr+"),t("FbcW"),t("wwZZ"),t("+l9e"),t("vnQr"),t("5Blz"),t("X6vt"),t("hilM"),t("wdPq"),t("u6eR"),t("v/6r"),t("fDrP"),t("1vuE"),t("Q3OH"),t("nDqD"),t("4rKd"),t("X5kU"),t("4Mzw"),t("Pp3M"),t("v0/P"),t("sdAH"),t("EgRx"),t("izsi"),t("xtlo"),t("p1ln"),t("ZahQ"),t("nZC5"),t("HjuX"),t("A9H8"),t("B/G0"),t("Dyhc"),t("WQuA"),t("Qqe/"),t("J428"),t("s1ay"),t("Rw1i"),t("quHW"),t("YjZU"),t("O9az"),t("2KAr"),t("3dhw"),t("zTPR"),t("rpUR"),t("9/ry"),t("z9fm"),t("43iI"),t("mcGr"),t("rUU2"),t("6cL7"),t("ZDb2"),t("EOz7"),t("JI6M"),t("beyn"),t("A+b4"),t("3Us1"),t("eP3D"),t("Mn2j"),t("BtTS"),t("yiTY"),t("Uc1W"),t("y36+"),t("gweS"),t("URK0"),t("1jPx"),t("8Lo7"),t("I5+W"),t("ti1D"),t("NQz/"),t("UHn5"),t("/vMi"),t("nkhd"),t("+u1y"),t("9BQv"),t("Tz1E"),t("U9fH"),t("+4le"),t("jIZW"),t("oYEA"),t("7yTQ"),t("jHRr"),t("Rka6"),t("8Ubs"),t("FK48"),t("Auwt"),t("KAxK"),t("/0sN"),t("VvX1"),t("2aV/"),t("aKtI"),t("VUky"),t("9bAj"),t("xF6R"),t("Dbv2"),t("KHCi"),t("i/DM"),t("hYqy"),t("JXee"),t("+Hw1"),t("FBts"),t("3UWB"),t("S5nV"),t("xD7I"),t("aNdP"),t("UIoa"),t("Osgv"),t("FKIO"),t("Sf9Y"),t("VuYY"),t("ue5M"),t("80Z6"),t("qkSU"),t("xaQh"),t("GPZX"),t("eCow"),t("/R3g"),t("0pSW"),t("85tw"),t("UvYY"),t("DVoG"),t("aLaE"),t("fQri"),t("RDHo"),t("9Rzw"),t("iMhB"),t("/mKc"),t("u6Ie"),t("9znl"),t("+GPJ"),t("haHa"),t("RhWa"),t("PUJJ"),t("YceZ"),t("jksQ"),t("FuvP"),t("Uq4z"),t("+2a4"),t("Gw+j"),t("CO2k"),t("rVgK"),t("ecuC"),t("HQPm"),t("IbaC"),t("s00F"),t("V0Bj"),t("hwEL"),t("d/5L"),t("oJGl"),t("6FCX"),t("OAmA"),t("p6E5"),t("Xxk+"),t("L5O0"),t("bcvT"),t("CRpX"),t("aRU8"),t("p5yU"),t("dnZx"),t("NMu4"),t("5JgN"),t("ls82");var r=t("VCU9"),a=t("ogwx"),o=t("LtsZ"),i=t("zlVK"),l=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return r["a"].applyPlugins({key:"render",type:o["ApplyPluginsType"].compose,initialValue:()=>Object(i["renderClient"])({routes:t("5eRu").routes,plugin:r["a"],history:Object(a["a"])(n.hot),rootElement:"root",defaultTitle:"Anna Remax UI"}),args:n})},s=l();e["default"]=s();window.g_umi={version:"3.1.3"}},"16Al":function(n,e,t){"use strict";var r=t("WbBG");function a(){}function o(){}o.resetWarningCache=a,n.exports=function(){function n(n,e,t,a,o,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function e(){return n}n.isRequired=n;var t={array:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:e,element:n,elementType:n,instanceOf:e,node:n,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:o,resetWarningCache:a};return t.PropTypes=t,t}},"17x9":function(n,e,t){n.exports=t("16Al")()},"187H":function(n,e,t){},"1Cbe":function(n,e,t){var r=t("2kyd"),a=r("toStringTag"),o={};o[a]="z",n.exports="[object z]"===String(o)},"1EFV":function(n,e,t){},"1H91":function(n,e,t){"use strict";var r=t("7BAe"),a=t("cTDu"),o=t("Y3g6"),i=t("bF+Q"),l=t("oa35"),s=t("arQb"),c=t("9SZg");n.exports=function(n){var e,t,p,u,d,m,f=a(n),h="function"==typeof this?this:Array,x=arguments.length,g=x>1?arguments[1]:void 0,y=void 0!==g,C=c(f),w=0;if(y&&(g=r(g,x>2?arguments[2]:void 0,2)),void 0==C||h==Array&&i(C))for(e=l(f.length),t=new h(e);e>w;w++)m=y?g(f[w],w):f[w],s(t,w,m);else for(u=C.call(f),d=u.next,t=new h;!(p=d.call(u)).done;w++)m=y?o(u,g,[p.value,w],!0):p.value,s(t,w,m);return t.length=w,t}},"1L6A":function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t.n(a),i=t("YCKM"),l=t("f4X2"),s=t("IOv4"),c=t("qC7B"),p=[{key:"0",value:"1000"},{key:"1",value:"2000"},{key:"2",value:"3000"}];e["default"]=()=>{var n=o.a.useState([]),e=Object(r["a"])(n,2),t=e[0],u=e[1],d=o.a.useState([]),m=Object(r["a"])(d,2),f=m[0],h=m[1],x=o.a.useState([]),g=Object(r["a"])(x,2),y=g[0],C=g[1],w=o.a.useState("0"),v=Object(r["a"])(w,2),b=v[0],k=v[1],V=(n,e)=>{u(n)},P=(n,e)=>{},N=(n,e)=>{h(n)},R=(n,e)=>{},S=Object(a["useRef"])(),T=(n,e)=>{C(n)},E=(n,e)=>{S.current.toggle()};return o.a.createElement(s["b"],{grayBg:!0,style:{overflow:"hidden"}},o.a.createElement(s["a"],{title:"Basic"},o.a.createElement(l["c"],{name:"\u54c1\u7c7b",options:c["a"],onChange:V,onComplete:P,value:t})),o.a.createElement(s["a"],{title:"With Filter"},o.a.createElement(l["g"],{zIndex:998},o.a.createElement(l["g"].Item,{title:"\u54c1\u7c7b",ref:S},o.a.createElement(l["c"],{name:"\u54c1\u7c7b",options:c["a"],onChange:T,onComplete:E,value:y})),o.a.createElement(l["g"].Item,{label:"\u4ef7\u683c",value:b,options:p,onChange:n=>k(n.key)}))),o.a.createElement(i["d"],{style:{height:"15.63rem"}}),o.a.createElement(s["a"],{title:"With Cell and Popup"},o.a.createElement(l["e"],{label:"\u54c1\u7c7b",arrow:!0},o.a.createElement(l["d"],{name:"\u54c1\u7c7b",placeholder:"\u8bf7\u9009\u62e9",options:c["a"],onChange:N,onComplete:R,value:f,height:"32rem"}))))}},"1aI8":function(n,e,t){var r,a,o,i=t("ZkJ9"),l=t("ukPv"),s=t("tSXo"),c=t("lz10"),p=t("jtLI"),u=t("CjUg"),d=t("6ixQ"),m=l.WeakMap,f=function(n){return o(n)?a(n):r(n,{})},h=function(n){return function(e){var t;if(!s(e)||(t=a(e)).type!==n)throw TypeError("Incompatible receiver, "+n+" required");return t}};if(i){var x=new m,g=x.get,y=x.has,C=x.set;r=function(n,e){return C.call(x,n,e),e},a=function(n){return g.call(x,n)||{}},o=function(n){return y.call(x,n)}}else{var w=u("state");d[w]=!0,r=function(n,e){return c(n,w,e),e},a=function(n){return p(n,w)?n[w]:{}},o=function(n){return p(n,w)}}n.exports={set:r,get:a,has:o,enforce:f,getterFor:h}},"1dBY":function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("/8bt")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"filter"},o.a.createElement("a",{"aria-hidden":"true",href:"#filter"},o.a.createElement("span",{className:"icon icon-link"})),"Filter"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:"import React, { useRef } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { Filter, Tag } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nconst { CheckableTag } = Tag;\n\nconst options = [\n  {\n    key: '0',\n    value: '\u88c5\u9970\u7247',\n  },\n  {\n    key: '1',\n    value: '\u7ec7\u5e26',\n  },\n  {\n    key: '2',\n    value: '\u7f1d\u7eab\u7ebf',\n  },\n  {\n    key: '3',\n    value: '\u82b1\u8fb9',\n  },\n  {\n    key: '4',\n    value: '\u73e0\u94bb',\n  },\n];\n\nconst options1 = [\n  {\n    key: '0',\n    value: '1000',\n  },\n  {\n    key: '1',\n    value: '2000',\n  },\n  {\n    key: '2',\n    value: '3000',\n  },\n];\n\nexport default () => {\n  const moreRef = useRef<any>();\n  const [value, setValue] = React.useState();\n  const [value1, setValue1] = React.useState();\n  const [value2, setValue2] = React.useState('2');\n  const [checked1, setChecked1] = React.useState(false);\n  const [checked2, setChecked2] = React.useState(false);\n  const [checked3, setChecked3] = React.useState(false);\n  const [checked4, setChecked4] = React.useState(false);\n\n  const handleComplete = () => {\n    moreRef.current.toggle();\n  };\n\n  const handleReset = () => {\n    setChecked1(false);\n    setChecked2(false);\n    setChecked3(false);\n    setChecked4(false);\n  };\n\n  return (\n    <Frame grayBg style={{ overflow: 'hidden' }}>\n      <Block title=\"Basic\">\n        <Filter style={{ zIndex: 5 }}>\n          <Filter.Item\n            title=\"\u54c1\u7c7b\"\n            value={value}\n            options={options}\n            onChange={e => setValue(e.key)}\n          />\n          <Filter.Item\n            title=\"\u4ef7\u683c\"\n            value={value1}\n            options={options1}\n            onChange={e => setValue1(e.key)}\n          />\n        </Filter>\n      </Block>\n      <Block title=\"Custom\">\n        <Filter style={{ zIndex: 4 }}>\n          <Filter.Item\n            title=\"\u54c1\u7c7b\"\n            value={value2}\n            options={options}\n            onChange={e => setValue2(e.key)}\n          />\n          <Filter.Item title=\"\u66f4\u591a\" ref={moreRef}>\n            <View className={styles.custom}>\n              <View className={styles.tags}>\n                <View className={styles.tag}>\n                  <View className={styles.title}>\u54c1\u8d28</View>\n                  <CheckableTag checked={checked1} onChange={v => setChecked1(v)}>\n                    \u5927\u4f17\u4f18\u9009\n                  </CheckableTag>\n                  <CheckableTag checked={checked2} onChange={v => setChecked2(v)}>\n                    \u70b9\u8bc4\u9ad8\u5206\n                  </CheckableTag>\n                </View>\n                <View className={styles.tag}>\n                  <View className={styles.title}>\u901f\u5ea6</View>\n                  <CheckableTag checked={checked3} onChange={() => setChecked3(v => !v)}>\n                    60\u5206\u949f\u5185\n                  </CheckableTag>\n                  <CheckableTag checked={checked4} onChange={() => setChecked4(v => !v)}>\n                    40\u5206\u949f\u5185\n                  </CheckableTag>\n                </View>\n              </View>\n              <View className={styles.action}>\n                <View\n                  className={classNames({\n                    [styles.btn]: true,\n                    [styles.reset]: true,\n                  })}\n                  onTap={handleReset}\n                >\n                  \u91cd\u7f6e\n                </View>\n                <View\n                  className={classNames({\n                    [styles.btn]: true,\n                    [styles.complete]: true,\n                  })}\n                  onTap={handleComplete}\n                >\n                  \u5b8c\u6210\n                </View>\n              </View>\n            </View>\n          </Filter.Item>\n        </Filter>\n      </Block>\n      <Block title=\"ActiveColor\">\n        <Filter style={{ zIndex: 3 }}>\n          <Filter.Item\n            title=\"\u54c1\u7c7b\"\n            value={value}\n            options={options}\n            onChange={e => setValue(e.key)}\n            activeColor=\"#FF9999\"\n          />\n          <Filter.Item\n            title=\"\u4ef7\u683c\"\n            value={value1}\n            options={options1}\n            onChange={e => setValue1(e.key)}\n            activeColor=\"#FF9999\"\n          />\n        </Filter>\n      </Block>\n      <Block title=\"Disabled\">\n        <Filter style={{ zIndex: 2 }}>\n          <Filter.Item\n            title=\"\u54c1\u7c7b\"\n            value={value}\n            options={options}\n            onChange={e => setValue(e.key)}\n            disabled\n          />\n          <Filter.Item\n            title=\"\u4ef7\u683c\"\n            value={value1}\n            options={options1}\n            onChange={e => setValue1(e.key)}\n            disabled\n          />\n        </Filter>\n      </Block>\n    </Frame>\n  );\n};\n",jsx:"import React, { useRef } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { Filter, Tag } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nconst { CheckableTag } = Tag;\nconst options = [\n  {\n    key: '0',\n    value: '\u88c5\u9970\u7247',\n  },\n  {\n    key: '1',\n    value: '\u7ec7\u5e26',\n  },\n  {\n    key: '2',\n    value: '\u7f1d\u7eab\u7ebf',\n  },\n  {\n    key: '3',\n    value: '\u82b1\u8fb9',\n  },\n  {\n    key: '4',\n    value: '\u73e0\u94bb',\n  },\n];\nconst options1 = [\n  {\n    key: '0',\n    value: '1000',\n  },\n  {\n    key: '1',\n    value: '2000',\n  },\n  {\n    key: '2',\n    value: '3000',\n  },\n];\nexport default () => {\n  const moreRef = useRef();\n  const [value, setValue] = React.useState();\n  const [value1, setValue1] = React.useState();\n  const [value2, setValue2] = React.useState('2');\n  const [checked1, setChecked1] = React.useState(false);\n  const [checked2, setChecked2] = React.useState(false);\n  const [checked3, setChecked3] = React.useState(false);\n  const [checked4, setChecked4] = React.useState(false);\n\n  const handleComplete = () => {\n    moreRef.current.toggle();\n  };\n\n  const handleReset = () => {\n    setChecked1(false);\n    setChecked2(false);\n    setChecked3(false);\n    setChecked4(false);\n  };\n\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n      style: {\n        overflow: 'hidden',\n      },\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(\n        Filter,\n        {\n          style: {\n            zIndex: 5,\n          },\n        },\n        /* #__PURE__ */ React.createElement(Filter.Item, {\n          title: '\\u54C1\\u7C7B',\n          value,\n          options,\n          onChange: e => setValue(e.key),\n        }),\n        /* #__PURE__ */ React.createElement(Filter.Item, {\n          title: '\\u4EF7\\u683C',\n          value: value1,\n          options: options1,\n          onChange: e => setValue1(e.key),\n        }),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Custom',\n      },\n      /* #__PURE__ */ React.createElement(\n        Filter,\n        {\n          style: {\n            zIndex: 4,\n          },\n        },\n        /* #__PURE__ */ React.createElement(Filter.Item, {\n          title: '\\u54C1\\u7C7B',\n          value: value2,\n          options,\n          onChange: e => setValue2(e.key),\n        }),\n        /* #__PURE__ */ React.createElement(\n          Filter.Item,\n          {\n            title: '\\u66F4\\u591A',\n            ref: moreRef,\n          },\n          /* #__PURE__ */ React.createElement(\n            View,\n            {\n              className: styles.custom,\n            },\n            /* #__PURE__ */ React.createElement(\n              View,\n              {\n                className: styles.tags,\n              },\n              /* #__PURE__ */ React.createElement(\n                View,\n                {\n                  className: styles.tag,\n                },\n                /* #__PURE__ */ React.createElement(\n                  View,\n                  {\n                    className: styles.title,\n                  },\n                  '\\u54C1\\u8D28',\n                ),\n                /* #__PURE__ */ React.createElement(\n                  CheckableTag,\n                  {\n                    checked: checked1,\n                    onChange: v => setChecked1(v),\n                  },\n                  '\\u5927\\u4F17\\u4F18\\u9009',\n                ),\n                /* #__PURE__ */ React.createElement(\n                  CheckableTag,\n                  {\n                    checked: checked2,\n                    onChange: v => setChecked2(v),\n                  },\n                  '\\u70B9\\u8BC4\\u9AD8\\u5206',\n                ),\n              ),\n              /* #__PURE__ */ React.createElement(\n                View,\n                {\n                  className: styles.tag,\n                },\n                /* #__PURE__ */ React.createElement(\n                  View,\n                  {\n                    className: styles.title,\n                  },\n                  '\\u901F\\u5EA6',\n                ),\n                /* #__PURE__ */ React.createElement(\n                  CheckableTag,\n                  {\n                    checked: checked3,\n                    onChange: () => setChecked3(v => !v),\n                  },\n                  '60\\u5206\\u949F\\u5185',\n                ),\n                /* #__PURE__ */ React.createElement(\n                  CheckableTag,\n                  {\n                    checked: checked4,\n                    onChange: () => setChecked4(v => !v),\n                  },\n                  '40\\u5206\\u949F\\u5185',\n                ),\n              ),\n            ),\n            /* #__PURE__ */ React.createElement(\n              View,\n              {\n                className: styles.action,\n              },\n              /* #__PURE__ */ React.createElement(\n                View,\n                {\n                  className: classNames({\n                    [styles.btn]: true,\n                    [styles.reset]: true,\n                  }),\n                  onTap: handleReset,\n                },\n                '\\u91CD\\u7F6E',\n              ),\n              /* #__PURE__ */ React.createElement(\n                View,\n                {\n                  className: classNames({\n                    [styles.btn]: true,\n                    [styles.complete]: true,\n                  }),\n                  onTap: handleComplete,\n                },\n                '\\u5B8C\\u6210',\n              ),\n            ),\n          ),\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'ActiveColor',\n      },\n      /* #__PURE__ */ React.createElement(\n        Filter,\n        {\n          style: {\n            zIndex: 3,\n          },\n        },\n        /* #__PURE__ */ React.createElement(Filter.Item, {\n          title: '\\u54C1\\u7C7B',\n          value,\n          options,\n          onChange: e => setValue(e.key),\n          activeColor: '#FF9999',\n        }),\n        /* #__PURE__ */ React.createElement(Filter.Item, {\n          title: '\\u4EF7\\u683C',\n          value: value1,\n          options: options1,\n          onChange: e => setValue1(e.key),\n          activeColor: '#FF9999',\n        }),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Disabled',\n      },\n      /* #__PURE__ */ React.createElement(\n        Filter,\n        {\n          style: {\n            zIndex: 2,\n          },\n        },\n        /* #__PURE__ */ React.createElement(Filter.Item, {\n          title: '\\u54C1\\u7C7B',\n          value,\n          options,\n          onChange: e => setValue(e.key),\n          disabled: true,\n        }),\n        /* #__PURE__ */ React.createElement(Filter.Item, {\n          title: '\\u4EF7\\u683C',\n          value: value1,\n          options: options1,\n          onChange: e => setValue1(e.key),\n          disabled: true,\n        }),\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-13",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"index.module.scss":{path:"./index.module.scss",content:".custom{\n  .tags{\n    padding: 30px 24px;\n    .tag{\n      margin-bottom: 30px;\n      .title{\n        font-size: 26px;\n        margin-bottom: 10px;\n        color: #999;\n      }\n    }\n  }\n  .action{\n    height: 88px;\n    display: flex;\n    background-color: rgba(0,0,0,0.3);\n    .btn{\n      flex-grow: 1;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-size: 32px;\n      font-weight: 400;\n    }\n    .reset{\n      background-color: #FFFFFF;\n      border-top: 1px solid #e8e8e8;\n      border-bottom-left-radius: 14px;\n    }\n    .complete{\n      background-color: #1890ff;\n      color: #FFFFFF;\n      border-bottom-right-radius: 14px;\n    }\n  }\n}\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"filter-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#filter-1"},o.a.createElement("span",{className:"icon icon-link"})),"Filter"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"zIndex"),o.a.createElement("td",null,"\u8bbe\u7f6e\u5c42\u7ea7"),o.a.createElement("td",null,"number"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49Filter\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"filteritem"},o.a.createElement("a",{"aria-hidden":"true",href:"#filteritem"},o.a.createElement("span",{className:"icon icon-link"})),"Filter.Item"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"title"),o.a.createElement("td",null,"\u83dc\u5355\u9879\u6807\u9898"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u5f53\u524d\u9009\u4e2d\u9879\u5bf9\u5e94\u7684 key"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"options"),o.a.createElement("td",null,"\u9009\u9879\u6570\u7ec4"),o.a.createElement("td",null,"OptionProps[]"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"activeColor"),o.a.createElement("td",null,"\u9009\u9879\u7684\u9009\u4e2d\u6001\u989c\u8272"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"disabled"),o.a.createElement("td",null,"\u662f\u5426\u7981\u7528\u83dc\u5355"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onTap"),o.a.createElement("td",null,"\u70b9\u51fb\u83dc\u5355\u6807\u9898\u65f6\u89e6\u53d1\u7684\u56de\u8c03"),o.a.createElement("td",null,"(open: boolean) => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"\u9009\u62e9\u9009\u9879\u65f6\u89e6\u53d1\u7684\u56de\u8c03"),o.a.createElement("td",null,"(e: OptionProps) => void"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"optionprops"},o.a.createElement("a",{"aria-hidden":"true",href:"#optionprops"},o.a.createElement("span",{className:"icon icon-link"})),"OptionProps"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"key"),o.a.createElement("td",null,"\u6b64\u9879\u5fc5\u987b\u8bbe\u7f6e\uff08\u5176\u503c\u5728\u6574\u4e2a\u9009\u9879\u8303\u56f4\u5185\u552f\u4e00\uff09,\u6839\u636e\u6b64\u5c5e\u6027\u503c\u8fdb\u884c\u7b5b\u9009"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u503c"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-"))))))}},"1iVJ":function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t("YCKM"),o=t("f4X2"),i=t("IOv4"),l=t("ZSfd"),s=t.n(l);e["default"]=()=>r["createElement"](i["b"],null,r["createElement"](a["d"],{className:s.a.app},r["createElement"](i["a"],{title:"Type"},r["createElement"](a["d"],{className:s.a.group},r["createElement"](o["a"],null,"default"),r["createElement"](o["a"],{type:"primary"},"primary"))),r["createElement"](i["a"],{title:"Danger"},r["createElement"](a["d"],{className:s.a.group},r["createElement"](o["a"],{danger:!0},"danger"),r["createElement"](o["a"],{type:"primary",danger:!0},"danger"))),r["createElement"](i["a"],{title:"Shape"},r["createElement"](a["d"],{className:s.a.group},r["createElement"](o["a"],{type:"primary"},"round"),r["createElement"](o["a"],{type:"primary",square:!0},"square"))),r["createElement"](i["a"],{title:"Size"},r["createElement"](a["d"],{className:s.a.group},r["createElement"](o["a"],{type:"primary",size:"large"},"large"),r["createElement"](o["a"],{type:"primary"},"default"),r["createElement"](o["a"],{type:"primary",size:"small"},"small"))),r["createElement"](i["a"],{title:"Loading"},r["createElement"](a["d"],{className:s.a.group},r["createElement"](o["a"],{type:"primary",loading:!0,loadingText:"loading..."},"loading"),r["createElement"](o["a"],{type:"primary",square:!0,danger:!0,loading:!0,loadingText:"Deleting..."},"loading"))),r["createElement"](i["a"],{title:"Disabled"},r["createElement"](a["d"],{className:s.a.group},r["createElement"](o["a"],{type:"primary",disabled:!0},"disabled"),r["createElement"](o["a"],{type:"primary",danger:!0,disabled:!0},"disabled"))),r["createElement"](i["a"],{title:"Block"},r["createElement"](a["d"],{className:s.a.group},r["createElement"](o["a"],{type:"primary",size:"superlarge",block:!0,style:{marginBottom:"0.94rem"},loading:!0},"block"),r["createElement"](o["a"],{type:"primary",size:"superlarge",danger:!0,square:!0,block:!0},"block")))))},"1jPx":function(n,e,t){"use strict";var r=t("8OQV"),a=t("FVwB").exportTypedArrayStaticMethod,o=t("Sn4z");a("from",o,r)},"1nhP":function(n,e,t){var r=t("m0kY");n.exports=function(n){var e=r(n);if(e<0)throw RangeError("The argument can't be less than 0");return e}},"1vuE":function(n,e,t){var r=t("eNh0");r("flat")},"29mP":function(n,e,t){var r=t("nFn1"),a=t("ukPv"),o=function(n){return"function"==typeof n?n:void 0};n.exports=function(n,e){return arguments.length<2?o(r[n])||o(a[n]):r[n]&&r[n][e]||a[n]&&a[n][e]}},"2FZw":function(n,e,t){var r=t("oa35"),a=t("+rjg"),o=t("FCfD"),i=Math.ceil,l=function(n){return function(e,t,l){var s,c,p=String(o(e)),u=p.length,d=void 0===l?" ":String(l),m=r(t);return m<=u||""==d?p:(s=m-u,c=a.call(d,i(s/d.length)),c.length>s&&(c=c.slice(0,s)),n?p+c:c+p)}};n.exports={start:l(!1),end:l(!0)}},"2KAr":function(n,e,t){var r=t("tny8"),a=t("YfKC"),o=t("k/J9"),i=t("M8HR").UNSUPPORTED_Y;r&&("g"!=/./g.flags||i)&&a.f(RegExp.prototype,"flags",{configurable:!0,get:o})},"2Nc+":function(n,e,t){},"2XPC":function(n,e,t){},"2aV/":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("7BAe"),c=t("/dTS"),p=t("PPXv"),u=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{mapValues:function(n){var e=i(this),t=p(e),r=s(n,arguments.length>1?arguments[1]:void 0,3),a=new(c(e,o("Map"))),d=l(a.set);return u(t,(function(n,t){d.call(a,n,r(t,n,e))}),void 0,!0,!0),a}})},"2kyd":function(n,e,t){var r=t("ukPv"),a=t("xxaU"),o=t("jtLI"),i=t("evbn"),l=t("Fs9M"),s=t("wgKq"),c=a("wks"),p=r.Symbol,u=s?p:p&&p.withoutSetter||i;n.exports=function(n){return o(c,n)||(l&&o(p,n)?c[n]=p[n]:c[n]=u("Symbol."+n)),c[n]}},"2mql":function(n,e,t){"use strict";var r=t("TOwV"),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},s={};function c(n){return r.isMemo(n)?l:s[n["$$typeof"]]||a}s[r.ForwardRef]=i,s[r.Memo]=l;var p=Object.defineProperty,u=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,m=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,h=Object.prototype;function x(n,e,t){if("string"!==typeof e){if(h){var r=f(e);r&&r!==h&&x(n,r,t)}var a=u(e);d&&(a=a.concat(d(e)));for(var i=c(n),l=c(e),s=0;s<a.length;++s){var g=a[s];if(!o[g]&&(!t||!t[g])&&(!l||!l[g])&&(!i||!i[g])){var y=m(e,g);try{p(n,g,y)}catch(C){}}}}return n}n.exports=x},"33TD":function(n,e,t){"use strict";var r=t("1Cbe"),a=t("Ei+o");n.exports=r?{}.toString:function(){return"[object "+a(this)+"]"}},"3Mf4":function(n,e,t){},"3Mpw":function(n,e,t){"use strict";t.r(e),t.d(e,"Prism",(function(){return o})),t.d(e,"defaultProps",(function(){return c}));var r=function(){var n=0,e={util:{encode:function(n){return n instanceof t?new t(n.type,e.util.encode(n.content),n.alias):"Array"===e.util.type(n)?n.map(e.util.encode):n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(n){return Object.prototype.toString.call(n).match(/\[object (\w+)\]/)[1]},objId:function(e){return e["__id"]||Object.defineProperty(e,"__id",{value:++n}),e["__id"]},clone:function(n,t){var r=e.util.type(n);switch(t=t||{},r){case"Object":if(t[e.util.objId(n)])return t[e.util.objId(n)];o={};for(var a in t[e.util.objId(n)]=o,n)n.hasOwnProperty(a)&&(o[a]=e.util.clone(n[a],t));return o;case"Array":if(t[e.util.objId(n)])return t[e.util.objId(n)];var o=[];return t[e.util.objId(n)]=o,n.forEach((function(n,r){o[r]=e.util.clone(n,t)})),o}return n}},languages:{extend:function(n,t){var r=e.util.clone(e.languages[n]);for(var a in t)r[a]=t[a];return r},insertBefore:function(n,t,r,a){a=a||e.languages;var o=a[n];if(2==arguments.length){for(var i in r=arguments[1],r)r.hasOwnProperty(i)&&(o[i]=r[i]);return o}var l={};for(var s in o)if(o.hasOwnProperty(s)){if(s==t)for(var i in r)r.hasOwnProperty(i)&&(l[i]=r[i]);l[s]=o[s]}return e.languages.DFS(e.languages,(function(e,t){t===a[n]&&e!=n&&(this[e]=l)})),a[n]=l},DFS:function(n,t,r,a){for(var o in a=a||{},n)n.hasOwnProperty(o)&&(t.call(n,o,n[o],r||o),"Object"!==e.util.type(n[o])||a[e.util.objId(n[o])]?"Array"!==e.util.type(n[o])||a[e.util.objId(n[o])]||(a[e.util.objId(n[o])]=!0,e.languages.DFS(n[o],t,o,a)):(a[e.util.objId(n[o])]=!0,e.languages.DFS(n[o],t,null,a)))}},plugins:{},highlight:function(n,r,a){var o={code:n,grammar:r,language:a};return o.tokens=e.tokenize(o.code,o.grammar),t.stringify(e.util.encode(o.tokens),o.language)},matchGrammar:function(n,t,r,a,o,i,l){var s=e.Token;for(var c in r)if(r.hasOwnProperty(c)&&r[c]){if(c==l)return;var p=r[c];p="Array"===e.util.type(p)?p:[p];for(var u=0;u<p.length;++u){var d=p[u],m=d.inside,f=!!d.lookbehind,h=!!d.greedy,x=0,g=d.alias;if(h&&!d.pattern.global){var y=d.pattern.toString().match(/[imuy]*$/)[0];d.pattern=RegExp(d.pattern.source,y+"g")}d=d.pattern||d;for(var C=a,w=o;C<t.length;w+=t[C].length,++C){var v=t[C];if(t.length>n.length)return;if(!(v instanceof s)){if(h&&C!=t.length-1){d.lastIndex=w;var b=d.exec(n);if(!b)break;for(var k=b.index+(f?b[1].length:0),V=b.index+b[0].length,P=C,N=w,R=t.length;P<R&&(N<V||!t[P].type&&!t[P-1].greedy);++P)N+=t[P].length,k>=N&&(++C,w=N);if(t[C]instanceof s)continue;S=P-C,v=n.slice(w,N),b.index-=w}else{d.lastIndex=0;b=d.exec(v);var S=1}if(b){f&&(x=b[1]?b[1].length:0);k=b.index+x,b=b[0].slice(x),V=k+b.length;var T=v.slice(0,k),E=v.slice(V),$=[C,S];T&&(++C,w+=T.length,$.push(T));var I=new s(c,m?e.tokenize(b,m):b,g,b,h);if($.push(I),E&&$.push(E),Array.prototype.splice.apply(t,$),1!=S&&e.matchGrammar(n,t,r,C,w,!0,c),i)break}else if(i)break}}}}},hooks:{add:function(){}},tokenize:function(n,t,r){var a=[n],o=t.rest;if(o){for(var i in o)t[i]=o[i];delete t.rest}return e.matchGrammar(n,a,t,0,0,!1),a}},t=e.Token=function(n,e,t,r,a){this.type=n,this.content=e,this.alias=t,this.length=0|(r||"").length,this.greedy=!!a};return t.stringify=function(n,r,a){if("string"==typeof n)return n;if("Array"===e.util.type(n))return n.map((function(e){return t.stringify(e,r,n)})).join("");var o={type:n.type,content:t.stringify(n.content,r,a),tag:"span",classes:["token",n.type],attributes:{},language:r,parent:a};if(n.alias){var i="Array"===e.util.type(n.alias)?n.alias:[n.alias];Array.prototype.push.apply(o.classes,i)}var l=Object.keys(o.attributes).map((function(n){return n+'="'+(o.attributes[n]||"").replace(/"/g,"&quot;")+'"'})).join(" ");return"<"+o.tag+' class="'+o.classes.join(" ")+'"'+(l?" "+l:"")+">"+o.content+"</"+o.tag+">"},e}();r.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:(?!<!--)[^"'\]]|"[^"]*"|'[^']*'|<!--[\s\S]*?-->)*\]\s*)?>/i,greedy:!0},cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},r.languages.markup["tag"].inside["attr-value"].inside["entity"]=r.languages.markup["entity"],r.hooks.add("wrap",(function(n){"entity"===n.type&&(n.attributes["title"]=n.content.replace(/&amp;/,"&"))})),Object.defineProperty(r.languages.markup.tag,"addInlined",{value:function(n,e){var t={};t["language-"+e]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:r.languages[e]},t["cdata"]=/^<!\[CDATA\[|\]\]>$/i;var a={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:t}};a["language-"+e]={pattern:/[\s\S]+/,inside:r.languages[e]};var o={};o[n]={pattern:RegExp(/(<__[\s\S]*?>)(?:<!\[CDATA\[[\s\S]*?\]\]>\s*|[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return n})),"i"),lookbehind:!0,greedy:!0,inside:a},r.languages.insertBefore("markup","cdata",o)}}),r.languages.xml=r.languages.extend("markup",{}),r.languages.html=r.languages.markup,r.languages.mathml=r.languages.markup,r.languages.svg=r.languages.markup,function(n){var e="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",t={environment:{pattern:RegExp("\\$"+e),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--?|-=|\+\+?|\+=|!=?|~|\*\*?|\*=|\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\^=?|\|\|?|\|=|\?|:/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+e),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/};n.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)\w+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b\w+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+e),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+?)\s*(?:\r?\n|\r)[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:t},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s*(?:\r?\n|\r)[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\](?:\\\\)*)(["'])(?:\\[\s\S]|\$\([^)]+\)|`[^`]+`|(?!\2)[^\\])*\2/,lookbehind:!0,greedy:!0,inside:t}],environment:{pattern:RegExp("\\$?"+e),alias:"constant"},variable:t.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|==?|!=?|=~|<<[<-]?|[&\d]?>>|\d?[<>]&?|&[>&]?|\|[&|]?|<=?|>=?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}};for(var r=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],a=t.variable[1].inside,o=0;o<r.length;o++)a[r[o]]=n.languages.bash[r[o]];n.languages.shell=n.languages.bash}(r),r.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},r.languages.c=r.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+/,lookbehind:!0},keyword:/\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,function:/[a-z_]\w*(?=\s*\()/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/,number:/(?:\b0x(?:[\da-f]+\.?[\da-f]*|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?)[ful]*/i}),r.languages.insertBefore("c","string",{macro:{pattern:/(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,alias:"property",inside:{string:{pattern:/(#\s*include\s*)(?:<.+?>|("|')(?:\\?.)+?\2)/,lookbehind:!0},directive:{pattern:/(#\s*)\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\b/,lookbehind:!0,alias:"keyword"}}},constant:/\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/}),delete r.languages.c["boolean"],r.languages.cpp=r.languages.extend("c",{"class-name":{pattern:/(\b(?:class|enum|struct)\s+)\w+/,lookbehind:!0},keyword:/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+\.?[\da-f']*|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+\.?[\d']*|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]*/i,greedy:!0},operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:true|false)\b/}),r.languages.insertBefore("cpp","string",{"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),function(n){var e=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;n.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\((?!\s*\))\s*)(?:[^()]|\((?:[^()]|\([^()]*\))*\))+?(?=\s*\))/,lookbehind:!0,alias:"selector"}}},url:{pattern:RegExp("url\\((?:"+e.source+"|[^\n\r()]*)\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/}},selector:RegExp("[^{}\\s](?:[^{};\"']|"+e.source+")*?(?=\\s*\\{)"),string:{pattern:e,greedy:!0},property:/[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,important:/!important\b/i,function:/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:,]/},n.languages.css["atrule"].inside.rest=n.languages.css;var t=n.languages.markup;t&&(t.tag.addInlined("style","css"),n.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:t.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:n.languages.css}},alias:"language-css"}},t.tag))}(r),function(n){var e,t=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;n.languages.css.selector={pattern:n.languages.css.selector,inside:e={"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-:.\w]+/,id:/#[-:.\w]+/,attribute:{pattern:RegExp("\\[(?:[^[\\]\"']|"+t.source+")*\\]"),greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)[-*\w\xA0-\uFFFF]*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},attribute:{pattern:/^(\s*)[-\w\xA0-\uFFFF]+/,lookbehind:!0},value:[t,{pattern:/(=\s*)[-\w\xA0-\uFFFF]+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],punctuation:/[()]/}},n.languages.css["atrule"].inside["selector-function-argument"].inside=e,n.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*/i,lookbehind:!0}});var r={pattern:/(\d)(?:%|[a-z]+)/,lookbehind:!0},a={pattern:/(^|[^\w.-])-?\d*\.?\d+/,lookbehind:!0};n.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:{pattern:/\B#(?:[\da-f]{1,2}){3,4}\b/i,alias:"color"},color:[/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,{pattern:/\b(?:rgb|hsl)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:rgb|hsl)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:r,number:a,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:r,number:a})}(r),r.languages.javascript=r.languages.extend("clike",{"class-name":[r.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\s*)(?:catch|finally)\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],number:/\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,function:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,operator:/--|\+\+|\*\*=?|=>|&&|\|\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?[.?]?|[~:]/}),r.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,r.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*[\s\S]*?\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0},"function-variable":{pattern:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,lookbehind:!0,inside:r.languages.javascript},{pattern:/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,inside:r.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,lookbehind:!0,inside:r.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,lookbehind:!0,inside:r.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),r.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\${|}$/,alias:"punctuation"},rest:r.languages.javascript}},string:/[\s\S]+/}}}),r.languages.markup&&r.languages.markup.tag.addInlined("script","javascript"),r.languages.js=r.languages.javascript,function(n){var e=n.util.clone(n.languages.javascript);n.languages.jsx=n.languages.extend("markup",e),n.languages.jsx.tag.pattern=/<\/?(?:[\w.:-]+\s*(?:\s+(?:[\w.:$-]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s{'">=]+|\{(?:\{(?:\{[^}]*\}|[^{}])*\}|[^{}])+\}))?|\{\s*\.{3}\s*[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\s*\}))*\s*\/?)?>/i,n.languages.jsx.tag.inside["tag"].pattern=/^<\/?[^\s>\/]*/i,n.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">]+)/i,n.languages.jsx.tag.inside["tag"].inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,n.languages.insertBefore("inside","attr-name",{spread:{pattern:/\{\s*\.{3}\s*[a-z_$][\w$]*(?:\.[a-z_$][\w$]*)*\s*\}/,inside:{punctuation:/\.{3}|[{}.]/,"attr-value":/\w+/}}},n.languages.jsx.tag),n.languages.insertBefore("inside","attr-value",{script:{pattern:/=(?:\{(?:\{(?:\{[^}]*\}|[^}])*\}|[^}])+\})/i,inside:{"script-punctuation":{pattern:/^=(?={)/,alias:"punctuation"},rest:n.languages.jsx},alias:"language-javascript"}},n.languages.jsx.tag);var t=function n(e){return e?"string"===typeof e?e:"string"===typeof e.content?e.content:e.content.map(n).join(""):""},r=function e(r){for(var a=[],o=0;o<r.length;o++){var i=r[o],l=!1;if("string"!==typeof i&&("tag"===i.type&&i.content[0]&&"tag"===i.content[0].type?"</"===i.content[0].content[0].content?a.length>0&&a[a.length-1].tagName===t(i.content[0].content[1])&&a.pop():"/>"===i.content[i.content.length-1].content||a.push({tagName:t(i.content[0].content[1]),openedBraces:0}):a.length>0&&"punctuation"===i.type&&"{"===i.content?a[a.length-1].openedBraces++:a.length>0&&a[a.length-1].openedBraces>0&&"punctuation"===i.type&&"}"===i.content?a[a.length-1].openedBraces--:l=!0),(l||"string"===typeof i)&&a.length>0&&0===a[a.length-1].openedBraces){var s=t(i);o<r.length-1&&("string"===typeof r[o+1]||"plain-text"===r[o+1].type)&&(s+=t(r[o+1]),r.splice(o+1,1)),o>0&&("string"===typeof r[o-1]||"plain-text"===r[o-1].type)&&(s=t(r[o-1])+s,r.splice(o-1,1),o--),r[o]=new n.Token("plain-text",s,null,s)}i.content&&"string"!==typeof i.content&&e(i.content)}};n.hooks.add("after-tokenize",(function(n){"jsx"!==n.language&&"tsx"!==n.language||r(n.tokens)}))}(r),function(n){n.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+n.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),n.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+n.languages.javascript["function"].source),lookbehind:!0,alias:["function","property-access"]}}),n.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),n.languages.javascript["keyword"].unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),n.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),n.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:/(\.\s*)#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*/,lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var e=["function","function-variable","method","method-variable","property-access"],t=0;t<e.length;t++){var r=e[t],a=n.languages.javascript[r];"RegExp"===n.util.type(a)&&(a=n.languages.javascript[r]={pattern:a});var o=a.inside||{};a.inside=o,o["maybe-class-name"]=/^[A-Z][\s\S]*/}}(r),function(n){var e=/#(?!\{).+/,t={pattern:/#\{[^}]+\}/,alias:"variable"};n.languages.coffeescript=n.languages.extend("javascript",{comment:e,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:t}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),n.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:e,interpolation:t}}}),n.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},rest:n.languages.javascript}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:t}}]}),n.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete n.languages.coffeescript["template-string"],n.languages.coffee=n.languages.coffeescript}(r),function(n){n.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d+.*$/m]};var e={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};Object.keys(e).forEach((function(t){var r=e[t],a=[];/^\w+$/.test(t)||a.push(/\w+/.exec(t)[0]),"diff"===t&&a.push("bold"),n.languages.diff[t]={pattern:RegExp("^(?:["+r+"].*(?:\r\n?|\n|(?![\\s\\S])))+","m"),alias:a}})),Object.defineProperty(n.languages.diff,"PREFIXES",{value:e})}(r),r.languages.git={comment:/^#.*/m,deleted:/^[-\u2013].*/m,inserted:/^\+.*/m,string:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/m,command:{pattern:/^.*\$ git .*$/m,inside:{parameter:/\s--?\w+/m}},coord:/^@@.*@@$/m,commit_sha1:/^commit \w{40}$/m},r.languages.go=r.languages.extend("clike",{keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,builtin:/\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/,boolean:/\b(?:_|iota|nil|true|false)\b/,operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,number:/(?:\b0x[a-f\d]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e[-+]?\d+)?)i?/i,string:{pattern:/(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0}}),delete r.languages.go["class-name"],r.languages.graphql={comment:/#.*/,string:{pattern:/"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:true|false)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+)[a-zA-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\b/,operator:/[!=|]|\.{3}/,punctuation:/[!(){}\[\]:=,]/,constant:/\b(?!ID\b)[A-Z][A-Z_\d]*\b/},function(n){function e(n,e){return"___"+n.toUpperCase()+e+"___"}Object.defineProperties(n.languages["markup-templating"]={},{buildPlaceholders:{value:function(t,r,a,o){if(t.language===r){var i=t.tokenStack=[];t.code=t.code.replace(a,(function(n){if("function"===typeof o&&!o(n))return n;var a,l=i.length;while(-1!==t.code.indexOf(a=e(r,l)))++l;return i[l]=n,a})),t.grammar=n.languages.markup}}},tokenizePlaceholders:{value:function(t,r){if(t.language===r&&t.tokenStack){t.grammar=n.languages[r];var a=0,o=Object.keys(t.tokenStack);i(t.tokens)}function i(l){for(var s=0;s<l.length;s++){if(a>=o.length)break;var c=l[s];if("string"===typeof c||c.content&&"string"===typeof c.content){var p=o[a],u=t.tokenStack[p],d="string"===typeof c?c:c.content,m=e(r,p),f=d.indexOf(m);if(f>-1){++a;var h=d.substring(0,f),x=new n.Token(r,n.tokenize(u,t.grammar),"language-"+r,u),g=d.substring(f+m.length),y=[];h&&y.push.apply(y,i([h])),y.push(x),g&&y.push.apply(y,i([g])),"string"===typeof c?l.splice.apply(l,[s,1].concat(y)):c.content=y}}else c.content&&i(c.content)}return l}}}})}(r),function(n){n.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/i,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:true|false)\b/,block:{pattern:/^(\s*~?\s*)[#\/]\S+?(?=\s*~?\s*$|\s)/i,lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/},n.hooks.add("before-tokenize",(function(e){var t=/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;n.languages["markup-templating"].buildPlaceholders(e,"handlebars",t)})),n.hooks.add("after-tokenize",(function(e){n.languages["markup-templating"].tokenizePlaceholders(e,"handlebars")}))}(r),r.languages.json={property:{pattern:/"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,greedy:!0},string:{pattern:/"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,greedy:!0},comment:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,number:/-?\d+\.?\d*(?:e[+-]?\d+)?/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:true|false)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},r.languages.less=r.languages.extend("css",{comment:[/\/\*[\s\S]*?\*\//,{pattern:/(^|[^\\])\/\/.*/,lookbehind:!0}],atrule:{pattern:/@[\w-]+?(?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};])*?(?=\s*\{)/,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@])*?(?=\s*\{)/,inside:{variable:/@+[\w-]+/}},property:/(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/i,operator:/[+\-*\/]/}),r.languages.insertBefore("less","property",{variable:[{pattern:/@[\w-]+\s*:/,inside:{punctuation:/:/}},/@@?[\w-]+/],"mixin-usage":{pattern:/([{;]\s*)[.#](?!\d)[\w-]+.*?(?=[(;])/,lookbehind:!0,alias:"function"}}),r.languages.makefile={comment:{pattern:/(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,lookbehind:!0},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},builtin:/\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,symbol:{pattern:/^[^:=\r\n]+(?=\s*:(?!=))/m,inside:{variable:/\$+(?:[^(){}:#=\s]+|(?=[({]))/}},variable:/\$+(?:[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,keyword:[/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,{pattern:/(\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \t])/,lookbehind:!0}],operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/},function(n){var e=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?!\n|\r\n?))/.source;function t(n,t){return n=n.replace(/<inner>/g,(function(){return e})),t&&(n=n+"|"+n.replace(/_/g,"\\*")),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+n+")")}var r=/(?:\\.|``.+?``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,a=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|$)/.source.replace(/__/g,(function(){return r})),o=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;n.languages.markdown=n.languages.extend("markup",{}),n.languages.insertBefore("markdown","prolog",{blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+a+o+"(?:"+a+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+a+o+")(?:"+a+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(r),inside:n.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+a+")"+o+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+a+"$"),inside:{"table-header":{pattern:RegExp(r),alias:"important",inside:n.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/``.+?``|`[^`\r\n]+`/,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#+.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:t(/__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__/.source,!0),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:t(/_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_/.source,!0),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:t(/(~~?)(?:(?!~)<inner>)+?\2/.source,!1),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},url:{pattern:t(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)| ?\[(?:(?!\])<inner>)+\])/.source,!1),lookbehind:!0,greedy:!0,inside:{variable:{pattern:/(\[)[^\]]+(?=\]$)/,lookbehind:!0},content:{pattern:/(^!?\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},string:{pattern:/"(?:\\.|[^"\\])*"(?=\)$)/}}}}),["url","bold","italic","strike"].forEach((function(e){["url","bold","italic","strike"].forEach((function(t){e!==t&&(n.languages.markdown[e].inside.content.inside[t]=n.languages.markdown[t])}))})),n.hooks.add("after-tokenize",(function(n){function e(n){if(n&&"string"!==typeof n)for(var t=0,r=n.length;t<r;t++){var a=n[t];if("code"===a.type){var o=a.content[1],i=a.content[3];if(o&&i&&"code-language"===o.type&&"code-block"===i.type&&"string"===typeof o.content){var l=o.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp");l=(/[a-z][\w-]*/i.exec(l)||[""])[0].toLowerCase();var s="language-"+l;i.alias?"string"===typeof i.alias?i.alias=[i.alias,s]:i.alias.push(s):i.alias=[s]}}else e(a.content)}}"markdown"!==n.language&&"md"!==n.language||e(n.tokens)})),n.hooks.add("wrap",(function(e){if("code-block"===e.type){for(var t="",r=0,a=e.classes.length;r<a;r++){var o=e.classes[r],i=/language-(.+)/.exec(o);if(i){t=i[1];break}}var l=n.languages[t];if(l){var s=e.content.replace(/&lt;/g,"<").replace(/&amp;/g,"&");e.content=n.highlight(s,l,t)}else if(t&&"none"!==t&&n.plugins.autoloader){var c="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());e.attributes["id"]=c,n.plugins.autoloader.loadLanguages(t,(function(){var e=document.getElementById(c);e&&(e.innerHTML=n.highlight(e.textContent,n.languages[t],t))}))}}})),n.languages.md=n.languages.markdown}(r),r.languages.objectivec=r.languages.extend("c",{keyword:/\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,string:/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|@"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete r.languages.objectivec["class-name"],r.languages.ocaml={comment:/\(\*[\s\S]*?\*\)/,string:[{pattern:/"(?:\\.|[^\\\r\n"])*"/,greedy:!0},{pattern:/(['`])(?:\\(?:\d+|x[\da-f]+|.)|(?!\1)[^\\\r\n])\1/i,greedy:!0}],number:/\b(?:0x[\da-f][\da-f_]+|(?:0[bo])?\d[\d_]*\.?[\d_]*(?:e[+-]?[\d_]+)?)/i,directive:{pattern:/\B#\w+/,alias:"important"},label:{pattern:/\B~\w+/,alias:"function"},type_variable:{pattern:/\B'\w+/,alias:"function"},variant:{pattern:/`\w+/,alias:"variable"},module:{pattern:/\b[A-Z]\w+/,alias:"variable"},keyword:/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,boolean:/\b(?:false|true)\b/,operator:/:=|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,punctuation:/[(){}\[\]|_.,:;]/},r.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0},"string-interpolation":{pattern:/(?:f|rf|fr)(?:("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|rb|br)?("""|''')[\s\S]+?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|rb|br)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^\s*)@\w+(?:\.\w+)*/im,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:True|False|None)\b/,number:/(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|\.\d+)(?:e[+-]?\d+)?j?\b/i,operator:/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},r.languages.python["string-interpolation"].inside["interpolation"].inside.rest=r.languages.python,r.languages.py=r.languages.python,r.languages.reason=r.languages.extend("clike",{string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:mod|land|lor|lxor|lsl|lsr|asr)\b/}),r.languages.insertBefore("reason","class-name",{character:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,alias:"string"},constructor:{pattern:/\b[A-Z]\w*\b(?!\s*\.)/,alias:"variable"},label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete r.languages.reason["function"],function(n){n.languages.sass=n.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t]+.+)*/m,lookbehind:!0}}),n.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,inside:{atrule:/(?:@[\w-]+|[+=])/m}}}),delete n.languages.sass.atrule;var e=/\$[-\w]+|#\{\$[-\w]+\}/,t=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|or|not)\b/,{pattern:/(\s+)-(?=\s)/,lookbehind:!0}];n.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,inside:{punctuation:/:/,variable:e,operator:t}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s]+.*)/m,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:e,operator:t,important:n.languages.sass.important}}}),delete n.languages.sass.property,delete n.languages.sass.important,n.languages.insertBefore("sass","punctuation",{selector:{pattern:/([ \t]*)\S(?:,?[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,?[^,\r\n]+)*)*/,lookbehind:!0}})}(r),r.languages.scss=r.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-]+(?:\([^()]+\)|[^(])*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()]|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[\w-]|\$[-\w]+|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),r.languages.insertBefore("scss","atrule",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),r.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),r.languages.insertBefore("scss","function",{placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:true|false)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|or|not)(?=\s)/,lookbehind:!0}}),r.languages.scss["atrule"].inside.rest=r.languages.scss,r.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:TRUE|FALSE|NULL)\b/i,number:/\b0x[\da-f]+\b|\b\d+\.?\d*|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(n){var e={url:/url\((["']?).*?\1\)/i,string:{pattern:/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,greedy:!0},interpolation:null,func:null,important:/\B!(?:important|optional)\b/i,keyword:{pattern:/(^|\s+)(?:(?:if|else|for|return|unless)(?=\s+|$)|@[\w-]+)/,lookbehind:!0},hexcode:/#[\da-f]{3,6}/i,number:/\b\d+(?:\.\d+)?%?/,boolean:/\b(?:true|false)\b/,operator:[/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.+|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],punctuation:/[{}()\[\];:,]/};e["interpolation"]={pattern:/\{[^\r\n}:]+\}/,alias:"variable",inside:{delimiter:{pattern:/^{|}$/,alias:"punctuation"},rest:e}},e["func"]={pattern:/[\w-]+\([^)]*\).*/,inside:{function:/^[^(]+/,rest:e}},n.languages.stylus={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},"atrule-declaration":{pattern:/(^\s*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\w-]+/,rest:e}},"variable-declaration":{pattern:/(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:(?:\{[^}]*\}|.+)|$)/m,lookbehind:!0,inside:{variable:/^\S+/,rest:e}},statement:{pattern:/(^[ \t]*)(?:if|else|for|return|unless)[ \t]+.+/m,lookbehind:!0,inside:{keyword:/^\S+/,rest:e}},"property-declaration":{pattern:/((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)[^{\r\n]*(?:;|[^{\r\n,](?=$)(?!(?:\r?\n|\r)(?:\{|\2[ \t]+)))/m,lookbehind:!0,inside:{property:{pattern:/^[^\s:]+/,inside:{interpolation:e.interpolation}},rest:e}},selector:{pattern:/(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\))?|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t]+)))/m,lookbehind:!0,inside:{interpolation:e.interpolation,punctuation:/[{},]/}},func:e.func,string:e.string,interpolation:e.interpolation,punctuation:/[{}()\[\];:.]/}}(r),r.languages.typescript=r.languages.extend("javascript",{keyword:/\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\b/,builtin:/\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\b/}),r.languages.ts=r.languages.typescript;var a=r.util.clone(r.languages.typescript);r.languages.tsx=r.languages.extend("jsx",a),r.languages.wasm={comment:[/\(;[\s\S]*?;\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/"(?:\\[\s\S]|[^"\\])*"/,greedy:!0},keyword:[{pattern:/\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,inside:{punctuation:/\./}},/\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],variable:/\$[\w!#$%&'*+\-./:<=>?@\\^_`|~]+/i,number:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,punctuation:/[()]/},function(n){var e=/[*&][^\s[\]{},]+/,t=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,r="(?:"+t.source+"(?:[ \t]+"+e.source+")?|"+e.source+"(?:[ \t]+"+t.source+")?)";function a(n,e){e=(e||"").replace(/m/g,"")+"m";var t=/([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|]|}|\s*#))/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<value>>/g,(function(){return n}));return RegExp(t,e)}n.languages.yaml={scalar:{pattern:RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)[^\r\n]+(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g,(function(){return r}))),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)[^\r\n{[\]},#\s]+?(?=\s*:\s)/.source.replace(/<<prop>>/g,(function(){return r}))),lookbehind:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:a(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?)?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),lookbehind:!0,alias:"number"},boolean:{pattern:a(/true|false/.source,"i"),lookbehind:!0,alias:"important"},null:{pattern:a(/null|~/.source,"i"),lookbehind:!0,alias:"important"},string:{pattern:a(/("|')(?:(?!\2)[^\\\r\n]|\\.)*\2/.source),lookbehind:!0,greedy:!0},number:{pattern:a(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+\.?\d*|\.?\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,"i"),lookbehind:!0},tag:t,important:e,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},n.languages.yml=n.languages.yaml}(r);var o=r,i={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","at-rule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]},l=i,s=t("q1tI"),c={Prism:o,theme:l};function p(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function u(){return u=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},u.apply(this,arguments)}var d=/\r\n|\r|\n/,m=function(n){0===n.length?n.push({types:["plain"],content:"",empty:!0}):1===n.length&&""===n[0].content&&(n[0].empty=!0)},f=function(n,e){var t=n.length;return t>0&&n[t-1]===e?n:n.concat(e)},h=function(n){var e=[[]],t=[n],r=[0],a=[n.length],o=0,i=0,l=[],s=[l];while(i>-1){while((o=r[i]++)<a[i]){var c=void 0,p=e[i],u=t[i],h=u[o];if("string"===typeof h?(p=i>0?p:["plain"],c=h):(p=f(p,h.type),h.alias&&(p=f(p,h.alias)),c=h.content),"string"===typeof c){var x=c.split(d),g=x.length;l.push({types:p,content:x[0]});for(var y=1;y<g;y++)m(l),s.push(l=[]),l.push({types:p,content:x[y]})}else i++,e.push(p),t.push(c),r.push(0),a.push(c.length)}i--,e.pop(),t.pop(),r.pop(),a.pop()}return m(l),s},x=function(n,e){var t=n.plain,r=Object.create(null),a=n.styles.reduce((function(n,t){var r=t.languages,a=t.style;return r&&!r.includes(e)||t.types.forEach((function(e){var t=u({},n[e],a);n[e]=t})),n}),r);return a.root=t,a.plain=u({},t,{backgroundColor:null}),a};function g(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&-1===e.indexOf(r)&&(t[r]=n[r]);return t}var y=function(n){function e(){var e=this,t=[],r=arguments.length;while(r--)t[r]=arguments[r];n.apply(this,t),p(this,"getThemeDict",(function(n){if(void 0!==e.themeDict&&n.theme===e.prevTheme&&n.language===e.prevLanguage)return e.themeDict;e.prevTheme=n.theme,e.prevLanguage=n.language;var t=n.theme?x(n.theme,n.language):void 0;return e.themeDict=t})),p(this,"getLineProps",(function(n){var t=n.key,r=n.className,a=n.style,o=g(n,["key","className","style","line"]),i=o,l=u({},i,{className:"token-line",style:void 0,key:void 0}),s=e.getThemeDict(e.props);return void 0!==s&&(l.style=s.plain),void 0!==a&&(l.style=void 0!==l.style?u({},l.style,a):a),void 0!==t&&(l.key=t),r&&(l.className+=" "+r),l})),p(this,"getStyleForToken",(function(n){var t=n.types,r=n.empty,a=t.length,o=e.getThemeDict(e.props);if(void 0!==o){if(1===a&&"plain"===t[0])return r?{display:"inline-block"}:void 0;if(1===a&&!r)return o[t[0]];var i=r?{display:"inline-block"}:{},l=t.map((function(n){return o[n]}));return Object.assign.apply(Object,[i].concat(l))}})),p(this,"getTokenProps",(function(n){var t=n.key,r=n.className,a=n.style,o=n.token,i=g(n,["key","className","style","token"]),l=i,s=u({},l,{className:"token "+o.types.join(" "),children:o.content,style:e.getStyleForToken(o),key:void 0});return void 0!==a&&(s.style=void 0!==s.style?u({},s.style,a):a),void 0!==t&&(s.key=t),r&&(s.className+=" "+r),s}))}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.render=function(){var n=this.props,e=n.Prism,t=n.language,r=n.code,a=n.children,o=this.getThemeDict(this.props),i=e.languages[t],l=void 0!==i?e.tokenize(r,i,t):[r],s=h(l);return a({tokens:s,className:"prism-code language-"+t,style:void 0!==o?o.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},e}(s["Component"]);e["default"]=y},"3UWB":function(n,e,t){var r=t("MMxC");r({target:"Math",stat:!0},{isubh:function(n,e,t,r){var a=n>>>0,o=e>>>0,i=t>>>0;return o-(r>>>0)-((~a&i|~(a^i)&a-i>>>0)>>>31)|0}})},"3Us1":function(n,e,t){var r=t("Mi8B");r("Float32",(function(n){return function(e,t,r){return n(this,e,t,r)}}))},"3dhw":function(n,e,t){"use strict";var r=t("NMFW"),a=t("f1E4"),o=t("MVys"),i=t("k/J9"),l="toString",s=RegExp.prototype,c=s[l],p=o((function(){return"/a/b"!=c.call({source:"a",flags:"b"})})),u=c.name!=l;(p||u)&&r(RegExp.prototype,l,(function(){var n=a(this),e=String(n.source),t=n.flags,r=String(void 0===t&&n instanceof RegExp&&!("flags"in s)?i.call(n):t);return"/"+e+"/"+r}),{unsafe:!0})},"3mVh":function(n,e,t){"use strict";n.exports=t("o+nP")},"43iI":function(n,e,t){"use strict";var r=t("MMxC"),a=t("2FZw").end,o=t("y9mK");r({target:"String",proto:!0,forced:o},{padEnd:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},"4Mzw":function(n,e,t){var r=t("ukPv"),a=t("kiNa");a(r.JSON,"JSON",!0)},"4rKd":function(n,e,t){var r=t("lz10"),a=t("aKVN"),o=t("2kyd"),i=o("toPrimitive"),l=Date.prototype;i in l||r(l,i,a)},"55Ip":function(n,e,t){"use strict";t.r(e),t.d(e,"BrowserRouter",(function(){return u})),t.d(e,"HashRouter",(function(){return d})),t.d(e,"Link",(function(){return C})),t.d(e,"NavLink",(function(){return k}));var r=t("Ty5D");t.d(e,"MemoryRouter",(function(){return r["a"]})),t.d(e,"Prompt",(function(){return r["b"]})),t.d(e,"Redirect",(function(){return r["c"]})),t.d(e,"Route",(function(){return r["d"]})),t.d(e,"Router",(function(){return r["e"]})),t.d(e,"StaticRouter",(function(){return r["f"]})),t.d(e,"Switch",(function(){return r["g"]})),t.d(e,"__RouterContext",(function(){return r["h"]})),t.d(e,"generatePath",(function(){return r["i"]})),t.d(e,"matchPath",(function(){return r["j"]})),t.d(e,"useHistory",(function(){return r["k"]})),t.d(e,"useLocation",(function(){return r["l"]})),t.d(e,"useParams",(function(){return r["m"]})),t.d(e,"useRouteMatch",(function(){return r["n"]})),t.d(e,"withRouter",(function(){return r["o"]}));var a=t("dI71"),o=t("q1tI"),i=t.n(o),l=t("YS25"),s=(t("17x9"),t("wx14")),c=t("zLVn"),p=t("9R94"),u=function(n){function e(){for(var e,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return e=n.call.apply(n,[this].concat(r))||this,e.history=Object(l["a"])(e.props),e}Object(a["a"])(e,n);var t=e.prototype;return t.render=function(){return i.a.createElement(r["e"],{history:this.history,children:this.props.children})},e}(i.a.Component);var d=function(n){function e(){for(var e,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return e=n.call.apply(n,[this].concat(r))||this,e.history=Object(l["b"])(e.props),e}Object(a["a"])(e,n);var t=e.prototype;return t.render=function(){return i.a.createElement(r["e"],{history:this.history,children:this.props.children})},e}(i.a.Component);var m=function(n,e){return"function"===typeof n?n(e):n},f=function(n,e){return"string"===typeof n?Object(l["c"])(n,null,null,e):n},h=function(n){return n},x=i.a.forwardRef;function g(n){return!!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey)}"undefined"===typeof x&&(x=h);var y=x((function(n,e){var t=n.innerRef,r=n.navigate,a=n.onClick,o=Object(c["a"])(n,["innerRef","navigate","onClick"]),l=o.target,p=Object(s["a"])({},o,{onClick:function(n){try{a&&a(n)}catch(e){throw n.preventDefault(),e}n.defaultPrevented||0!==n.button||l&&"_self"!==l||g(n)||(n.preventDefault(),r())}});return p.ref=h!==x&&e||t,i.a.createElement("a",p)}));var C=x((function(n,e){var t=n.component,a=void 0===t?y:t,o=n.replace,l=n.to,u=n.innerRef,d=Object(c["a"])(n,["component","replace","to","innerRef"]);return i.a.createElement(r["h"].Consumer,null,(function(n){n||Object(p["a"])(!1);var t=n.history,r=f(m(l,n.location),n.location),c=r?t.createHref(r):"",g=Object(s["a"])({},d,{href:c,navigate:function(){var e=m(l,n.location),r=o?t.replace:t.push;r(e)}});return h!==x?g.ref=e||u:g.innerRef=u,i.a.createElement(a,g)}))})),w=function(n){return n},v=i.a.forwardRef;function b(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return e.filter((function(n){return n})).join(" ")}"undefined"===typeof v&&(v=w);var k=v((function(n,e){var t=n["aria-current"],a=void 0===t?"page":t,o=n.activeClassName,l=void 0===o?"active":o,u=n.activeStyle,d=n.className,h=n.exact,x=n.isActive,g=n.location,y=n.strict,k=n.style,V=n.to,P=n.innerRef,N=Object(c["a"])(n,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return i.a.createElement(r["h"].Consumer,null,(function(n){n||Object(p["a"])(!1);var t=g||n.location,o=f(m(V,t),t),c=o.pathname,R=c&&c.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),S=R?Object(r["j"])(t.pathname,{path:R,exact:h,strict:y}):null,T=!!(x?x(S,t):S),E=T?b(d,l):d,$=T?Object(s["a"])({},k,{},u):k,I=Object(s["a"])({"aria-current":T&&a||null,className:E,style:$,to:o},N);return w!==v?I.ref=e||P:I.innerRef=P,i.a.createElement(C,I)}))}))},"5Blz":function(n,e,t){"use strict";var r=t("MMxC"),a=t("9RRT").right,o=t("R8iy"),i=t("kGMc"),l=o("reduceRight"),s=i("reduce",{1:0});r({target:"Array",proto:!0,forced:!l||!s},{reduceRight:function(n){return a(this,n,arguments.length,arguments.length>1?arguments[1]:void 0)}})},"5IVg":function(n,e,t){n.exports={main:"main___zcJNB"}},"5JgN":function(n,e,t){"use strict";t("FbcW");var r=t("MMxC"),a=t("29mP"),o=t("lgSf"),i=t("NMFW"),l=t("ujhg"),s=t("kiNa"),c=t("uoF6"),p=t("1aI8"),u=t("igoe"),d=t("jtLI"),m=t("7BAe"),f=t("Ei+o"),h=t("f1E4"),x=t("tSXo"),g=t("u+7+"),y=t("HhvW"),C=t("qcmB"),w=t("9SZg"),v=t("2kyd"),b=a("fetch"),k=a("Headers"),V=v("iterator"),P="URLSearchParams",N=P+"Iterator",R=p.set,S=p.getterFor(P),T=p.getterFor(N),E=/\+/g,$=Array(4),I=function(n){return $[n-1]||($[n-1]=RegExp("((?:%[\\da-f]{2}){"+n+"})","gi"))},_=function(n){try{return decodeURIComponent(n)}catch(e){return n}},F=function(n){var e=n.replace(E," "),t=4;try{return decodeURIComponent(e)}catch(r){while(t)e=e.replace(I(t--),_);return e}},O=/[!'()~]|%20/g,A={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},M=function(n){return A[n]},z=function(n){return encodeURIComponent(n).replace(O,M)},j=function(n,e){if(e){var t,r,a=e.split("&"),o=0;while(o<a.length)t=a[o++],t.length&&(r=t.split("="),n.push({key:F(r.shift()),value:F(r.join("="))}))}},B=function(n){this.entries.length=0,j(this.entries,n)},D=function(n,e){if(n<e)throw TypeError("Not enough arguments")},L=c((function(n,e){R(this,{type:N,iterator:C(S(n).entries),kind:e})}),"Iterator",(function(){var n=T(this),e=n.kind,t=n.iterator.next(),r=t.value;return t.done||(t.value="keys"===e?r.key:"values"===e?r.value:[r.key,r.value]),t})),U=function(){u(this,U,P);var n,e,t,r,a,o,i,l,s,c=arguments.length>0?arguments[0]:void 0,p=this,m=[];if(R(p,{type:P,entries:m,updateURL:function(){},updateSearchParams:B}),void 0!==c)if(x(c))if(n=w(c),"function"===typeof n){e=n.call(c),t=e.next;while(!(r=t.call(e)).done){if(a=C(h(r.value)),o=a.next,(i=o.call(a)).done||(l=o.call(a)).done||!o.call(a).done)throw TypeError("Expected sequence with length 2");m.push({key:i.value+"",value:l.value+""})}}else for(s in c)d(c,s)&&m.push({key:s,value:c[s]+""});else j(m,"string"===typeof c?"?"===c.charAt(0)?c.slice(1):c:c+"")},K=U.prototype;l(K,{append:function(n,e){D(arguments.length,2);var t=S(this);t.entries.push({key:n+"",value:e+""}),t.updateURL()},delete:function(n){D(arguments.length,1);var e=S(this),t=e.entries,r=n+"",a=0;while(a<t.length)t[a].key===r?t.splice(a,1):a++;e.updateURL()},get:function(n){D(arguments.length,1);for(var e=S(this).entries,t=n+"",r=0;r<e.length;r++)if(e[r].key===t)return e[r].value;return null},getAll:function(n){D(arguments.length,1);for(var e=S(this).entries,t=n+"",r=[],a=0;a<e.length;a++)e[a].key===t&&r.push(e[a].value);return r},has:function(n){D(arguments.length,1);var e=S(this).entries,t=n+"",r=0;while(r<e.length)if(e[r++].key===t)return!0;return!1},set:function(n,e){D(arguments.length,1);for(var t,r=S(this),a=r.entries,o=!1,i=n+"",l=e+"",s=0;s<a.length;s++)t=a[s],t.key===i&&(o?a.splice(s--,1):(o=!0,t.value=l));o||a.push({key:i,value:l}),r.updateURL()},sort:function(){var n,e,t,r=S(this),a=r.entries,o=a.slice();for(a.length=0,t=0;t<o.length;t++){for(n=o[t],e=0;e<t;e++)if(a[e].key>n.key){a.splice(e,0,n);break}e===t&&a.push(n)}r.updateURL()},forEach:function(n){var e,t=S(this).entries,r=m(n,arguments.length>1?arguments[1]:void 0,3),a=0;while(a<t.length)e=t[a++],r(e.value,e.key,this)},keys:function(){return new L(this,"keys")},values:function(){return new L(this,"values")},entries:function(){return new L(this,"entries")}},{enumerable:!0}),i(K,V,K.entries),i(K,"toString",(function(){var n,e=S(this).entries,t=[],r=0;while(r<e.length)n=e[r++],t.push(z(n.key)+"="+z(n.value));return t.join("&")}),{enumerable:!0}),s(U,P),r({global:!0,forced:!o},{URLSearchParams:U}),o||"function"!=typeof b||"function"!=typeof k||r({global:!0,enumerable:!0,forced:!0},{fetch:function(n){var e,t,r,a=[n];return arguments.length>1&&(e=arguments[1],x(e)&&(t=e.body,f(t)===P&&(r=e.headers?new k(e.headers):new k,r.has("content-type")||r.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),e=g(e,{body:y(0,String(t)),headers:y(0,r)}))),a.push(e)),b.apply(this,a)}}),n.exports={URLSearchParams:U,getState:S}},"5P4d":function(n,e,t){n.exports={app:"app___1gkBM",title:"title___2hpI3",padding:"padding___8fQ3O"}},"5Yjd":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var r=d(t("q1tI")),a=p(t("Vou3")),o=p(t("ns0B")),i=d(t("3Mpw")),l=d(t("R2QN")),s=p(t("YXCA")),c=p(t("Eucq"));function p(n){return n&&n.__esModule?n:{default:n}}function u(){if("function"!==typeof WeakMap)return null;var n=new WeakMap;return u=function(){return n},n}function d(n){if(n&&n.__esModule)return n;if(null===n||"object"!==m(n)&&"function"!==typeof n)return{default:n};var e=u();if(e&&e.has(n))return e.get(n);var t={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in n)if(Object.prototype.hasOwnProperty.call(n,a)){var o=r?Object.getOwnPropertyDescriptor(n,a):null;o&&(o.get||o.set)?Object.defineProperty(t,a,o):t[a]=n[a]}return t["default"]=n,e&&e.set(n,t),t}function m(n){return m="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},m(n)}function f(){return f=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},f.apply(this,arguments)}function h(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function x(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?h(Object(t),!0).forEach((function(e){g(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):h(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function g(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function y(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function C(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function w(n,e,t){return e&&C(n.prototype,e),t&&C(n,t),n}function v(n,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&b(n,e)}function b(n,e){return b=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n},b(n,e)}function k(n){return function(){var e,t=R(n);if(N()){var r=R(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return V(this,e)}}function V(n,e){return!e||"object"!==m(e)&&"function"!==typeof e?P(n):e}function P(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function N(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}function R(n){return R=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)},R(n)}t("nw8D");var S=function(n){v(t,n);var e=k(t);function t(){var n;y(this,t);for(var r=arguments.length,a=new Array(r),i=0;i<r;i++)a[i]=arguments[i];return n=e.call.apply(e,[this].concat(a)),n.state={showSource:!1,sourceType:"",copyTimer:null,CSBData:"",showRiddle:!1,currentFile:""},n.initCSBData=function(){var e,t=n.props,r=t.source,a=t.desc,i=void 0===a?"":a,s=t.title,c=t.dependencies,p=t.files,u=Boolean(r.tsx),d=u?"tsx":"jsx",m={files:x((e={"index.html":{content:'<div style="margin: 16px;" id="root"></div>'}},g(e,"demo.".concat(d),{content:r.tsx||r.jsx}),g(e,"index.".concat(d),{content:"import React from 'react';\nimport ReactDOM from 'react-dom';\n".concat(c.antd?"import 'antd/dist/antd.css';":"","\nimport App from './demo';\n\n").concat(l.issueLink)}),e),p),deps:x({},c,{react:"^16.8.0"}),devDependencies:u?{typescript:"^3.8.0"}:{},desc:(0,o["default"])(i),template:"create-react-app".concat(u?"-typescript":""),fileName:"demo.".concat(d)};n.setState({CSBData:(0,l["default"])(m,{name:s||"dumi-demo"}).parameters})},n.handleCopied=function(){clearTimeout(n.state.copyTimer),n.setState({copyTimer:setTimeout((function(){n.setState({copyTimer:null})}),2e3)})},n.getSafeEntryCode=function(){var e=n.props,t=e.source,r=e.files,a=t.tsx||t.jsx;return Object.keys(r).forEach((function(n){var e=r[n];a.replace(e.path,"./".concat(n))})),a},n.convertRiddleJS=function(e){var t=n.props.dependencies,r=e;return r=r.replace("export default","const DumiDemo =").concat("\nReactDOM.render(<DumiDemo />, mountNode);"),r=r.replace(/(from ')((?:@[^/'"]+)?[^/'"]+)/g,(function(n,e,r){var a="".concat(e).concat(r);return t[r]&&(a+="@".concat(t[r])),a})),r},n}return w(t,[{key:"componentDidMount",value:function(){var n=this,e=this.props.source;this.initCSBData(),this.setState({sourceType:e.tsx?"tsx":"jsx"});var t=document.createElement("img");setTimeout((function(){t.src=""}),200),t.onload=function(){n.setState({showRiddle:!0})},t.src="https://private-alipayobjects.alipay.com/alipay-rmsdeploy-image/rmsportal/RKuAiriJqrUhyqW.png"}},{key:"render",value:function(){var n,e,t=this,o=this.props,l=o.children,s=o.source,p=o.title,u=o.desc,d=o.inline,m=o.transform,h=o.background,x=o.compact,g=o.path,y=o.dependencies,C=o.files,w=this.state,v=w.showSource,b=w.sourceType,k=w.copyTimer,V=w.showRiddle,P=w.currentFile,N=s[b],R=Boolean(Object.keys(C).length),S=P?P.match(/\.(\w+)$/)[1]:b;return d?l:r["default"].createElement("div",{className:"__dumi-default-previewer"},r["default"].createElement("div",{className:"__dumi-default-previewer-demo",style:{transform:m?"translate(0, 0)":void 0,padding:x?"0":void 0,background:h}},l),r["default"].createElement("div",{className:"__dumi-default-previewer-desc",title:p,dangerouslySetInnerHTML:{__html:u}}),r["default"].createElement("div",{className:"__dumi-default-previewer-actions"},!R&&r["default"].createElement(r["default"].Fragment,null,r["default"].createElement(c["default"],{type:this.props.source.tsx?"tsx":"jsx",base64:this.state.CSBData},r["default"].createElement("button",{role:"codesandbox",type:"submit"})),V&&r["default"].createElement("form",{action:"//riddle.alibaba-inc.com/riddles/define",method:"POST",target:"_blank",style:{display:"flex"}},r["default"].createElement("button",{role:"riddle",type:"submit"}),r["default"].createElement("input",{type:"hidden",name:"data",value:JSON.stringify({title:p,js:this.convertRiddleJS(N),css:y.antd?"@import 'antd".concat("@".concat(y.antd),"/dist/antd.css';"):""})}))),g&&r["default"].createElement("a",{target:"_blank",rel:"noopener noreferrer",href:g},r["default"].createElement("button",{role:"open-demo",type:"button"})),r["default"].createElement("span",null),r["default"].createElement(a["default"],{"button-role":k?"copied":"copy","data-clipboard-text":(null===(n=C[P])||void 0===n?void 0:n.content)||N,onSuccess:this.handleCopied}),s.tsx&&v&&!R&&r["default"].createElement("button",{role:"change-".concat(b),type:"button",onClick:function(){return t.setState({sourceType:"tsx"===b?"jsx":"tsx"})}}),r["default"].createElement("button",{role:"source",type:"button",onClick:function(){return t.setState({showSource:!v})}})),v&&r["default"].createElement("div",{className:"__dumi-default-previewer-source-wrapper"},R&&r["default"].createElement("ul",{className:"__dumi-default-previewer-source-tab"},r["default"].createElement("li",{className:P?"":"active"},r["default"].createElement("button",{onClick:function(){return t.setState({currentFile:""})}},"index.",b)),Object.keys(C).map((function(n){return r["default"].createElement("li",{className:P===n?"active":"",key:n},r["default"].createElement("button",{onClick:function(){return t.setState({currentFile:n})}},n))}))),r["default"].createElement("div",{className:"__dumi-default-previewer-source"},r["default"].createElement(i["default"],f({},i.defaultProps,{code:(null===(e=C[P])||void 0===e?void 0:e.content)||N,language:S,theme:void 0}),(function(n){var e=n.className,t=n.style,a=n.tokens,o=n.getLineProps,i=n.getTokenProps;return r["default"].createElement("pre",{className:e,style:t},a.map((function(n,e){return r["default"].createElement("div",o({line:n,key:e}),n.map((function(n,e){return r["default"].createElement("span",i({token:n,key:e}))})))})))})))))}}]),t}(r.Component),T=(0,s["default"])(S);e["default"]=T},"5eRu":function(n,e,t){"use strict";t.r(e),t.d(e,"routes",(function(){return i}));var r=t("k1fw"),a=t("LtsZ"),o=t("VCU9"),i=[{path:"/_demos/index",component:t("VqQD").default,exact:!0},{path:"/_demos/index-1",component:t("tIdH").default,exact:!0},{path:"/_demos/index-2",component:t("CtXR").default,exact:!0},{path:"/_demos/index-3",component:t("NSAu").default,exact:!0},{path:"/_demos/index-4",component:t("1L6A").default,exact:!0},{path:"/_demos/index-5",component:t("NF3c").default,exact:!0},{path:"/_demos/index-6",component:t("ousD").default,exact:!0},{path:"/_demos/index-7",component:t("x+K1").default,exact:!0},{path:"/_demos/index-8",component:t("CB4/").default,exact:!0},{path:"/_demos/index-9",component:t("bSvb").default,exact:!0},{path:"/_demos/index-10",component:t("VXy1").default,exact:!0},{path:"/_demos/index-11",component:t("p4TF").default,exact:!0},{path:"/_demos/index-12",component:t("QDMV").default,exact:!0},{path:"/_demos/index-13",component:t("/8bt").default,exact:!0},{path:"/_demos/index-14",component:t("F6Mq").default,exact:!0},{path:"/_demos/index-15",component:t("zfr2").default,exact:!0},{path:"/_demos/index-16",component:t("97lQ").default,exact:!0},{path:"/_demos/index-17",component:t("1iVJ").default,exact:!0},{path:"/_demos/index-18",component:t("O8zu").default,exact:!0},{path:"/_demos/index-19",component:t("v+AA").default,exact:!0},{path:"/",component:n=>t("q1tI").createElement(t("09U7").default,Object(r["a"])(Object(r["a"])({},{menus:{"*":{"*":[{path:"/",title:"Anna Remax UI - \u4e00\u6b3e\u57fa\u4e8eRemax\u6846\u67b6\u5f00\u53d1\u7684UI\u7ec4\u4ef6\u5e93",meta:{}},{path:"/index.html",title:"Anna Remax UI - \u4e00\u6b3e\u57fa\u4e8eRemax\u6846\u67b6\u5f00\u53d1\u7684UI\u7ec4\u4ef6\u5e93",meta:{}}],"/components":[{title:"General",path:"/components/general",meta:{order:0},children:[{path:"/components/general/button",title:"Button",meta:{}},{path:"/components/general/cell",title:"Cell",meta:{}},{path:"/components/general/icon",title:"Icon",meta:{}}]},{title:"Data Entry",path:"/components/data-entry",meta:{order:1},children:[{path:"/components/data-entry/input",title:"Input",meta:{order:5}},{path:"/components/data-entry/picker",title:"Picker",meta:{order:6}},{path:"/components/data-entry/radio",title:"Radio",meta:{order:10}},{path:"/components/data-entry/checkbox",title:"Checkbox",meta:{order:15}},{path:"/components/data-entry/switch",title:"Switch",meta:{order:15}},{path:"/components/data-entry/selector",title:"Selector",meta:{order:20}},{path:"/components/data-entry/cascade",title:"Cascade",meta:{order:25}},{path:"/components/data-entry/search-bar",title:"SearchBar",meta:{order:25}},{path:"/components/data-entry/rate",title:"Rate",meta:{order:30}}]},{title:"Data Display",path:"/components/data-display",meta:{order:2},children:[{path:"/components/data-display/card",title:"Card",meta:{order:5}},{path:"/components/data-display/steps",title:"Steps",meta:{order:10}},{path:"/components/data-display/tag",title:"Tag",meta:{order:15}},{path:"/components/data-display/tabs",title:"Tabs",meta:{order:20}}]},{title:"Feedback",path:"/components/feedback",meta:{order:3},children:[{path:"/components/feedback/filter",title:"Filter",meta:{order:5}},{path:"/components/feedback/loading",title:"Loading",meta:{order:10}},{path:"/components/feedback/popup",title:"Popup",meta:{order:15}},{path:"/components/feedback/result",title:"Result",meta:{order:20}}]}]}},locales:[],navs:{"*":[{path:"/components",title:"Components"},{title:"GitHub",path:"https://github.com/AnnaSearl/anna-remax-ui"}]},title:"Anna Remax UI",logo:"https://smebimage.fuliaoyi.com/FoMXNlKdZt9UqufDkPony8ztWKsU",mode:"site",repoUrl:"https://github.com/AnnaSearl/anna-remax-ui"}),n)),routes:[{path:"/index.html",component:t("F+kV").default,exact:!0,meta:{filePath:"docs/index.md",updatedTime:158916463e4,title:"Anna Remax UI - \u4e00\u6b3e\u57fa\u4e8eRemax\u6846\u67b6\u5f00\u53d1\u7684UI\u7ec4\u4ef6\u5e93",hero:{title:"Anna Remax UI",desc:'<div class="markdown"><p>\u4e00\u6b3e\u57fa\u4e8e Remax \u6846\u67b6\u5f00\u53d1\u7684UI\u7ec4\u4ef6\u5e93</p></div>',actions:[{text:"\u5f00\u59cb\u4f7f\u7528",link:"/components/general/button"}]},features:[{title:"\u57fa\u4e8e Remax",desc:'<div class="markdown"><p>\u57fa\u4e8e Remax \u5f00\u53d1UI\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u5c3d\u60c5\u4f7f\u7528 Remax \u7684\u7279\u6027\u3002</p></div>'},{title:"\u591a\u7aef\u9002\u914d\u8fd0\u884c",desc:'<div class="markdown"><p>\u652f\u6301\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0c\u652f\u4ed8\u5b9d\u5c0f\u7a0b\u5e8f\uff0c\u9489\u9489\u5c0f\u7a0b\u5e8f\uff0cWeb\u3002</p></div>'},{title:"\u4e00\u6b3e cute \u7684UI\u7ec4\u4ef6",desc:'<div class="markdown"><p>\u56e0\u4e3a\u5b9e\u5728\u60f3\u4e0d\u51fa\u5176\u4ed6\u7279\u6027\u4e86\uff0c\u53ea\u80fd\u8bf4\u53ef\u7231\u4e86\ud83d\ude0a</p></div>'}],footer:'<div class="markdown"><p>Open-source MIT Licensed | Copyright \xa9 2020<br />Powered by <a href="https://d.umijs.org/" target="_blank">dumi<svg xmlns="http://www.w3.org/2000/svg" aria-hidden x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></p></div>',slugs:[]},title:"Anna Remax UI - \u4e00\u6b3e\u57fa\u4e8eRemax\u6846\u67b6\u5f00\u53d1\u7684UI\u7ec4\u4ef6\u5e93"},{path:"/",component:t("F+kV").default,exact:!0,meta:{filePath:"docs/index.md",updatedTime:158916463e4,title:"Anna Remax UI - \u4e00\u6b3e\u57fa\u4e8eRemax\u6846\u67b6\u5f00\u53d1\u7684UI\u7ec4\u4ef6\u5e93",hero:{title:"Anna Remax UI",desc:'<div class="markdown"><p>\u4e00\u6b3e\u57fa\u4e8e Remax \u6846\u67b6\u5f00\u53d1\u7684UI\u7ec4\u4ef6\u5e93</p></div>',actions:[{text:"\u5f00\u59cb\u4f7f\u7528",link:"/components/general/button"}]},features:[{title:"\u57fa\u4e8e Remax",desc:'<div class="markdown"><p>\u57fa\u4e8e Remax \u5f00\u53d1UI\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u5c3d\u60c5\u4f7f\u7528 Remax \u7684\u7279\u6027\u3002</p></div>'},{title:"\u591a\u7aef\u9002\u914d\u8fd0\u884c",desc:'<div class="markdown"><p>\u652f\u6301\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0c\u652f\u4ed8\u5b9d\u5c0f\u7a0b\u5e8f\uff0c\u9489\u9489\u5c0f\u7a0b\u5e8f\uff0cWeb\u3002</p></div>'},{title:"\u4e00\u6b3e cute \u7684UI\u7ec4\u4ef6",desc:'<div class="markdown"><p>\u56e0\u4e3a\u5b9e\u5728\u60f3\u4e0d\u51fa\u5176\u4ed6\u7279\u6027\u4e86\uff0c\u53ea\u80fd\u8bf4\u53ef\u7231\u4e86\ud83d\ude0a</p></div>'}],footer:'<div class="markdown"><p>Open-source MIT Licensed | Copyright \xa9 2020<br />Powered by <a href="https://d.umijs.org/" target="_blank">dumi<svg xmlns="http://www.w3.org/2000/svg" aria-hidden x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="__dumi-default-external-link-icon"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path><polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></p></div>',slugs:[]},title:"Anna Remax UI - \u4e00\u6b3e\u57fa\u4e8eRemax\u6846\u67b6\u5f00\u53d1\u7684UI\u7ec4\u4ef6\u5e93"},{path:"/components/data-display/card",component:t("FiYG").default,exact:!0,meta:{filePath:"docs/components/data-display/card.md",updatedTime:158916463e4,title:"Card",order:5,group:{title:"Data Display",order:2,path:"/components/data-display"},slugs:[{depth:2,value:"Card",heading:"card"},{depth:2,value:"API",heading:"api"}],nav:{path:"/components",title:"Components"}},title:"Card"},{path:"/components/data-display/steps",component:t("K8hH").default,exact:!0,meta:{filePath:"docs/components/data-display/steps.md",updatedTime:null,title:"Steps",order:10,slugs:[{depth:2,value:"Steps",heading:"steps"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Steps",heading:"steps-1"},{depth:4,value:"StepProps",heading:"stepprops"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-display",title:"Data Display"}},title:"Steps"},{path:"/components/data-display/tabs",component:t("7tSP").default,exact:!0,meta:{filePath:"docs/components/data-display/tabs.md",updatedTime:null,title:"Tabs",order:20,slugs:[{depth:2,value:"Tabs",heading:"tabs"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Tabs",heading:"tabs-1"},{depth:4,value:"Tabs.TabContent",heading:"tabstabcontent"},{depth:4,value:"TabTitleProps",heading:"tabtitleprops"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-display",title:"Data Display"}},title:"Tabs"},{path:"/components/data-display/tag",component:t("slMo").default,exact:!0,meta:{filePath:"docs/components/data-display/tag.md",updatedTime:null,title:"Tag",order:15,slugs:[{depth:2,value:"Tag",heading:"tag"},{depth:2,value:"API",heading:"api"},{depth:2,value:"Tag",heading:"tag-1"},{depth:4,value:"Tag.CheckableTag",heading:"tagcheckabletag"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-display",title:"Data Display"}},title:"Tag"},{path:"/components/data-entry/cascade",component:t("0lgO").default,exact:!0,meta:{filePath:"docs/components/data-entry/cascade.md",updatedTime:null,title:"Cascade",order:25,slugs:[{depth:2,value:"Cascade",heading:"cascade"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Cascade",heading:"cascade-1"},{depth:4,value:"OptionProps",heading:"optionprops"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-entry",title:"Data Entry"}},title:"Cascade"},{path:"/components/data-entry/checkbox",component:t("tm/P").default,exact:!0,meta:{filePath:"docs/components/data-entry/checkbox.md",updatedTime:null,title:"Checkbox",order:15,slugs:[{depth:2,value:"Checkbox",heading:"checkbox"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Checkbox",heading:"checkbox-1"},{depth:4,value:"Checkbox.Group",heading:"checkboxgroup"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-entry",title:"Data Entry"}},title:"Checkbox"},{path:"/components/data-entry/input",component:t("WDra").default,exact:!0,meta:{filePath:"docs/components/data-entry/input.md",updatedTime:null,title:"Input",order:5,slugs:[{depth:2,value:"Input",heading:"input"},{depth:2,value:"API",heading:"api"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-entry",title:"Data Entry"}},title:"Input"},{path:"/components/data-entry/picker",component:t("6Y5q").default,exact:!0,meta:{filePath:"docs/components/data-entry/picker.md",updatedTime:null,title:"Picker",order:6,slugs:[{depth:2,value:"Picker",heading:"picker"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Picker",heading:"picker-1"},{depth:4,value:"OptionProps",heading:"optionprops"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-entry",title:"Data Entry"}},title:"Picker"},{path:"/components/data-entry/radio",component:t("dlg8").default,exact:!0,meta:{filePath:"docs/components/data-entry/radio.md",updatedTime:null,title:"Radio",order:10,slugs:[{depth:2,value:"Radio",heading:"radio"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Radio",heading:"radio-1"},{depth:4,value:"Radio.Group",heading:"radiogroup"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-entry",title:"Data Entry"}},title:"Radio"},{path:"/components/data-entry/rate",component:t("ZASa").default,exact:!0,meta:{filePath:"docs/components/data-entry/rate.md",updatedTime:null,title:"Rate",order:30,slugs:[{depth:2,value:"Rate",heading:"rate"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Rate",heading:"rate-1"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-entry",title:"Data Entry"}},title:"Rate"},{path:"/components/data-entry/search-bar",component:t("FM/G").default,exact:!0,meta:{filePath:"docs/components/data-entry/searchBar.md",updatedTime:158916463e4,title:"SearchBar",order:25,group:{title:"Data Entry",order:1,path:"/components/data-entry"},slugs:[{depth:2,value:"SearchBar",heading:"searchbar"},{depth:2,value:"API",heading:"api"}],nav:{path:"/components",title:"Components"}},title:"SearchBar"},{path:"/components/data-entry/selector",component:t("S9Xh").default,exact:!0,meta:{filePath:"docs/components/data-entry/selector.md",updatedTime:null,title:"Selector",order:20,slugs:[{depth:2,value:"Selector",heading:"selector"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Selector",heading:"selector-1"},{depth:4,value:"OptionProps",heading:"optionprops"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-entry",title:"Data Entry"}},title:"Selector"},{path:"/components/data-entry/switch",component:t("bv5U").default,exact:!0,meta:{filePath:"docs/components/data-entry/switch.md",updatedTime:null,title:"Switch",order:15,slugs:[{depth:2,value:"Switch",heading:"switch"},{depth:2,value:"API",heading:"api"}],nav:{path:"/components",title:"Components"},group:{path:"/components/data-entry",title:"Data Entry"}},title:"Switch"},{path:"/components/feedback/filter",component:t("1dBY").default,exact:!0,meta:{filePath:"docs/components/feedback/filter.md",updatedTime:null,title:"Filter",order:5,group:{title:"Feedback",order:3,path:"/components/feedback"},slugs:[{depth:2,value:"Filter",heading:"filter"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Filter",heading:"filter-1"},{depth:4,value:"Filter.Item",heading:"filteritem"},{depth:4,value:"OptionProps",heading:"optionprops"}],nav:{path:"/components",title:"Components"}},title:"Filter"},{path:"/components/feedback/loading",component:t("Up4g").default,exact:!0,meta:{filePath:"docs/components/feedback/loading.md",updatedTime:null,title:"Loading",order:10,slugs:[{depth:2,value:"Loading",heading:"loading"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Loading",heading:"loading-1"}],nav:{path:"/components",title:"Components"},group:{path:"/components/feedback",title:"Feedback"}},title:"Loading"},{path:"/components/feedback/popup",component:t("W5nr").default,exact:!0,meta:{filePath:"docs/components/feedback/popup.md",updatedTime:null,title:"Popup",order:15,slugs:[{depth:2,value:"Popup",heading:"popup"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Popup",heading:"popup-1"}],nav:{path:"/components",title:"Components"},group:{path:"/components/feedback",title:"Feedback"}},title:"Popup"},{path:"/components/feedback/result",component:t("eLxY").default,exact:!0,meta:{filePath:"docs/components/feedback/result.md",updatedTime:null,title:"Result",order:20,slugs:[{depth:2,value:"Result",heading:"result"},{depth:2,value:"API",heading:"api"},{depth:4,value:"Result",heading:"result-1"},{depth:4,value:"IconProps",heading:"iconprops"}],nav:{path:"/components",title:"Components"},group:{path:"/components/feedback",title:"Feedback"}},title:"Result"},{path:"/components/general/button",component:t("AWJ3").default,exact:!0,meta:{filePath:"docs/components/general/button.md",updatedTime:158916463e4,title:"Button",group:{order:0,path:"/components/general",title:"General"},slugs:[{depth:2,value:"Button",heading:"button"},{depth:2,value:"API",heading:"api"}],nav:{path:"/components",title:"Components"}},title:"Button"},{path:"/components/general/cell",component:t("jlhX").default,exact:!0,meta:{filePath:"docs/components/general/cell.md",updatedTime:158916463e4,title:"Cell",slugs:[{depth:2,value:"Cell",heading:"cell"},{depth:2,value:"API",heading:"api"}],nav:{path:"/components",title:"Components"},group:{path:"/components/general",title:"General"}},title:"Cell"},{path:"/components/general/icon",component:t("E+bc").default,exact:!0,meta:{filePath:"docs/components/general/icon.md",updatedTime:null,title:"Icon",slugs:[{depth:2,value:"Icon",heading:"icon"},{depth:2,value:"API",heading:"api"}],nav:{path:"/components",title:"Components"},group:{path:"/components/general",title:"General"}},title:"Icon"},{path:"/components/data-display",meta:{order:2},exact:!0,redirect:"/components/data-display/card"},{path:"/components",meta:{},exact:!0,redirect:"/components/general"},{path:"/components/data-entry",meta:{},exact:!0,redirect:"/components/data-entry/input"},{path:"/components/feedback",meta:{order:3},exact:!0,redirect:"/components/feedback/filter"},{path:"/components/general",meta:{order:0},exact:!0,redirect:"/components/general/button"}],title:"Anna Remax UI"}];o["a"].applyPlugins({key:"patchRoutes",type:a["ApplyPluginsType"].event,args:{routes:i}})},"5qeZ":function(n,e,t){"use strict";var r=t("MMxC"),a=t("zv1X").every,o=t("R8iy"),i=t("kGMc"),l=o("every"),s=i("every");r({target:"Array",proto:!0,forced:!l||!s},{every:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},"5wUe":function(n,e,t){var r=t("Q9SF"),a=t("MIOZ"),o=t("mGKP"),i=t("h0XC");function l(n,e){return r(n)||a(n,e)||o(n,e)||i()}n.exports=l},"5yw/":function(n,e){n.exports={}},"628M":function(n,e,t){},"6FCX":function(n,e,t){var r=t("MMxC"),a=t("qA1w");r({target:"WeakMap",stat:!0},{of:a})},"6Y5q":function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("x+K1")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"picker"},o.a.createElement("a",{"aria-hidden":"true",href:"#picker"},o.a.createElement("span",{className:"icon icon-link"})),"Picker"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { Picker } from \'anna-remax-ui\';\nimport { Block, Frame } from \'../../common\';\n\nconst options = [\n  { key: \'1\', value: \'Remax\' },\n  { key: \'2\', value: \'Taro\' },\n  { key: \'3\', value: \'Nanachi\' },\n  { key: \'4\', value: \'Uni-app\' },\n  { key: \'4\', value: \'Mpvue\' },\n];\n\nexport default () => {\n  const [value, setValue] = React.useState(\'0\');\n  const [value1, setValue1] = React.useState(\'0\');\n  const [value2, setValue2] = React.useState(\'0\');\n  const [value3, setValue3] = React.useState(\'0\');\n  const [value4, setValue4] = React.useState(\'0\');\n\n  return (\n    <Frame grayBg>\n      <Block title="Basic">\n        <Picker\n          value={value}\n          onChange={v => setValue(v.key)}\n          options={options}\n          placeholder="Please choose"\n        />\n      </Block>\n      <Block title="With Label">\n        <Picker\n          label="Scheme"\n          value={value1}\n          onChange={v => setValue1(v.key)}\n          options={options}\n          placeholder="Please choose"\n        />\n      </Block>\n      <Block title="pickerAlign">\n        <Picker\n          label="Scheme"\n          value={value2}\n          onChange={v => setValue2(v.key)}\n          options={options}\n          placeholder="Please choose"\n          pickerAlign="right"\n        />\n      </Block>\n      <Block title="Disabled">\n        <Picker label="Scheme" options={options} placeholder="Has been disabled" disabled />\n      </Block>\n      <Block title="With Required">\n        <Picker\n          required\n          label="Scheme"\n          value={value3}\n          onChange={v => setValue3(v.key)}\n          options={options}\n          placeholder="Please choose"\n        />\n      </Block>\n      <Block title="With Icon">\n        <Picker\n          icon="likefill"\n          label="\u6700\u7231\u7684"\n          value={value4}\n          onChange={v => setValue4(v.key)}\n          options={options}\n          placeholder="Please choose"\n        />\n      </Block>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { Picker } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nconst options = [\n  {\n    key: '1',\n    value: 'Remax',\n  },\n  {\n    key: '2',\n    value: 'Taro',\n  },\n  {\n    key: '3',\n    value: 'Nanachi',\n  },\n  {\n    key: '4',\n    value: 'Uni-app',\n  },\n  {\n    key: '4',\n    value: 'Mpvue',\n  },\n];\nexport default () => {\n  const [value, setValue] = React.useState('0');\n  const [value1, setValue1] = React.useState('0');\n  const [value2, setValue2] = React.useState('0');\n  const [value3, setValue3] = React.useState('0');\n  const [value4, setValue4] = React.useState('0');\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(Picker, {\n        value,\n        onChange: v => setValue(v.key),\n        options,\n        placeholder: 'Please choose',\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Label',\n      },\n      /* #__PURE__ */ React.createElement(Picker, {\n        label: 'Scheme',\n        value: value1,\n        onChange: v => setValue1(v.key),\n        options,\n        placeholder: 'Please choose',\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'pickerAlign',\n      },\n      /* #__PURE__ */ React.createElement(Picker, {\n        label: 'Scheme',\n        value: value2,\n        onChange: v => setValue2(v.key),\n        options,\n        placeholder: 'Please choose',\n        pickerAlign: 'right',\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Disabled',\n      },\n      /* #__PURE__ */ React.createElement(Picker, {\n        label: 'Scheme',\n        options,\n        placeholder: 'Has been disabled',\n        disabled: true,\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Required',\n      },\n      /* #__PURE__ */ React.createElement(Picker, {\n        required: true,\n        label: 'Scheme',\n        value: value3,\n        onChange: v => setValue3(v.key),\n        options,\n        placeholder: 'Please choose',\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Icon',\n      },\n      /* #__PURE__ */ React.createElement(Picker, {\n        icon: 'likefill',\n        label: '\\u6700\\u7231\\u7684',\n        value: value4,\n        onChange: v => setValue4(v.key),\n        options,\n        placeholder: 'Please choose',\n      }),\n    ),\n  );\n};\n"}},{path:"/_demos/index-7",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"picker-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#picker-1"},o.a.createElement("span",{className:"icon icon-link"})),"Picker"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u8868\u793a\u9009\u62e9\u4e86 options \u4e2d\u5bf9\u5e94key\u503c\u7684\u9009\u9879"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"options"),o.a.createElement("td",null,"Picker\u7684\u6240\u6709\u9009\u9879"),o.a.createElement("td",null,"OptionProps"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"placeholder"),o.a.createElement("td",null,"\u5360\u4f4d\u63d0\u793a\u6587\u5b57"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"disabled"),o.a.createElement("td",null,"\u662f\u5426\u7981\u7528"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"pickerAlign"),o.a.createElement("td",null,"Picker\u5bf9\u9f50\u65b9\u5f0f"),o.a.createElement("td",null,o.a.createElement("code",null,"center")," | ",o.a.createElement("code",null,"right")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"label"),o.a.createElement("td",null,"\u5de6\u4fa7\u6807\u7b7e"),o.a.createElement("td",null,o.a.createElement("code",null,"string")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"icon"),o.a.createElement("td",null,"\u5de6\u4fa7\u56fe\u6807\u540d\u79f0"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"required"),o.a.createElement("td",null,"\u662f\u5426\u663e\u793a\u8868\u5355\u5fc5\u586b\u661f\u53f7"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"border"),o.a.createElement("td",null,"\u662f\u5426\u663e\u793a\u5185\u8fb9\u6846"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"true"))),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"value \u6539\u53d8\u65f6\u89e6\u53d1 change \u4e8b\u4ef6"),o.a.createElement("td",null,"(v: ","{","key: string, value: string","}",") => void"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"optionprops"},o.a.createElement("a",{"aria-hidden":"true",href:"#optionprops"},o.a.createElement("span",{className:"icon icon-link"})),"OptionProps"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"key"),o.a.createElement("td",null,"\u6b64\u9879\u5fc5\u987b\u8bbe\u7f6e\uff08\u5176\u503c\u5728\u6574\u4e2a\u9009\u9879\u8303\u56f4\u5185\u552f\u4e00\uff09"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u503c"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-"))))))}},"6cL7":function(n,e,t){"use strict";var r=t("ENif"),a=t("f1E4"),o=t("FCfD"),i=t("UPML"),l=t("dagG");r("search",1,(function(n,e,t){return[function(e){var t=o(this),r=void 0==e?void 0:e[n];return void 0!==r?r.call(e,t):new RegExp(e)[n](String(t))},function(n){var r=t(e,n,this);if(r.done)return r.value;var o=a(n),s=String(this),c=o.lastIndex;i(c,0)||(o.lastIndex=0);var p=l(o,s);return i(o.lastIndex,c)||(o.lastIndex=c),null===p?-1:p.index}]}))},"6ixQ":function(n,e){n.exports={}},"6spV":function(n,e,t){"use strict";var r=t("MMxC"),a=t("tny8"),o=t("ukPv"),i=t("jtLI"),l=t("tSXo"),s=t("YfKC").f,c=t("LJ80"),p=o.Symbol;if(a&&"function"==typeof p&&(!("description"in p.prototype)||void 0!==p().description)){var u={},d=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof d?new p(n):void 0===n?p():p(n);return""===n&&(u[e]=!0),e};c(d,p);var m=d.prototype=p.prototype;m.constructor=d;var f=m.toString,h="Symbol(test)"==String(p("test")),x=/^Symbol\((.*)\)[^)]+$/;s(m,"description",{configurable:!0,get:function(){var n=l(this)?this.valueOf():this,e=f.call(n);if(i(u,n))return"";var t=h?e.slice(7,-1):e.replace(x,"$1");return""===t?void 0:t}}),r({global:!0,forced:!0},{Symbol:d})}},"6xEa":function(n,e,t){var r,a=function(){var n=String.fromCharCode,e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",r={};function a(n,e){if(!r[n]){r[n]={};for(var t=0;t<n.length;t++)r[n][n.charAt(t)]=t}return r[n][e]}var o={compressToBase64:function(n){if(null==n)return"";var t=o._compress(n,6,(function(n){return e.charAt(n)}));switch(t.length%4){default:case 0:return t;case 1:return t+"===";case 2:return t+"==";case 3:return t+"="}},decompressFromBase64:function(n){return null==n?"":""==n?null:o._decompress(n.length,32,(function(t){return a(e,n.charAt(t))}))},compressToUTF16:function(e){return null==e?"":o._compress(e,15,(function(e){return n(e+32)}))+" "},decompressFromUTF16:function(n){return null==n?"":""==n?null:o._decompress(n.length,16384,(function(e){return n.charCodeAt(e)-32}))},compressToUint8Array:function(n){for(var e=o.compress(n),t=new Uint8Array(2*e.length),r=0,a=e.length;r<a;r++){var i=e.charCodeAt(r);t[2*r]=i>>>8,t[2*r+1]=i%256}return t},decompressFromUint8Array:function(e){if(null===e||void 0===e)return o.decompress(e);for(var t=new Array(e.length/2),r=0,a=t.length;r<a;r++)t[r]=256*e[2*r]+e[2*r+1];var i=[];return t.forEach((function(e){i.push(n(e))})),o.decompress(i.join(""))},compressToEncodedURIComponent:function(n){return null==n?"":o._compress(n,6,(function(n){return t.charAt(n)}))},decompressFromEncodedURIComponent:function(n){return null==n?"":""==n?null:(n=n.replace(/ /g,"+"),o._decompress(n.length,32,(function(e){return a(t,n.charAt(e))})))},compress:function(e){return o._compress(e,16,(function(e){return n(e)}))},_compress:function(n,e,t){if(null==n)return"";var r,a,o,i={},l={},s="",c="",p="",u=2,d=3,m=2,f=[],h=0,x=0;for(o=0;o<n.length;o+=1)if(s=n.charAt(o),Object.prototype.hasOwnProperty.call(i,s)||(i[s]=d++,l[s]=!0),c=p+s,Object.prototype.hasOwnProperty.call(i,c))p=c;else{if(Object.prototype.hasOwnProperty.call(l,p)){if(p.charCodeAt(0)<256){for(r=0;r<m;r++)h<<=1,x==e-1?(x=0,f.push(t(h)),h=0):x++;for(a=p.charCodeAt(0),r=0;r<8;r++)h=h<<1|1&a,x==e-1?(x=0,f.push(t(h)),h=0):x++,a>>=1}else{for(a=1,r=0;r<m;r++)h=h<<1|a,x==e-1?(x=0,f.push(t(h)),h=0):x++,a=0;for(a=p.charCodeAt(0),r=0;r<16;r++)h=h<<1|1&a,x==e-1?(x=0,f.push(t(h)),h=0):x++,a>>=1}u--,0==u&&(u=Math.pow(2,m),m++),delete l[p]}else for(a=i[p],r=0;r<m;r++)h=h<<1|1&a,x==e-1?(x=0,f.push(t(h)),h=0):x++,a>>=1;u--,0==u&&(u=Math.pow(2,m),m++),i[c]=d++,p=String(s)}if(""!==p){if(Object.prototype.hasOwnProperty.call(l,p)){if(p.charCodeAt(0)<256){for(r=0;r<m;r++)h<<=1,x==e-1?(x=0,f.push(t(h)),h=0):x++;for(a=p.charCodeAt(0),r=0;r<8;r++)h=h<<1|1&a,x==e-1?(x=0,f.push(t(h)),h=0):x++,a>>=1}else{for(a=1,r=0;r<m;r++)h=h<<1|a,x==e-1?(x=0,f.push(t(h)),h=0):x++,a=0;for(a=p.charCodeAt(0),r=0;r<16;r++)h=h<<1|1&a,x==e-1?(x=0,f.push(t(h)),h=0):x++,a>>=1}u--,0==u&&(u=Math.pow(2,m),m++),delete l[p]}else for(a=i[p],r=0;r<m;r++)h=h<<1|1&a,x==e-1?(x=0,f.push(t(h)),h=0):x++,a>>=1;u--,0==u&&(u=Math.pow(2,m),m++)}for(a=2,r=0;r<m;r++)h=h<<1|1&a,x==e-1?(x=0,f.push(t(h)),h=0):x++,a>>=1;while(1){if(h<<=1,x==e-1){f.push(t(h));break}x++}return f.join("")},decompress:function(n){return null==n?"":""==n?null:o._decompress(n.length,32768,(function(e){return n.charCodeAt(e)}))},_decompress:function(e,t,r){var a,o,i,l,s,c,p,u=[],d=4,m=4,f=3,h="",x=[],g={val:r(0),position:t,index:1};for(a=0;a<3;a+=1)u[a]=a;i=0,s=Math.pow(2,2),c=1;while(c!=s)l=g.val&g.position,g.position>>=1,0==g.position&&(g.position=t,g.val=r(g.index++)),i|=(l>0?1:0)*c,c<<=1;switch(i){case 0:i=0,s=Math.pow(2,8),c=1;while(c!=s)l=g.val&g.position,g.position>>=1,0==g.position&&(g.position=t,g.val=r(g.index++)),i|=(l>0?1:0)*c,c<<=1;p=n(i);break;case 1:i=0,s=Math.pow(2,16),c=1;while(c!=s)l=g.val&g.position,g.position>>=1,0==g.position&&(g.position=t,g.val=r(g.index++)),i|=(l>0?1:0)*c,c<<=1;p=n(i);break;case 2:return""}u[3]=p,o=p,x.push(p);while(1){if(g.index>e)return"";i=0,s=Math.pow(2,f),c=1;while(c!=s)l=g.val&g.position,g.position>>=1,0==g.position&&(g.position=t,g.val=r(g.index++)),i|=(l>0?1:0)*c,c<<=1;switch(p=i){case 0:i=0,s=Math.pow(2,8),c=1;while(c!=s)l=g.val&g.position,g.position>>=1,0==g.position&&(g.position=t,g.val=r(g.index++)),i|=(l>0?1:0)*c,c<<=1;u[m++]=n(i),p=m-1,d--;break;case 1:i=0,s=Math.pow(2,16),c=1;while(c!=s)l=g.val&g.position,g.position>>=1,0==g.position&&(g.position=t,g.val=r(g.index++)),i|=(l>0?1:0)*c,c<<=1;u[m++]=n(i),p=m-1,d--;break;case 2:return x.join("")}if(0==d&&(d=Math.pow(2,f),f++),u[p])h=u[p];else{if(p!==m)return null;h=o+o.charAt(0)}x.push(h),u[m++]=o+h.charAt(0),d--,o=h,0==d&&(d=Math.pow(2,f),f++)}}};return o}();r=function(){return a}.call(e,t,e,n),void 0===r||(n.exports=r)},"7BAe":function(n,e,t){var r=t("cT1L");n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 0:return function(){return n.call(e)};case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,a){return n.call(e,t,r,a)}}return function(){return n.apply(e,arguments)}}},"7V/p":function(n,e,t){"use strict";var r=t("MMxC"),a=t("PHrn");r({target:"Array",proto:!0,forced:[].forEach!=a},{forEach:a})},"7tSP":function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("CtXR")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"tabs"},o.a.createElement("a",{"aria-hidden":"true",href:"#tabs"},o.a.createElement("span",{className:"icon icon-link"})),"Tabs"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Tabs, Card } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nconst { TabContent } = Tabs;\n\nconst tabs = [\n  {\n    key: '0',\n    title: 'All',\n  },\n  {\n    key: '1',\n    title: 'Missed',\n  },\n];\n\nconst tabs1 = [\n  {\n    key: '0',\n    title: 'All',\n  },\n  {\n    key: '1',\n    title: 'Missed',\n  },\n];\n\nconst tabs2 = [\n  {\n    key: '0',\n    title: '\u5168\u90e8',\n  },\n  {\n    key: '1',\n    title: '\u5f85\u5904\u7406',\n  },\n  {\n    key: '2',\n    title: '\u8be2\u4ef7\u4e2d',\n  },\n  {\n    key: '3',\n    title: '\u5f85\u62a5\u4ef7',\n  },\n  {\n    key: '4',\n    title: '\u62a5\u4ef7\u4e2d',\n  },\n];\n\nconst tabs3 = [\n  {\n    key: '0',\n    title: '\u7cbe\u9009',\n  },\n  {\n    key: '1',\n    title: '\u5173\u6ce8',\n  },\n  {\n    key: '2',\n    title: '\u5e7f\u573a',\n  },\n];\n\nconst tabs4 = [\n  {\n    key: '0',\n    title: 'All',\n  },\n  {\n    key: '1',\n    title: 'Read',\n  },\n  {\n    key: '2',\n    title: 'Missed',\n  },\n];\n\nexport default () => {\n  const [stateKey, setStateKey] = React.useState('0');\n  const [stateKey1, setStateKey1] = React.useState('0');\n  const [stateKey2, setStateKey2] = React.useState('0');\n  const [stateKey3, setStateKey3] = React.useState('0');\n  const [stateKey4, setStateKey4] = React.useState('0');\n\n  return (\n    <Frame padding grayBg>\n      <Block noTitlePadding title=\"Basic\">\n        <Tabs tabs={tabs} onTabClick={({ key }) => setStateKey(key)} activeTab={stateKey}>\n          {tabs.map(tab => (\n            <TabContent key={tab.key} tabId={tab.key} activeTab={stateKey}>\n              <Card>\n                <View className={styles.tabContent}>{`${tab.title} content`}</View>\n              </Card>\n            </TabContent>\n          ))}\n        </Tabs>\n      </Block>\n      <Block noTitlePadding title=\"TitleSquare\">\n        <Tabs\n          tabs={tabs}\n          onTabClick={({ key }) => setStateKey1(key)}\n          activeTab={stateKey1}\n          titleSquare\n        >\n          {tabs1.map(tab => (\n            <TabContent key={tab.key} tabId={tab.key} activeTab={stateKey1}>\n              <Card>\n                <View className={styles.tabContent}>{`${tab.title} content`}</View>\n              </Card>\n            </TabContent>\n          ))}\n        </Tabs>\n      </Block>\n      <Block noTitlePadding title=\"Type\">\n        <View className={styles.subTitle}>plain</View>\n        <Tabs\n          type=\"plain\"\n          tabs={tabs2}\n          onTabClick={({ key }) => setStateKey2(key)}\n          activeTab={stateKey2}\n          titleSquare\n        >\n          {tabs2.map(tab => (\n            <TabContent key={tab.key} tabId={tab.key} activeTab={stateKey2}>\n              <Card>\n                <View className={styles.tabContent}>{`${tab.title} content`}</View>\n              </Card>\n            </TabContent>\n          ))}\n        </Tabs>\n        <View className={styles.subTitle}>card</View>\n        <Tabs\n          type=\"card\"\n          tabs={tabs3}\n          onTabClick={({ key }) => setStateKey3(key)}\n          activeTab={stateKey3}\n          titleSquare\n        >\n          {tabs3.map(tab => (\n            <TabContent key={tab.key} tabId={tab.key} activeTab={stateKey3}>\n              <Card>\n                <View className={styles.tabContent}>{`${tab.title} content`}</View>\n              </Card>\n            </TabContent>\n          ))}\n        </Tabs>\n      </Block>\n      <Block noTitlePadding title=\"Fixed\">\n        <View className={styles.subTitle}>\u4f7f\u7528fixed\u5c5e\u6027\u53ef\u4ee5\u4f7fTabs\u56fa\u5b9a\u5728\u9875\u9762\u9876\u90e8</View>\n        <Tabs\n          // fixed\n          tabs={tabs4}\n          onTabClick={({ key }) => setStateKey4(key)}\n          activeTab={stateKey4}\n          titleSquare\n        >\n          {tabs4.map(tab => (\n            <TabContent key={tab.key} tabId={tab.key} activeTab={stateKey4}>\n              <Card>\n                <View className={styles.tabContent}>{`${tab.title} content`}</View>\n              </Card>\n            </TabContent>\n          ))}\n        </Tabs>\n      </Block>\n    </Frame>\n  );\n};\n",jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Tabs, Card } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nconst { TabContent } = Tabs;\nconst tabs = [\n  {\n    key: '0',\n    title: 'All',\n  },\n  {\n    key: '1',\n    title: 'Missed',\n  },\n];\nconst tabs1 = [\n  {\n    key: '0',\n    title: 'All',\n  },\n  {\n    key: '1',\n    title: 'Missed',\n  },\n];\nconst tabs2 = [\n  {\n    key: '0',\n    title: '\u5168\u90e8',\n  },\n  {\n    key: '1',\n    title: '\u5f85\u5904\u7406',\n  },\n  {\n    key: '2',\n    title: '\u8be2\u4ef7\u4e2d',\n  },\n  {\n    key: '3',\n    title: '\u5f85\u62a5\u4ef7',\n  },\n  {\n    key: '4',\n    title: '\u62a5\u4ef7\u4e2d',\n  },\n];\nconst tabs3 = [\n  {\n    key: '0',\n    title: '\u7cbe\u9009',\n  },\n  {\n    key: '1',\n    title: '\u5173\u6ce8',\n  },\n  {\n    key: '2',\n    title: '\u5e7f\u573a',\n  },\n];\nconst tabs4 = [\n  {\n    key: '0',\n    title: 'All',\n  },\n  {\n    key: '1',\n    title: 'Read',\n  },\n  {\n    key: '2',\n    title: 'Missed',\n  },\n];\nexport default () => {\n  const [stateKey, setStateKey] = React.useState('0');\n  const [stateKey1, setStateKey1] = React.useState('0');\n  const [stateKey2, setStateKey2] = React.useState('0');\n  const [stateKey3, setStateKey3] = React.useState('0');\n  const [stateKey4, setStateKey4] = React.useState('0');\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      padding: true,\n      grayBg: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(\n        Tabs,\n        {\n          tabs,\n          onTabClick: ({ key }) => setStateKey(key),\n          activeTab: stateKey,\n        },\n        tabs.map(tab =>\n          /* #__PURE__ */ React.createElement(\n            TabContent,\n            {\n              key: tab.key,\n              tabId: tab.key,\n              activeTab: stateKey,\n            },\n            /* #__PURE__ */ React.createElement(\n              Card,\n              null,\n              /* #__PURE__ */ React.createElement(\n                View,\n                {\n                  className: styles.tabContent,\n                },\n                `${tab.title} content`,\n              ),\n            ),\n          ),\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'TitleSquare',\n      },\n      /* #__PURE__ */ React.createElement(\n        Tabs,\n        {\n          tabs,\n          onTabClick: ({ key }) => setStateKey1(key),\n          activeTab: stateKey1,\n          titleSquare: true,\n        },\n        tabs1.map(tab =>\n          /* #__PURE__ */ React.createElement(\n            TabContent,\n            {\n              key: tab.key,\n              tabId: tab.key,\n              activeTab: stateKey1,\n            },\n            /* #__PURE__ */ React.createElement(\n              Card,\n              null,\n              /* #__PURE__ */ React.createElement(\n                View,\n                {\n                  className: styles.tabContent,\n                },\n                `${tab.title} content`,\n              ),\n            ),\n          ),\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Type',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          className: styles.subTitle,\n        },\n        'plain',\n      ),\n      /* #__PURE__ */ React.createElement(\n        Tabs,\n        {\n          type: 'plain',\n          tabs: tabs2,\n          onTabClick: ({ key }) => setStateKey2(key),\n          activeTab: stateKey2,\n          titleSquare: true,\n        },\n        tabs2.map(tab =>\n          /* #__PURE__ */ React.createElement(\n            TabContent,\n            {\n              key: tab.key,\n              tabId: tab.key,\n              activeTab: stateKey2,\n            },\n            /* #__PURE__ */ React.createElement(\n              Card,\n              null,\n              /* #__PURE__ */ React.createElement(\n                View,\n                {\n                  className: styles.tabContent,\n                },\n                `${tab.title} content`,\n              ),\n            ),\n          ),\n        ),\n      ),\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          className: styles.subTitle,\n        },\n        'card',\n      ),\n      /* #__PURE__ */ React.createElement(\n        Tabs,\n        {\n          type: 'card',\n          tabs: tabs3,\n          onTabClick: ({ key }) => setStateKey3(key),\n          activeTab: stateKey3,\n          titleSquare: true,\n        },\n        tabs3.map(tab =>\n          /* #__PURE__ */ React.createElement(\n            TabContent,\n            {\n              key: tab.key,\n              tabId: tab.key,\n              activeTab: stateKey3,\n            },\n            /* #__PURE__ */ React.createElement(\n              Card,\n              null,\n              /* #__PURE__ */ React.createElement(\n                View,\n                {\n                  className: styles.tabContent,\n                },\n                `${tab.title} content`,\n              ),\n            ),\n          ),\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Fixed',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          className: styles.subTitle,\n        },\n        '\\u4F7F\\u7528fixed\\u5C5E\\u6027\\u53EF\\u4EE5\\u4F7FTabs\\u56FA\\u5B9A\\u5728\\u9875\\u9762\\u9876\\u90E8',\n      ),\n      /* #__PURE__ */ React.createElement(\n        Tabs, // fixed\n        {\n          tabs: tabs4,\n          onTabClick: ({ key }) => setStateKey4(key),\n          activeTab: stateKey4,\n          titleSquare: true,\n        },\n        tabs4.map(tab =>\n          /* #__PURE__ */ React.createElement(\n            TabContent,\n            {\n              key: tab.key,\n              tabId: tab.key,\n              activeTab: stateKey4,\n            },\n            /* #__PURE__ */ React.createElement(\n              Card,\n              null,\n              /* #__PURE__ */ React.createElement(\n                View,\n                {\n                  className: styles.tabContent,\n                },\n                `${tab.title} content`,\n              ),\n            ),\n          ),\n        ),\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-2",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"index.module.scss":{path:"./index.module.scss",content:"\n.subTitle{\n  color: #999;\n  font-size: 28px;\n  padding-bottom: 20px;\n}\n.tabContent{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 240px;\n}\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"tabs-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#tabs-1"},o.a.createElement("span",{className:"icon icon-link"})),"Tabs"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"type"),o.a.createElement("td",null,"\u5361\u7247\u6807\u9898"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"tabs"),o.a.createElement("td",null,"tab \u6570\u636e"),o.a.createElement("td",null,"TabTitleProps[]"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"activeTab"),o.a.createElement("td",null,"\u5f53\u524d\u6fc0\u6d3b\u7684 Tab \u7d22\u5f15"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"extra"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u5361\u7247title\u5185\u5bb9"),o.a.createElement("td",null,o.a.createElement("code",null,"string")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"titleWidth"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u5361\u7247\u6807\u9898\u5bbd\u5ea6"),o.a.createElement("td",null,"number"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"titleSquare"),o.a.createElement("td",null,"\u8bbe\u7f6e\u5361\u7247\u6807\u9898\u4e3a\u65b9\u5f62"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"fixed"),o.a.createElement("td",null,"\u8bbe\u7f6eTabs\u56fa\u5b9a\u5728\u9875\u9762\u9876\u90e8"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"headerStyle"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49title\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onTabClick"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u5361\u7247\u5185\u5bb9\u533a\u57df\u6837\u5f0f"),o.a.createElement("td",null,"(i: any) => void"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"tabstabcontent"},o.a.createElement("a",{"aria-hidden":"true",href:"#tabstabcontent"},o.a.createElement("span",{className:"icon icon-link"})),"Tabs.TabContent"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"tabId"),o.a.createElement("td",null,"tab \u5185\u5bb9\u5e8f\u5217\u7d22\u5f15"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"activeTab"),o.a.createElement("td",null,"\u9009\u9879\u5361\u5f53\u524d\u6fc0\u6d3b\u5e8f\u5217\u7d22\u5f15"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"tabtitleprops"},o.a.createElement("a",{"aria-hidden":"true",href:"#tabtitleprops"},o.a.createElement("span",{className:"icon icon-link"})),"TabTitleProps"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"key"),o.a.createElement("td",null,"\u6b64\u9879\u5fc5\u987b\u8bbe\u7f6e\uff08\u5176\u503c\u5728\u6574\u4e2a\u9009\u9879\u8303\u56f4\u5185\u552f\u4e00\uff09\uff0c\u5bf9\u5e94tabId"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"title"),o.a.createElement("td",null,"\u9009\u9879\u5361\u6807\u9898"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-"))))))}},"7yTQ":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("7BAe"),c=t("/dTS"),p=t("PPXv"),u=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{filter:function(n){var e=i(this),t=p(e),r=s(n,arguments.length>1?arguments[1]:void 0,3),a=new(c(e,o("Map"))),d=l(a.set);return u(t,(function(n,t){r(t,n,e)&&d.call(a,n,t)}),void 0,!0,!0),a}})},"80Z6":function(n,e,t){"use strict";var r=t("MMxC"),a=t("cT1L"),o=t("29mP"),i=t("LUyE"),l=t("WJ3H"),s=t("IuhT"),c="No one promise resolved";r({target:"Promise",stat:!0},{any:function(n){var e=this,t=i.f(e),r=t.resolve,p=t.reject,u=l((function(){var t=a(e.resolve),i=[],l=0,u=1,d=!1;s(n,(function(n){var a=l++,s=!1;i.push(void 0),u++,t.call(e,n).then((function(n){s||d||(d=!0,r(n))}),(function(n){s||d||(s=!0,i[a]=n,--u||p(new(o("AggregateError"))(i,c)))}))})),--u||p(new(o("AggregateError"))(i,c))}));return u.error&&p(u.value),t.promise}})},"85tw":function(n,e,t){var r=t("MMxC"),a=t("ls1J"),o=t("f1E4"),i=a.keys,l=a.toKey;r({target:"Reflect",stat:!0},{getOwnMetadataKeys:function(n){var e=arguments.length<2?void 0:l(arguments[1]);return i(o(n),e)}})},"8Cw2":function(n,e,t){var r=t("ukPv"),a=r.isFinite;n.exports=Number.isFinite||function(n){return"number"==typeof n&&a(n)}},"8L3h":function(n,e,t){"use strict";n.exports=t("f/k9")},"8Lo7":function(n,e,t){"use strict";var r=t("FVwB"),a=t("/3zY").includes,o=r.aTypedArray,i=r.exportTypedArrayMethod;i("includes",(function(n){return a(o(this),n,arguments.length>1?arguments[1]:void 0)}))},"8OGu":function(n,e,t){var r=t("I65O");r("isConcatSpreadable")},"8OQV":function(n,e,t){var r=t("ukPv"),a=t("MVys"),o=t("GPrf"),i=t("FVwB").NATIVE_ARRAY_BUFFER_VIEWS,l=r.ArrayBuffer,s=r.Int8Array;n.exports=!i||!a((function(){s(1)}))||!a((function(){new s(-1)}))||!o((function(n){new s,new s(null),new s(1.5),new s(n)}),!0)||a((function(){return 1!==new s(new l(2),1,void 0).length}))},"8Ubs":function(n,e,t){var r=t("MMxC"),a=t("aF2d");r({target:"Map",stat:!0},{from:a})},"8jRI":function(n,e,t){"use strict";var r="%[a-f0-9]{2}",a=new RegExp(r,"gi"),o=new RegExp("("+r+")+","gi");function i(n,e){try{return decodeURIComponent(n.join(""))}catch(a){}if(1===n.length)return n;e=e||1;var t=n.slice(0,e),r=n.slice(e);return Array.prototype.concat.call([],i(t),i(r))}function l(n){try{return decodeURIComponent(n)}catch(r){for(var e=n.match(a),t=1;t<e.length;t++)n=i(e,t).join(""),e=n.match(a);return n}}function s(n){var e={"%FE%FF":"\ufffd\ufffd","%FF%FE":"\ufffd\ufffd"},t=o.exec(n);while(t){try{e[t[0]]=decodeURIComponent(t[0])}catch(c){var r=l(t[0]);r!==t[0]&&(e[t[0]]=r)}t=o.exec(n)}e["%C2"]="\ufffd";for(var a=Object.keys(e),i=0;i<a.length;i++){var s=a[i];n=n.replace(new RegExp(s,"g"),e[s])}return n}n.exports=function(n){if("string"!==typeof n)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof n+"`");try{return n=n.replace(/\+/g," "),decodeURIComponent(n)}catch(e){return s(n)}}},"8pmP":function(n,e,t){},"8tWd":function(n,e,t){"use strict";function r(n){return r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var a=u(t("q1tI")),o=t("ArA+"),i=c(t("iZJ2")),l=c(t("+t3K")),s=c(t("NKr8"));function c(n){return n&&n.__esModule?n:{default:n}}function p(){if("function"!==typeof WeakMap)return null;var n=new WeakMap;return p=function(){return n},n}function u(n){if(n&&n.__esModule)return n;if(null===n||"object"!==r(n)&&"function"!==typeof n)return{default:n};var e=p();if(e&&e.has(n))return e.get(n);var t={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in n)if(Object.prototype.hasOwnProperty.call(n,o)){var i=a?Object.getOwnPropertyDescriptor(n,o):null;i&&(i.get||i.set)?Object.defineProperty(t,o,i):t[o]=n[o]}return t["default"]=n,e&&e.set(n,t),t}t("8pmP");var d=function(n){var e=n.mobileMenuCollapsed,t=n.location,r=(0,a.useContext)(l["default"]),c=r.logo,p=r.title,u=r.desc,d=r.menus,m=r.navs,f=r.repoUrl,h=r.mode,x=r.rootPath,g=r.routeMeta;return a["default"].createElement("div",{className:"__dumi-default-menu","data-mode":h,"data-hidden":Boolean(g.hero||g.features)||!1===g.sidemenu||void 0,"data-mobile-show":!e||void 0},a["default"].createElement("div",{className:"__dumi-default-menu-inner"},a["default"].createElement("div",{className:"__dumi-default-menu-header"},a["default"].createElement(o.Link,{to:x,className:"__dumi-default-menu-logo",style:{backgroundImage:c&&"url('".concat(c,"')")}}),a["default"].createElement("h1",null,p),a["default"].createElement("p",null,u),/github\.com/.test(f)&&"doc"===h&&a["default"].createElement("p",null,a["default"].createElement("object",{type:"image/svg+xml",data:"https://img.shields.io/github/stars".concat(f.match(/((\/[^\/]+){2})$/)[1],"?style=social")}))),m.length?a["default"].createElement("div",{className:"__dumi-default-menu-mobile-area"},a["default"].createElement("ul",{className:"__dumi-default-menu-nav-list"},m.map((function(n){return a["default"].createElement("li",{key:n.path},/^\/[\w-]/.test(n.path)?a["default"].createElement(o.NavLink,{to:n.path,key:n.path},n.title):a["default"].createElement("a",{target:"_blank",href:n.path,key:n.path},n.title,a["default"].createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},a["default"].createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),a["default"].createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))))}))),a["default"].createElement(i["default"],null)):a["default"].createElement("div",{className:"__dumi-default-menu-doc-locale"},a["default"].createElement(i["default"],null)),a["default"].createElement("ul",{className:"__dumi-default-menu-list"},d.map((function(n){var e,r=Boolean(null===(e=g.slugs)||void 0===e?void 0:e.length),i=n.children&&Boolean(n.children.length),l="menu"===g.toc&&!i&&r&&n.path===t.pathname;return a["default"].createElement("li",{key:n.path||n.title},n.path?a["default"].createElement(o.NavLink,{to:n.path,exact:!(n.children&&n.children.length)},n.title):a["default"].createElement("a",null,n.title),Boolean(n.children&&n.children.length)&&a["default"].createElement("ul",null,n.children.map((function(n){return a["default"].createElement("li",{key:n.path},a["default"].createElement(o.NavLink,{to:n.path,exact:!0},a["default"].createElement("span",null,n.title)),Boolean("menu"===g.toc&&"undefined"!==typeof window&&n.path===t.pathname&&r)&&a["default"].createElement(s["default"],{base:n.path,slugs:g.slugs,location:t}))}))),l&&a["default"].createElement(s["default"],{base:n.path,slugs:g.slugs,location:t}))})))))},m=d;e["default"]=m},"8w+9":function(n,e,t){var r=t("ukPv"),a=t("tSXo"),o=r.document,i=a(o)&&a(o.createElement);n.exports=function(n){return i?o.createElement(n):{}}},"8yz6":function(n,e,t){"use strict";n.exports=function(n,e){if("string"!==typeof n||"string"!==typeof e)throw new TypeError("Expected the arguments to be of type `string`");if(""===e)return[n];var t=n.indexOf(e);return-1===t?[n]:[n.slice(0,t),n.slice(t+e.length)]}},"9/ry":function(n,e,t){"use strict";var r=t("MMxC"),a=t("rjJZ"),o=t("FCfD"),i=t("C7V6");r({target:"String",proto:!0,forced:!i("includes")},{includes:function(n){return!!~String(o(this)).indexOf(a(n),arguments.length>1?arguments[1]:void 0)}})},"97lQ":function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t("YCKM"),o=t("f4X2"),i=t("IOv4"),l=t("+Dq+"),s=t.n(l);e["default"]=()=>r["createElement"](i["b"],{grayBg:!0},r["createElement"](i["a"],{title:"Success"},r["createElement"](o["o"],{height:"31.25rem",status:"success",title:"\u63d0\u4ea4\u6210\u529f",subTitle:"\u60a8\u7684\u8be2\u4ef7\u9700\u6c42\u5df2\u7ecf\u63d0\u4ea4\u6210\u529f\uff0c\u6709\u62a5\u4ef7\u65f6\u7cfb\u7edf\u4f1a\u53ca\u65f6\u901a\u77e5\u60a8\u8fdb\u884c\u786e\u8ba4",extra:r["createElement"](a["d"],null,r["createElement"](o["a"],{type:"primary",style:{marginRight:"0.75rem"}},"\u67e5\u770b\u9700\u6c42"),r["createElement"](o["a"],null,"\u8fd4\u56de\u770b\u677f"))})),r["createElement"](i["a"],{title:"Info"},r["createElement"](o["o"],{height:"31.25rem",status:"info",title:"\u60a8\u5df2\u7ecf\u63d0\u4ea4\u8fc7\u4e86",extra:r["createElement"](a["d"],null,r["createElement"](o["a"],null,"\u8fd4\u56de\u770b\u677f"))})),r["createElement"](i["a"],{title:"Warning"},r["createElement"](o["o"],{height:"31.25rem",status:"warning",title:"\u6743\u9650\u4e0d\u8db3",subTitle:"\u62b1\u6b49\uff0c\u60a8\u65e0\u6743\u8bbf\u95ee\u6b64\u9875"})),r["createElement"](i["a"],{title:"Error"},r["createElement"](o["o"],{height:"31.25rem",status:"error",title:"\u63d0\u4ea4\u5931\u8d25",subTitle:"\u8bf7\u4ed4\u7ec6\u68c0\u67e5\u6838\u5bf9\u4fe1\u606f\u540e\u5728\u63d0\u4ea4"},r["createElement"](a["d"],{className:s.a.item},"1. \u8bf7\u6839\u636e\u56fe\u7247\u4fe1\u606f\u586b\u5199\u76f8\u5173\u4fe1\u606f\u3002"),r["createElement"](a["d"],{className:s.a.item},"2. \u5982\u679c\u60a8\u6709\u4efb\u4f55\u7591\u95ee\u8bf7\u53ca\u65f6\u8054\u7cfb\u5ba2\u670d\u3002"))))},"9BQv":function(n,e,t){"use strict";var r=t("tny8"),a=t("eNh0"),o=t("cTDu"),i=t("oa35"),l=t("YfKC").f;r&&!("lastItem"in[])&&(l(Array.prototype,"lastItem",{configurable:!0,get:function(){var n=o(this),e=i(n.length);return 0==e?void 0:n[e-1]},set:function(n){var e=o(this),t=i(e.length);return e[0==t?0:t-1]=n}}),a("lastItem"))},"9R94":function(n,e,t){"use strict";var r=!0,a="Invariant failed";function o(n,e){if(!n){if(r)throw new Error(a);throw new Error(a+": "+(e||""))}}e["a"]=o},"9RRT":function(n,e,t){var r=t("cT1L"),a=t("cTDu"),o=t("EzR6"),i=t("oa35"),l=function(n){return function(e,t,l,s){r(t);var c=a(e),p=o(c),u=i(c.length),d=n?u-1:0,m=n?-1:1;if(l<2)while(1){if(d in p){s=p[d],d+=m;break}if(d+=m,n?d<0:u<=d)throw TypeError("Reduce of empty array with no initial value")}for(;n?d>=0:u>d;d+=m)d in p&&(s=t(s,p[d],d,c));return s}};n.exports={left:l(!1),right:l(!0)}},"9Rzw":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("/dTS"),c=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{difference:function(n){var e=i(this),t=new(s(e,o("Set")))(e),r=l(t["delete"]);return c(n,(function(n){r.call(t,n)})),t}})},"9SZg":function(n,e,t){var r=t("Ei+o"),a=t("5yw/"),o=t("2kyd"),i=o("iterator");n.exports=function(n){if(void 0!=n)return n[i]||n["@@iterator"]||a[r(n)]}},"9bAj":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("cT1L"),l=t("PPXv"),s=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{reduce:function(n){var e=o(this),t=l(e),r=arguments.length<2,a=r?void 0:arguments[1];if(i(n),s(t,(function(t,o){r?(r=!1,a=o):a=n(a,o,t,e)}),void 0,!0,!0),r)throw TypeError("Reduce of empty map with no initial value");return a}})},"9xmf":function(n,e,t){var r=t("EdiO");function a(n){if(Array.isArray(n))return r(n)}n.exports=a},"9znl":function(n,e,t){var r=t("MMxC"),a=t("aF2d");r({target:"Set",stat:!0},{from:a})},"A+b4":function(n,e,t){"use strict";var r=t("MMxC"),a=t("mTKU").start,o=t("HKQd"),i=o("trimStart"),l=i?function(){return a(this)}:"".trimStart;r({target:"String",proto:!0,forced:i},{trimStart:l,trimLeft:l})},A9H8:function(n,e,t){var r=t("MMxC"),a=t("IuhT"),o=t("arQb");r({target:"Object",stat:!0},{fromEntries:function(n){var e={};return a(n,(function(n,t){o(e,n,t)}),void 0,!0),e}})},AWJ3:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("1iVJ")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"button"},o.a.createElement("a",{"aria-hidden":"true",href:"#button"},o.a.createElement("span",{className:"icon icon-link"})),"Button"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { View } from \'remax/one\';\nimport { Button } from \'anna-remax-ui\';\nimport { Block, Frame } from \'../../common\';\nimport styles from \'./index.module.scss\';\n\nexport default () => {\n  return (\n    <Frame>\n      <View className={styles.app}>\n        <Block title="Type">\n          <View className={styles.group}>\n            <Button>default</Button>\n            <Button type="primary">primary</Button>\n          </View>\n        </Block>\n        <Block title="Danger">\n          <View className={styles.group}>\n            <Button danger>danger</Button>\n            <Button type="primary" danger>\n              danger\n            </Button>\n          </View>\n        </Block>\n        <Block title="Shape">\n          <View className={styles.group}>\n            <Button type="primary">round</Button>\n            <Button type="primary" square>\n              square\n            </Button>\n          </View>\n        </Block>\n        <Block title="Size">\n          <View className={styles.group}>\n            <Button type="primary" size="large">\n              large\n            </Button>\n            <Button type="primary">default</Button>\n            <Button type="primary" size="small">\n              small\n            </Button>\n          </View>\n        </Block>\n        <Block title="Loading">\n          <View className={styles.group}>\n            <Button type="primary" loading loadingText="loading...">\n              loading\n            </Button>\n            <Button type="primary" square danger loading loadingText="Deleting...">\n              loading\n            </Button>\n          </View>\n        </Block>\n        <Block title="Disabled">\n          <View className={styles.group}>\n            <Button type="primary" disabled>\n              disabled\n            </Button>\n            <Button type="primary" danger disabled>\n              disabled\n            </Button>\n          </View>\n        </Block>\n        <Block title="Block">\n          <View className={styles.group}>\n            <Button type="primary" size="superlarge" block style={{ marginBottom: \'30px\' }} loading>\n              block\n            </Button>\n            <Button type="primary" size="superlarge" danger square block>\n              block\n            </Button>\n          </View>\n        </Block>\n      </View>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Button } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nexport default () =>\n  /* #__PURE__ */ React.createElement(\n    Frame,\n    null,\n    /* #__PURE__ */ React.createElement(\n      View,\n      {\n        className: styles.app,\n      },\n      /* #__PURE__ */ React.createElement(\n        Block,\n        {\n          title: 'Type',\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.group,\n          },\n          /* #__PURE__ */ React.createElement(Button, null, 'default'),\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n            },\n            'primary',\n          ),\n        ),\n      ),\n      /* #__PURE__ */ React.createElement(\n        Block,\n        {\n          title: 'Danger',\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.group,\n          },\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              danger: true,\n            },\n            'danger',\n          ),\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              danger: true,\n            },\n            'danger',\n          ),\n        ),\n      ),\n      /* #__PURE__ */ React.createElement(\n        Block,\n        {\n          title: 'Shape',\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.group,\n          },\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n            },\n            'round',\n          ),\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              square: true,\n            },\n            'square',\n          ),\n        ),\n      ),\n      /* #__PURE__ */ React.createElement(\n        Block,\n        {\n          title: 'Size',\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.group,\n          },\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              size: 'large',\n            },\n            'large',\n          ),\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n            },\n            'default',\n          ),\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              size: 'small',\n            },\n            'small',\n          ),\n        ),\n      ),\n      /* #__PURE__ */ React.createElement(\n        Block,\n        {\n          title: 'Loading',\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.group,\n          },\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              loading: true,\n              loadingText: 'loading...',\n            },\n            'loading',\n          ),\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              square: true,\n              danger: true,\n              loading: true,\n              loadingText: 'Deleting...',\n            },\n            'loading',\n          ),\n        ),\n      ),\n      /* #__PURE__ */ React.createElement(\n        Block,\n        {\n          title: 'Disabled',\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.group,\n          },\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              disabled: true,\n            },\n            'disabled',\n          ),\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              danger: true,\n              disabled: true,\n            },\n            'disabled',\n          ),\n        ),\n      ),\n      /* #__PURE__ */ React.createElement(\n        Block,\n        {\n          title: 'Block',\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.group,\n          },\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              size: 'superlarge',\n              block: true,\n              style: {\n                marginBottom: '30px',\n              },\n              loading: true,\n            },\n            'block',\n          ),\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              size: 'superlarge',\n              danger: true,\n              square: true,\n              block: true,\n            },\n            'block',\n          ),\n        ),\n      ),\n    ),\n  );\n"}},{path:"/_demos/index-17",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"index.module.scss":{path:"./index.module.scss",content:".app {\n  padding: 30px;\n  .group{\n    >view{\n      margin-right: 24px;\n    }\n    >div{\n      margin-right: 24px;\n    }\n  }\n}\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"type"),o.a.createElement("td",null,"\u8bbe\u7f6e\u6309\u94ae\u7c7b\u578b"),o.a.createElement("td",null,o.a.createElement("code",null,"primary")," | ",o.a.createElement("code",null,"simple")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"size"),o.a.createElement("td",null,"\u8bbe\u7f6e\u6309\u94ae\u5927\u5c0f"),o.a.createElement("td",null,o.a.createElement("code",null,"small")," | ",o.a.createElement("code",null,"large")," | ",o.a.createElement("code",null,"superlarge")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"danger"),o.a.createElement("td",null,"\u8bbe\u7f6e\u5371\u9669\u6309\u94ae"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"square"),o.a.createElement("td",null,"\u8bbe\u7f6e\u65b9\u5f62\u6309\u94ae"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"plain"),o.a.createElement("td",null,"\u8bbe\u7f6e\u6734\u7d20\u6309\u94ae"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"block"),o.a.createElement("td",null,"\u5c06\u6309\u94ae\u5bbd\u5ea6\u8c03\u6574\u4e3a\u5176\u7236\u5bbd\u5ea6\u7684\u9009\u9879"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"loading"),o.a.createElement("td",null,"\u8bbe\u7f6e\u6309\u94ae\u8f7d\u5165\u72b6\u6001"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"loadingText"),o.a.createElement("td",null,"\u8bbe\u7f6e\u5165\u72b6\u6001\u6587\u672c"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"disabled"),o.a.createElement("td",null,"\u8bbe\u7f6e\u6309\u94ae\u7981\u7528\u72b6\u6001"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u8bbe\u7f6e\u6309\u94ae\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onTap"),o.a.createElement("td",null,"\u70b9\u51fb\u6309\u94ae\u65f6\u7684\u56de\u8c03"),o.a.createElement("td",null,"() => void"),o.a.createElement("td",null,"-"))))))}},Acmb:function(n,e,t){var r=t("jtLI"),a=t("cTDu"),o=t("CjUg"),i=t("SprQ"),l=o("IE_PROTO"),s=Object.prototype;n.exports=i?Object.getPrototypeOf:function(n){return n=a(n),r(n,l)?n[l]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?s:null}},AqCL:function(n,e){n.exports=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)}},"ArA+":function(n,e,t){"use strict";t.r(e),t.d(e,"Link",(function(){return r["Link"]})),t.d(e,"MemoryRouter",(function(){return r["MemoryRouter"]})),t.d(e,"NavLink",(function(){return r["NavLink"]})),t.d(e,"Prompt",(function(){return r["Prompt"]})),t.d(e,"Redirect",(function(){return r["Redirect"]})),t.d(e,"Route",(function(){return r["Route"]})),t.d(e,"Router",(function(){return r["Router"]})),t.d(e,"Switch",(function(){return r["Switch"]})),t.d(e,"matchPath",(function(){return r["matchPath"]})),t.d(e,"useHistory",(function(){return r["useHistory"]})),t.d(e,"useLocation",(function(){return r["useLocation"]})),t.d(e,"useParams",(function(){return r["useParams"]})),t.d(e,"useRouteMatch",(function(){return r["useRouteMatch"]})),t.d(e,"withRouter",(function(){return r["withRouter"]})),t.d(e,"__RouterContext",(function(){return r["__RouterContext"]})),t.d(e,"createBrowserHistory",(function(){return r["createBrowserHistory"]})),t.d(e,"createHashHistory",(function(){return r["createHashHistory"]})),t.d(e,"createMemoryHistory",(function(){return r["createMemoryHistory"]})),t.d(e,"ApplyPluginsType",(function(){return r["ApplyPluginsType"]})),t.d(e,"Plugin",(function(){return r["Plugin"]})),t.d(e,"dynamic",(function(){return r["dynamic"]})),t.d(e,"history",(function(){return a["b"]})),t.d(e,"setCreateHistoryOptions",(function(){return a["c"]})),t.d(e,"plugin",(function(){return o["a"]}));var r=t("LtsZ"),a=t("ogwx"),o=t("VCU9")},Auwt:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("PPXv"),l=t("bwJD"),s=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{includes:function(n){return s(i(o(this)),(function(e,t){if(l(t,n))return s.stop()}),void 0,!0,!0).stopped}})},"B/G0":function(n,e,t){var r=t("MMxC"),a=t("tny8"),o=t("cC5k"),i=t("0qr0"),l=t("g8rt"),s=t("arQb");r({target:"Object",stat:!0,sham:!a},{getOwnPropertyDescriptors:function(n){var e,t,r=i(n),a=l.f,c=o(r),p={},u=0;while(c.length>u)t=a(r,e=c[u++]),void 0!==t&&s(p,e,t);return p}})},B2uJ:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var r=a(t("q1tI"));function a(n){return n&&n.__esModule?n:{default:n}}function o(){return o=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},o.apply(this,arguments)}function i(n,e){if(null==n)return{};var t,r,a=l(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}function l(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}t("mYBK");var s=function(n){var e=n.children,t=i(n,["children"]);return r["default"].createElement("div",o({className:"__dumi-default-alert"},t),e)};e["default"]=s},BtTS:function(n,e,t){var r=t("Mi8B");r("Int16",(function(n){return function(e,t,r){return n(this,e,t,r)}}))},C3pJ:function(n,e,t){var r,a,o,i=t("ukPv"),l=t("MVys"),s=t("UwrT"),c=t("7BAe"),p=t("yj7k"),u=t("8w+9"),d=t("xRZI"),m=i.location,f=i.setImmediate,h=i.clearImmediate,x=i.process,g=i.MessageChannel,y=i.Dispatch,C=0,w={},v="onreadystatechange",b=function(n){if(w.hasOwnProperty(n)){var e=w[n];delete w[n],e()}},k=function(n){return function(){b(n)}},V=function(n){b(n.data)},P=function(n){i.postMessage(n+"",m.protocol+"//"+m.host)};f&&h||(f=function(n){var e=[],t=1;while(arguments.length>t)e.push(arguments[t++]);return w[++C]=function(){("function"==typeof n?n:Function(n)).apply(void 0,e)},r(C),C},h=function(n){delete w[n]},"process"==s(x)?r=function(n){x.nextTick(k(n))}:y&&y.now?r=function(n){y.now(k(n))}:g&&!d?(a=new g,o=a.port2,a.port1.onmessage=V,r=c(o.postMessage,o,1)):!i.addEventListener||"function"!=typeof postMessage||i.importScripts||l(P)||"file:"===m.protocol?r=v in u("script")?function(n){p.appendChild(u("script"))[v]=function(){p.removeChild(this),b(n)}}:function(n){setTimeout(k(n),0)}:(r=P,i.addEventListener("message",V,!1))),n.exports={set:f,clear:h}},C7V6:function(n,e,t){var r=t("2kyd"),a=r("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[a]=!1,"/./"[n](e)}catch(r){}}return!1}},"CB4/":function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t("YCKM"),i=t("f4X2"),l=t("IOv4"),s={paddingBottom:"0.94rem"};e["default"]=()=>{var n=a["useState"](!0),e=Object(r["a"])(n,2),t=e[0],c=e[1],p=a["useState"](!1),u=Object(r["a"])(p,2),d=(u[0],u[1],a["useState"](0)),m=Object(r["a"])(d,2),f=m[0],h=m[1];return a["createElement"](l["b"],{padding:!0},a["createElement"](l["a"],{title:"Basic",noTitlePadding:!0},a["createElement"](i["m"],{checked:t,onChange:n=>c(n)},"Radio")),a["createElement"](l["a"],{title:"Group",noTitlePadding:!0},a["createElement"](i["m"].Group,{value:f,onChange:(n,e)=>h(e)},a["createElement"](i["m"],{value:0},"Apple"),a["createElement"](i["m"],{value:1},"Cherry"),a["createElement"](i["m"],{value:2},"Watermelon"))),a["createElement"](l["a"],{title:"Direction & Extra",noTitlePadding:!0},a["createElement"](i["m"].Group,{value:f,onChange:(n,e)=>h(e),direction:"column"},a["createElement"](i["m"],{value:0,style:s},"Apple"),a["createElement"](i["m"],{value:1,style:s},"Cherry"),a["createElement"](i["m"],{value:2,style:s,extra:a["createElement"](o["d"],{style:{paddingTop:"0.75rem",color:"#999",fontSize:"0.81rem"}},"Watermelon over 50 yuan, get 10 yuan coupon")},"Watermelon"))))}},"CDr+":function(n,e,t){"use strict";var r=t("MMxC"),a=t("/3zY").indexOf,o=t("R8iy"),i=t("kGMc"),l=[].indexOf,s=!!l&&1/[1].indexOf(1,-0)<0,c=o("indexOf"),p=i("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:s||!c||!p},{indexOf:function(n){return s?l.apply(this,arguments)||0:a(this,n,arguments.length>1?arguments[1]:void 0)}})},CNgt:function(n,e,t){"use strict";var r=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])};return function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}(),a=this&&this.__assign||Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var a in e=arguments[t],e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n},o=this&&this.__rest||function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&(t[r[a]]=n[r[a]])}return t};e.__esModule=!0;var i=t("q1tI"),l=t("17x9"),s=t("GemG"),c=t("Rk8H"),p=c,u="autosize:resized",d=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.state={lineHeight:null},e.textarea=e.props.innerRef||i.createRef(),e.onResize=function(n){e.props.onResize&&e.props.onResize(n)},e.updateLineHeight=function(){e.textarea.current&&e.setState({lineHeight:p(e.textarea.current)})},e.onChange=function(n){var t=e.props.onChange;e.currentValue=n.currentTarget.value,t&&t(n)},e}return r(e,n),e.prototype.componentDidMount=function(){var n=this,e=this.props,t=e.maxRows,r=e.async;"number"===typeof t&&this.updateLineHeight(),"number"===typeof t||r?setTimeout((function(){return n.textarea.current&&s(n.textarea.current)})):this.textarea.current&&s(this.textarea.current),this.textarea.current&&this.textarea.current.addEventListener(u,this.onResize)},e.prototype.componentWillUnmount=function(){this.textarea.current&&(this.textarea.current.removeEventListener(u,this.onResize),s.destroy(this.textarea.current))},e.prototype.render=function(){var n=this,e=n.props,t=(e.onResize,e.maxRows),r=(e.onChange,e.style),l=(e.innerRef,e.children),s=o(e,["onResize","maxRows","onChange","style","innerRef","children"]),c=n.state.lineHeight,p=t&&c?c*t:null;return i.createElement("textarea",a({},s,{onChange:this.onChange,style:p?a({},r,{maxHeight:p}):r,ref:this.textarea}),l)},e.prototype.componentDidUpdate=function(){this.textarea.current&&s.update(this.textarea.current)},e.defaultProps={rows:1,async:!1},e.propTypes={rows:l.number,maxRows:l.number,onResize:l.func,innerRef:l.object,async:l.bool},e}(i.Component);e.TextareaAutosize=i.forwardRef((function(n,e){return i.createElement(d,a({},n,{innerRef:e}))}))},CO2k:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("/dTS"),c=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{union:function(n){var e=i(this),t=new(s(e,o("Set")))(e);return c(n,l(t.add),t),t}})},CRpX:function(n,e,t){var r=t("ukPv"),a=t("XX5T"),o=t("FbcW"),i=t("lz10"),l=t("2kyd"),s=l("iterator"),c=l("toStringTag"),p=o.values;for(var u in a){var d=r[u],m=d&&d.prototype;if(m){if(m[s]!==p)try{i(m,s,p)}catch(h){m[s]=p}if(m[c]||i(m,c,u),a[u])for(var f in o)if(m[f]!==o[f])try{i(m,f,o[f])}catch(h){m[f]=o[f]}}}},CdV7:function(n,e,t){var r=t("tny8"),a=t("P0e2"),o=t("0qr0"),i=t("e3V2").f,l=function(n){return function(e){var t,l=o(e),s=a(l),c=s.length,p=0,u=[];while(c>p)t=s[p++],r&&!i.call(l,t)||u.push(n?[t,l[t]]:l[t]);return u}};n.exports={entries:l(!0),values:l(!1)}},CjUg:function(n,e,t){var r=t("xxaU"),a=t("evbn"),o=r("keys");n.exports=function(n){return o[n]||(o[n]=a(n))}},Cq6t:function(n,e){var t=1/0,r=Math.abs,a=Math.pow,o=Math.floor,i=Math.log,l=Math.LN2,s=function(n,e,s){var c,p,u,d=new Array(s),m=8*s-e-1,f=(1<<m)-1,h=f>>1,x=23===e?a(2,-24)-a(2,-77):0,g=n<0||0===n&&1/n<0?1:0,y=0;for(n=r(n),n!=n||n===t?(p=n!=n?1:0,c=f):(c=o(i(n)/l),n*(u=a(2,-c))<1&&(c--,u*=2),n+=c+h>=1?x/u:x*a(2,1-h),n*u>=2&&(c++,u/=2),c+h>=f?(p=0,c=f):c+h>=1?(p=(n*u-1)*a(2,e),c+=h):(p=n*a(2,h-1)*a(2,e),c=0));e>=8;d[y++]=255&p,p/=256,e-=8);for(c=c<<e|p,m+=e;m>0;d[y++]=255&c,c/=256,m-=8);return d[--y]|=128*g,d},c=function(n,e){var r,o=n.length,i=8*o-e-1,l=(1<<i)-1,s=l>>1,c=i-7,p=o-1,u=n[p--],d=127&u;for(u>>=7;c>0;d=256*d+n[p],p--,c-=8);for(r=d&(1<<-c)-1,d>>=-c,c+=e;c>0;r=256*r+n[p],p--,c-=8);if(0===d)d=1-s;else{if(d===l)return r?NaN:u?-t:t;r+=a(2,e),d-=s}return(u?-1:1)*r*a(2,d-e)};n.exports={pack:s,unpack:c}},CtXR:function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t("YCKM"),i=t("f4X2"),l=t("IOv4"),s=t("EJRU"),c=t.n(s),p=i["u"].TabContent,u=[{key:"0",title:"All"},{key:"1",title:"Missed"}],d=[{key:"0",title:"All"},{key:"1",title:"Missed"}],m=[{key:"0",title:"\u5168\u90e8"},{key:"1",title:"\u5f85\u5904\u7406"},{key:"2",title:"\u8be2\u4ef7\u4e2d"},{key:"3",title:"\u5f85\u62a5\u4ef7"},{key:"4",title:"\u62a5\u4ef7\u4e2d"}],f=[{key:"0",title:"\u7cbe\u9009"},{key:"1",title:"\u5173\u6ce8"},{key:"2",title:"\u5e7f\u573a"}],h=[{key:"0",title:"All"},{key:"1",title:"Read"},{key:"2",title:"Missed"}];e["default"]=()=>{var n=a["useState"]("0"),e=Object(r["a"])(n,2),t=e[0],s=e[1],x=a["useState"]("0"),g=Object(r["a"])(x,2),y=g[0],C=g[1],w=a["useState"]("0"),v=Object(r["a"])(w,2),b=v[0],k=v[1],V=a["useState"]("0"),P=Object(r["a"])(V,2),N=P[0],R=P[1],S=a["useState"]("0"),T=Object(r["a"])(S,2),E=T[0],$=T[1];return a["createElement"](l["b"],{padding:!0,grayBg:!0},a["createElement"](l["a"],{noTitlePadding:!0,title:"Basic"},a["createElement"](i["u"],{tabs:u,onTabClick:n=>{var e=n.key;return s(e)},activeTab:t},u.map(n=>a["createElement"](p,{key:n.key,tabId:n.key,activeTab:t},a["createElement"](i["b"],null,a["createElement"](o["d"],{className:c.a.tabContent},"".concat(n.title," content"))))))),a["createElement"](l["a"],{noTitlePadding:!0,title:"TitleSquare"},a["createElement"](i["u"],{tabs:u,onTabClick:n=>{var e=n.key;return C(e)},activeTab:y,titleSquare:!0},d.map(n=>a["createElement"](p,{key:n.key,tabId:n.key,activeTab:y},a["createElement"](i["b"],null,a["createElement"](o["d"],{className:c.a.tabContent},"".concat(n.title," content"))))))),a["createElement"](l["a"],{noTitlePadding:!0,title:"Type"},a["createElement"](o["d"],{className:c.a.subTitle},"plain"),a["createElement"](i["u"],{type:"plain",tabs:m,onTabClick:n=>{var e=n.key;return k(e)},activeTab:b,titleSquare:!0},m.map(n=>a["createElement"](p,{key:n.key,tabId:n.key,activeTab:b},a["createElement"](i["b"],null,a["createElement"](o["d"],{className:c.a.tabContent},"".concat(n.title," content")))))),a["createElement"](o["d"],{className:c.a.subTitle},"card"),a["createElement"](i["u"],{type:"card",tabs:f,onTabClick:n=>{var e=n.key;return R(e)},activeTab:N,titleSquare:!0},f.map(n=>a["createElement"](p,{key:n.key,tabId:n.key,activeTab:N},a["createElement"](i["b"],null,a["createElement"](o["d"],{className:c.a.tabContent},"".concat(n.title," content"))))))),a["createElement"](l["a"],{noTitlePadding:!0,title:"Fixed"},a["createElement"](o["d"],{className:c.a.subTitle},"\u4f7f\u7528fixed\u5c5e\u6027\u53ef\u4ee5\u4f7fTabs\u56fa\u5b9a\u5728\u9875\u9762\u9876\u90e8"),a["createElement"](i["u"],{tabs:h,onTabClick:n=>{var e=n.key;return $(e)},activeTab:E,titleSquare:!0},h.map(n=>a["createElement"](p,{key:n.key,tabId:n.key,activeTab:E},a["createElement"](i["b"],null,a["createElement"](o["d"],{className:c.a.tabContent},"".concat(n.title," content"))))))))}},DVoG:function(n,e,t){var r=t("MMxC"),a=t("ls1J"),o=t("f1E4"),i=a.has,l=a.toKey;r({target:"Reflect",stat:!0},{hasOwnMetadata:function(n,e){var t=arguments.length<3?void 0:l(arguments[2]);return i(n,o(e),t)}})},Dbv2:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("cT1L");r({target:"Map",proto:!0,real:!0,forced:a},{update:function(n,e){var t=o(this),r=arguments.length;i(e);var a=t.has(n);if(!a&&r<3)throw TypeError("Updating absent value");var l=a?t.get(n):i(r>2?arguments[2]:void 0)(n,t);return t.set(n,e(l,n,t)),t}})},De94:function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},Di6M:function(n,e,t){"use strict";var r=2147483647,a=36,o=1,i=26,l=38,s=700,c=72,p=128,u="-",d=/[^\0-\u007E]/,m=/[.\u3002\uFF0E\uFF61]/g,f="Overflow: input needs wider integers to process",h=a-o,x=Math.floor,g=String.fromCharCode,y=function(n){var e=[],t=0,r=n.length;while(t<r){var a=n.charCodeAt(t++);if(a>=55296&&a<=56319&&t<r){var o=n.charCodeAt(t++);56320==(64512&o)?e.push(((1023&a)<<10)+(1023&o)+65536):(e.push(a),t--)}else e.push(a)}return e},C=function(n){return n+22+75*(n<26)},w=function(n,e,t){var r=0;for(n=t?x(n/s):n>>1,n+=x(n/e);n>h*i>>1;r+=a)n=x(n/h);return x(r+(h+1)*n/(n+l))},v=function(n){var e=[];n=y(n);var t,l,s=n.length,d=p,m=0,h=c;for(t=0;t<n.length;t++)l=n[t],l<128&&e.push(g(l));var v=e.length,b=v;v&&e.push(u);while(b<s){var k=r;for(t=0;t<n.length;t++)l=n[t],l>=d&&l<k&&(k=l);var V=b+1;if(k-d>x((r-m)/V))throw RangeError(f);for(m+=(k-d)*V,d=k,t=0;t<n.length;t++){if(l=n[t],l<d&&++m>r)throw RangeError(f);if(l==d){for(var P=m,N=a;;N+=a){var R=N<=h?o:N>=h+i?i:N-h;if(P<R)break;var S=P-R,T=a-R;e.push(g(C(R+S%T))),P=x(S/T)}e.push(g(C(P))),h=w(m,V,b==v),m=0,++b}}++m,++d}return e.join("")};n.exports=function(n){var e,t,r=[],a=n.toLowerCase().replace(m,".").split(".");for(e=0;e<a.length;e++)t=a[e],r.push(d.test(t)?"xn--"+v(t):t);return r.join(".")}},Dyhc:function(n,e,t){"use strict";var r=t("MMxC"),a=t("tny8"),o=t("i7kj"),i=t("cTDu"),l=t("gFfw"),s=t("Acmb"),c=t("g8rt").f;a&&r({target:"Object",proto:!0,forced:o},{__lookupGetter__:function(n){var e,t=i(this),r=l(n,!0);do{if(e=c(t,r))return e.get}while(t=s(t))}})},"E+bc":function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("v+AA")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"icon"},o.a.createElement("a",{"aria-hidden":"true",href:"#icon"},o.a.createElement("span",{className:"icon icon-link"})),"Icon")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { Icon } from \'anna-remax-ui\';\nimport { Block, Frame, Grid, GridItem } from \'../../common\';\n\nexport default () => {\n  return (\n    <Frame grayBg>\n      <Block title="Type">\n        <Grid>\n          <GridItem name="check">\n            <Icon type="check" size="50px" />\n          </GridItem>\n          <GridItem name="close">\n            <Icon type="close" size="50px" />\n          </GridItem>\n          <GridItem name="comment">\n            <Icon type="comment" size="50px" />\n          </GridItem>\n          <GridItem name="scan">\n            <Icon type="scan" size="50px" />\n          </GridItem>\n          <GridItem name="locationfill">\n            <Icon type="locationfill" size="50px" />\n          </GridItem>\n          <GridItem name="emojifill">\n            <Icon type="emojifill" size="50px" />\n          </GridItem>\n        </Grid>\n      </Block>\n      <Block title="Size">\n        <Grid>\n          <GridItem name="72 px">\n            <Icon type="favorfill" size="72px" />\n          </GridItem>\n          <GridItem name="50 px">\n            <Icon type="favorfill" size="50px" />\n          </GridItem>\n          <GridItem name="default">\n            <Icon type="favorfill" size="28px" />\n          </GridItem>\n        </Grid>\n      </Block>\n      <Block title="Color">\n        <Grid>\n          <GridItem name="#FF6666">\n            <Icon type="likefill" size="50px" color="#FF6666" />\n          </GridItem>\n          <GridItem name="#FFCC33">\n            <Icon type="likefill" size="50px" color="#FFCC33" />\n          </GridItem>\n          <GridItem name="default">\n            <Icon type="likefill" size="50px" />\n          </GridItem>\n        </Grid>\n      </Block>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { Icon } from 'anna-remax-ui';\nimport { Block, Frame, Grid, GridItem } from '../../common';\n\nexport default () =>\n  /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Type',\n      },\n      /* #__PURE__ */ React.createElement(\n        Grid,\n        null,\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'check',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'check',\n            size: '50px',\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'close',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'close',\n            size: '50px',\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'comment',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'comment',\n            size: '50px',\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'scan',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'scan',\n            size: '50px',\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'locationfill',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'locationfill',\n            size: '50px',\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'emojifill',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'emojifill',\n            size: '50px',\n          }),\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Size',\n      },\n      /* #__PURE__ */ React.createElement(\n        Grid,\n        null,\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: '72 px',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'favorfill',\n            size: '72px',\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: '50 px',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'favorfill',\n            size: '50px',\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'default',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'favorfill',\n            size: '28px',\n          }),\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Color',\n      },\n      /* #__PURE__ */ React.createElement(\n        Grid,\n        null,\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: '#FF6666',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'likefill',\n            size: '50px',\n            color: '#FF6666',\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: '#FFCC33',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'likefill',\n            size: '50px',\n            color: '#FFCC33',\n          }),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'default',\n          },\n          /* #__PURE__ */ React.createElement(Icon, {\n            type: 'likefill',\n            size: '50px',\n          }),\n        ),\n      ),\n    ),\n  );\n"}},{path:"/_demos/index-19",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"type"),o.a.createElement("td",null,"icon\u7684\u7c7b\u578b"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"size"),o.a.createElement("td",null,"icon\u7684\u5927\u5c0f"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"color"),o.a.createElement("td",null,"icon\u7684\u989c\u8272"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-"))))))}},EJRU:function(n,e,t){n.exports={subTitle:"subTitle___TuAHX",tabContent:"tabContent___J4sca"}},ENif:function(n,e,t){"use strict";t("nlPz");var r=t("NMFW"),a=t("MVys"),o=t("2kyd"),i=t("NcLc"),l=t("lz10"),s=o("species"),c=!a((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")})),p=function(){return"$0"==="a".replace(/./,"$0")}(),u=o("replace"),d=function(){return!!/./[u]&&""===/./[u]("a","$0")}(),m=!a((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var t="ab".split(n);return 2!==t.length||"a"!==t[0]||"b"!==t[1]}));n.exports=function(n,e,t,u){var f=o(n),h=!a((function(){var e={};return e[f]=function(){return 7},7!=""[n](e)})),x=h&&!a((function(){var e=!1,t=/a/;return"split"===n&&(t={},t.constructor={},t.constructor[s]=function(){return t},t.flags="",t[f]=/./[f]),t.exec=function(){return e=!0,null},t[f](""),!e}));if(!h||!x||"replace"===n&&(!c||!p||d)||"split"===n&&!m){var g=/./[f],y=t(f,""[n],(function(n,e,t,r,a){return e.exec===i?h&&!a?{done:!0,value:g.call(e,t,r)}:{done:!0,value:n.call(t,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:p,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:d}),C=y[0],w=y[1];r(String.prototype,n,C),r(RegExp.prototype,f,2==e?function(n,e){return w.call(n,this,e)}:function(n){return w.call(n,this)})}u&&l(RegExp.prototype[f],"sham",!0)}},EOz7:function(n,e,t){"use strict";var r=t("MMxC"),a=t("g8rt").f,o=t("oa35"),i=t("rjJZ"),l=t("FCfD"),s=t("C7V6"),c=t("Zcjx"),p="".startsWith,u=Math.min,d=s("startsWith"),m=!c&&!d&&!!function(){var n=a(String.prototype,"startsWith");return n&&!n.writable}();r({target:"String",proto:!0,forced:!m&&!d},{startsWith:function(n){var e=String(l(this));i(n);var t=o(u(arguments.length>1?arguments[1]:void 0,e.length)),r=String(n);return p?p.call(e,r,t):e.slice(t,t+r.length)===r}})},EdiO:function(n,e){function t(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=t},EgRx:function(n,e,t){var r=t("kiNa");r(Math,"Math",!0)},"Ei+o":function(n,e,t){var r=t("1Cbe"),a=t("UwrT"),o=t("2kyd"),i=o("toStringTag"),l="Arguments"==a(function(){return arguments}()),s=function(n,e){try{return n[e]}catch(t){}};n.exports=r?a:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=s(e=Object(n),i))?t:l?a(e):"Object"==(r=a(e))&&"function"==typeof e.callee?"Arguments":r}},Eucq:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var r=a(t("q1tI"));function a(n){return n&&n.__esModule?n:{default:n}}var o=function(n){var e=n.type,t=n.base64,a=n.children;return r["default"].createElement("form",{style:{display:"flex"},method:"POST",action:"https://codesandbox.io/api/v1/sandboxes/define?query=module=/demo.".concat(e),target:"_blank"},a,r["default"].createElement("input",{type:"hidden",value:t,name:"parameters"}))};e["default"]=o},EzR6:function(n,e,t){var r=t("MVys"),a=t("UwrT"),o="".split;n.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(n){return"String"==a(n)?o.call(n,""):Object(n)}:Object},"F+kV":function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r);t("B2uJ"),t("+su7"),t("5Yjd");e["default"]=function(){return a.a.createElement(a.a.Fragment,null)}},"F//3":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=[["Aacute",[193]],["aacute",[225]],["Abreve",[258]],["abreve",[259]],["ac",[8766]],["acd",[8767]],["acE",[8766,819]],["Acirc",[194]],["acirc",[226]],["acute",[180]],["Acy",[1040]],["acy",[1072]],["AElig",[198]],["aelig",[230]],["af",[8289]],["Afr",[120068]],["afr",[120094]],["Agrave",[192]],["agrave",[224]],["alefsym",[8501]],["aleph",[8501]],["Alpha",[913]],["alpha",[945]],["Amacr",[256]],["amacr",[257]],["amalg",[10815]],["amp",[38]],["AMP",[38]],["andand",[10837]],["And",[10835]],["and",[8743]],["andd",[10844]],["andslope",[10840]],["andv",[10842]],["ang",[8736]],["ange",[10660]],["angle",[8736]],["angmsdaa",[10664]],["angmsdab",[10665]],["angmsdac",[10666]],["angmsdad",[10667]],["angmsdae",[10668]],["angmsdaf",[10669]],["angmsdag",[10670]],["angmsdah",[10671]],["angmsd",[8737]],["angrt",[8735]],["angrtvb",[8894]],["angrtvbd",[10653]],["angsph",[8738]],["angst",[197]],["angzarr",[9084]],["Aogon",[260]],["aogon",[261]],["Aopf",[120120]],["aopf",[120146]],["apacir",[10863]],["ap",[8776]],["apE",[10864]],["ape",[8778]],["apid",[8779]],["apos",[39]],["ApplyFunction",[8289]],["approx",[8776]],["approxeq",[8778]],["Aring",[197]],["aring",[229]],["Ascr",[119964]],["ascr",[119990]],["Assign",[8788]],["ast",[42]],["asymp",[8776]],["asympeq",[8781]],["Atilde",[195]],["atilde",[227]],["Auml",[196]],["auml",[228]],["awconint",[8755]],["awint",[10769]],["backcong",[8780]],["backepsilon",[1014]],["backprime",[8245]],["backsim",[8765]],["backsimeq",[8909]],["Backslash",[8726]],["Barv",[10983]],["barvee",[8893]],["barwed",[8965]],["Barwed",[8966]],["barwedge",[8965]],["bbrk",[9141]],["bbrktbrk",[9142]],["bcong",[8780]],["Bcy",[1041]],["bcy",[1073]],["bdquo",[8222]],["becaus",[8757]],["because",[8757]],["Because",[8757]],["bemptyv",[10672]],["bepsi",[1014]],["bernou",[8492]],["Bernoullis",[8492]],["Beta",[914]],["beta",[946]],["beth",[8502]],["between",[8812]],["Bfr",[120069]],["bfr",[120095]],["bigcap",[8898]],["bigcirc",[9711]],["bigcup",[8899]],["bigodot",[10752]],["bigoplus",[10753]],["bigotimes",[10754]],["bigsqcup",[10758]],["bigstar",[9733]],["bigtriangledown",[9661]],["bigtriangleup",[9651]],["biguplus",[10756]],["bigvee",[8897]],["bigwedge",[8896]],["bkarow",[10509]],["blacklozenge",[10731]],["blacksquare",[9642]],["blacktriangle",[9652]],["blacktriangledown",[9662]],["blacktriangleleft",[9666]],["blacktriangleright",[9656]],["blank",[9251]],["blk12",[9618]],["blk14",[9617]],["blk34",[9619]],["block",[9608]],["bne",[61,8421]],["bnequiv",[8801,8421]],["bNot",[10989]],["bnot",[8976]],["Bopf",[120121]],["bopf",[120147]],["bot",[8869]],["bottom",[8869]],["bowtie",[8904]],["boxbox",[10697]],["boxdl",[9488]],["boxdL",[9557]],["boxDl",[9558]],["boxDL",[9559]],["boxdr",[9484]],["boxdR",[9554]],["boxDr",[9555]],["boxDR",[9556]],["boxh",[9472]],["boxH",[9552]],["boxhd",[9516]],["boxHd",[9572]],["boxhD",[9573]],["boxHD",[9574]],["boxhu",[9524]],["boxHu",[9575]],["boxhU",[9576]],["boxHU",[9577]],["boxminus",[8863]],["boxplus",[8862]],["boxtimes",[8864]],["boxul",[9496]],["boxuL",[9563]],["boxUl",[9564]],["boxUL",[9565]],["boxur",[9492]],["boxuR",[9560]],["boxUr",[9561]],["boxUR",[9562]],["boxv",[9474]],["boxV",[9553]],["boxvh",[9532]],["boxvH",[9578]],["boxVh",[9579]],["boxVH",[9580]],["boxvl",[9508]],["boxvL",[9569]],["boxVl",[9570]],["boxVL",[9571]],["boxvr",[9500]],["boxvR",[9566]],["boxVr",[9567]],["boxVR",[9568]],["bprime",[8245]],["breve",[728]],["Breve",[728]],["brvbar",[166]],["bscr",[119991]],["Bscr",[8492]],["bsemi",[8271]],["bsim",[8765]],["bsime",[8909]],["bsolb",[10693]],["bsol",[92]],["bsolhsub",[10184]],["bull",[8226]],["bullet",[8226]],["bump",[8782]],["bumpE",[10926]],["bumpe",[8783]],["Bumpeq",[8782]],["bumpeq",[8783]],["Cacute",[262]],["cacute",[263]],["capand",[10820]],["capbrcup",[10825]],["capcap",[10827]],["cap",[8745]],["Cap",[8914]],["capcup",[10823]],["capdot",[10816]],["CapitalDifferentialD",[8517]],["caps",[8745,65024]],["caret",[8257]],["caron",[711]],["Cayleys",[8493]],["ccaps",[10829]],["Ccaron",[268]],["ccaron",[269]],["Ccedil",[199]],["ccedil",[231]],["Ccirc",[264]],["ccirc",[265]],["Cconint",[8752]],["ccups",[10828]],["ccupssm",[10832]],["Cdot",[266]],["cdot",[267]],["cedil",[184]],["Cedilla",[184]],["cemptyv",[10674]],["cent",[162]],["centerdot",[183]],["CenterDot",[183]],["cfr",[120096]],["Cfr",[8493]],["CHcy",[1063]],["chcy",[1095]],["check",[10003]],["checkmark",[10003]],["Chi",[935]],["chi",[967]],["circ",[710]],["circeq",[8791]],["circlearrowleft",[8634]],["circlearrowright",[8635]],["circledast",[8859]],["circledcirc",[8858]],["circleddash",[8861]],["CircleDot",[8857]],["circledR",[174]],["circledS",[9416]],["CircleMinus",[8854]],["CirclePlus",[8853]],["CircleTimes",[8855]],["cir",[9675]],["cirE",[10691]],["cire",[8791]],["cirfnint",[10768]],["cirmid",[10991]],["cirscir",[10690]],["ClockwiseContourIntegral",[8754]],["clubs",[9827]],["clubsuit",[9827]],["colon",[58]],["Colon",[8759]],["Colone",[10868]],["colone",[8788]],["coloneq",[8788]],["comma",[44]],["commat",[64]],["comp",[8705]],["compfn",[8728]],["complement",[8705]],["complexes",[8450]],["cong",[8773]],["congdot",[10861]],["Congruent",[8801]],["conint",[8750]],["Conint",[8751]],["ContourIntegral",[8750]],["copf",[120148]],["Copf",[8450]],["coprod",[8720]],["Coproduct",[8720]],["copy",[169]],["COPY",[169]],["copysr",[8471]],["CounterClockwiseContourIntegral",[8755]],["crarr",[8629]],["cross",[10007]],["Cross",[10799]],["Cscr",[119966]],["cscr",[119992]],["csub",[10959]],["csube",[10961]],["csup",[10960]],["csupe",[10962]],["ctdot",[8943]],["cudarrl",[10552]],["cudarrr",[10549]],["cuepr",[8926]],["cuesc",[8927]],["cularr",[8630]],["cularrp",[10557]],["cupbrcap",[10824]],["cupcap",[10822]],["CupCap",[8781]],["cup",[8746]],["Cup",[8915]],["cupcup",[10826]],["cupdot",[8845]],["cupor",[10821]],["cups",[8746,65024]],["curarr",[8631]],["curarrm",[10556]],["curlyeqprec",[8926]],["curlyeqsucc",[8927]],["curlyvee",[8910]],["curlywedge",[8911]],["curren",[164]],["curvearrowleft",[8630]],["curvearrowright",[8631]],["cuvee",[8910]],["cuwed",[8911]],["cwconint",[8754]],["cwint",[8753]],["cylcty",[9005]],["dagger",[8224]],["Dagger",[8225]],["daleth",[8504]],["darr",[8595]],["Darr",[8609]],["dArr",[8659]],["dash",[8208]],["Dashv",[10980]],["dashv",[8867]],["dbkarow",[10511]],["dblac",[733]],["Dcaron",[270]],["dcaron",[271]],["Dcy",[1044]],["dcy",[1076]],["ddagger",[8225]],["ddarr",[8650]],["DD",[8517]],["dd",[8518]],["DDotrahd",[10513]],["ddotseq",[10871]],["deg",[176]],["Del",[8711]],["Delta",[916]],["delta",[948]],["demptyv",[10673]],["dfisht",[10623]],["Dfr",[120071]],["dfr",[120097]],["dHar",[10597]],["dharl",[8643]],["dharr",[8642]],["DiacriticalAcute",[180]],["DiacriticalDot",[729]],["DiacriticalDoubleAcute",[733]],["DiacriticalGrave",[96]],["DiacriticalTilde",[732]],["diam",[8900]],["diamond",[8900]],["Diamond",[8900]],["diamondsuit",[9830]],["diams",[9830]],["die",[168]],["DifferentialD",[8518]],["digamma",[989]],["disin",[8946]],["div",[247]],["divide",[247]],["divideontimes",[8903]],["divonx",[8903]],["DJcy",[1026]],["djcy",[1106]],["dlcorn",[8990]],["dlcrop",[8973]],["dollar",[36]],["Dopf",[120123]],["dopf",[120149]],["Dot",[168]],["dot",[729]],["DotDot",[8412]],["doteq",[8784]],["doteqdot",[8785]],["DotEqual",[8784]],["dotminus",[8760]],["dotplus",[8724]],["dotsquare",[8865]],["doublebarwedge",[8966]],["DoubleContourIntegral",[8751]],["DoubleDot",[168]],["DoubleDownArrow",[8659]],["DoubleLeftArrow",[8656]],["DoubleLeftRightArrow",[8660]],["DoubleLeftTee",[10980]],["DoubleLongLeftArrow",[10232]],["DoubleLongLeftRightArrow",[10234]],["DoubleLongRightArrow",[10233]],["DoubleRightArrow",[8658]],["DoubleRightTee",[8872]],["DoubleUpArrow",[8657]],["DoubleUpDownArrow",[8661]],["DoubleVerticalBar",[8741]],["DownArrowBar",[10515]],["downarrow",[8595]],["DownArrow",[8595]],["Downarrow",[8659]],["DownArrowUpArrow",[8693]],["DownBreve",[785]],["downdownarrows",[8650]],["downharpoonleft",[8643]],["downharpoonright",[8642]],["DownLeftRightVector",[10576]],["DownLeftTeeVector",[10590]],["DownLeftVectorBar",[10582]],["DownLeftVector",[8637]],["DownRightTeeVector",[10591]],["DownRightVectorBar",[10583]],["DownRightVector",[8641]],["DownTeeArrow",[8615]],["DownTee",[8868]],["drbkarow",[10512]],["drcorn",[8991]],["drcrop",[8972]],["Dscr",[119967]],["dscr",[119993]],["DScy",[1029]],["dscy",[1109]],["dsol",[10742]],["Dstrok",[272]],["dstrok",[273]],["dtdot",[8945]],["dtri",[9663]],["dtrif",[9662]],["duarr",[8693]],["duhar",[10607]],["dwangle",[10662]],["DZcy",[1039]],["dzcy",[1119]],["dzigrarr",[10239]],["Eacute",[201]],["eacute",[233]],["easter",[10862]],["Ecaron",[282]],["ecaron",[283]],["Ecirc",[202]],["ecirc",[234]],["ecir",[8790]],["ecolon",[8789]],["Ecy",[1069]],["ecy",[1101]],["eDDot",[10871]],["Edot",[278]],["edot",[279]],["eDot",[8785]],["ee",[8519]],["efDot",[8786]],["Efr",[120072]],["efr",[120098]],["eg",[10906]],["Egrave",[200]],["egrave",[232]],["egs",[10902]],["egsdot",[10904]],["el",[10905]],["Element",[8712]],["elinters",[9191]],["ell",[8467]],["els",[10901]],["elsdot",[10903]],["Emacr",[274]],["emacr",[275]],["empty",[8709]],["emptyset",[8709]],["EmptySmallSquare",[9723]],["emptyv",[8709]],["EmptyVerySmallSquare",[9643]],["emsp13",[8196]],["emsp14",[8197]],["emsp",[8195]],["ENG",[330]],["eng",[331]],["ensp",[8194]],["Eogon",[280]],["eogon",[281]],["Eopf",[120124]],["eopf",[120150]],["epar",[8917]],["eparsl",[10723]],["eplus",[10865]],["epsi",[949]],["Epsilon",[917]],["epsilon",[949]],["epsiv",[1013]],["eqcirc",[8790]],["eqcolon",[8789]],["eqsim",[8770]],["eqslantgtr",[10902]],["eqslantless",[10901]],["Equal",[10869]],["equals",[61]],["EqualTilde",[8770]],["equest",[8799]],["Equilibrium",[8652]],["equiv",[8801]],["equivDD",[10872]],["eqvparsl",[10725]],["erarr",[10609]],["erDot",[8787]],["escr",[8495]],["Escr",[8496]],["esdot",[8784]],["Esim",[10867]],["esim",[8770]],["Eta",[919]],["eta",[951]],["ETH",[208]],["eth",[240]],["Euml",[203]],["euml",[235]],["euro",[8364]],["excl",[33]],["exist",[8707]],["Exists",[8707]],["expectation",[8496]],["exponentiale",[8519]],["ExponentialE",[8519]],["fallingdotseq",[8786]],["Fcy",[1060]],["fcy",[1092]],["female",[9792]],["ffilig",[64259]],["fflig",[64256]],["ffllig",[64260]],["Ffr",[120073]],["ffr",[120099]],["filig",[64257]],["FilledSmallSquare",[9724]],["FilledVerySmallSquare",[9642]],["fjlig",[102,106]],["flat",[9837]],["fllig",[64258]],["fltns",[9649]],["fnof",[402]],["Fopf",[120125]],["fopf",[120151]],["forall",[8704]],["ForAll",[8704]],["fork",[8916]],["forkv",[10969]],["Fouriertrf",[8497]],["fpartint",[10765]],["frac12",[189]],["frac13",[8531]],["frac14",[188]],["frac15",[8533]],["frac16",[8537]],["frac18",[8539]],["frac23",[8532]],["frac25",[8534]],["frac34",[190]],["frac35",[8535]],["frac38",[8540]],["frac45",[8536]],["frac56",[8538]],["frac58",[8541]],["frac78",[8542]],["frasl",[8260]],["frown",[8994]],["fscr",[119995]],["Fscr",[8497]],["gacute",[501]],["Gamma",[915]],["gamma",[947]],["Gammad",[988]],["gammad",[989]],["gap",[10886]],["Gbreve",[286]],["gbreve",[287]],["Gcedil",[290]],["Gcirc",[284]],["gcirc",[285]],["Gcy",[1043]],["gcy",[1075]],["Gdot",[288]],["gdot",[289]],["ge",[8805]],["gE",[8807]],["gEl",[10892]],["gel",[8923]],["geq",[8805]],["geqq",[8807]],["geqslant",[10878]],["gescc",[10921]],["ges",[10878]],["gesdot",[10880]],["gesdoto",[10882]],["gesdotol",[10884]],["gesl",[8923,65024]],["gesles",[10900]],["Gfr",[120074]],["gfr",[120100]],["gg",[8811]],["Gg",[8921]],["ggg",[8921]],["gimel",[8503]],["GJcy",[1027]],["gjcy",[1107]],["gla",[10917]],["gl",[8823]],["glE",[10898]],["glj",[10916]],["gnap",[10890]],["gnapprox",[10890]],["gne",[10888]],["gnE",[8809]],["gneq",[10888]],["gneqq",[8809]],["gnsim",[8935]],["Gopf",[120126]],["gopf",[120152]],["grave",[96]],["GreaterEqual",[8805]],["GreaterEqualLess",[8923]],["GreaterFullEqual",[8807]],["GreaterGreater",[10914]],["GreaterLess",[8823]],["GreaterSlantEqual",[10878]],["GreaterTilde",[8819]],["Gscr",[119970]],["gscr",[8458]],["gsim",[8819]],["gsime",[10894]],["gsiml",[10896]],["gtcc",[10919]],["gtcir",[10874]],["gt",[62]],["GT",[62]],["Gt",[8811]],["gtdot",[8919]],["gtlPar",[10645]],["gtquest",[10876]],["gtrapprox",[10886]],["gtrarr",[10616]],["gtrdot",[8919]],["gtreqless",[8923]],["gtreqqless",[10892]],["gtrless",[8823]],["gtrsim",[8819]],["gvertneqq",[8809,65024]],["gvnE",[8809,65024]],["Hacek",[711]],["hairsp",[8202]],["half",[189]],["hamilt",[8459]],["HARDcy",[1066]],["hardcy",[1098]],["harrcir",[10568]],["harr",[8596]],["hArr",[8660]],["harrw",[8621]],["Hat",[94]],["hbar",[8463]],["Hcirc",[292]],["hcirc",[293]],["hearts",[9829]],["heartsuit",[9829]],["hellip",[8230]],["hercon",[8889]],["hfr",[120101]],["Hfr",[8460]],["HilbertSpace",[8459]],["hksearow",[10533]],["hkswarow",[10534]],["hoarr",[8703]],["homtht",[8763]],["hookleftarrow",[8617]],["hookrightarrow",[8618]],["hopf",[120153]],["Hopf",[8461]],["horbar",[8213]],["HorizontalLine",[9472]],["hscr",[119997]],["Hscr",[8459]],["hslash",[8463]],["Hstrok",[294]],["hstrok",[295]],["HumpDownHump",[8782]],["HumpEqual",[8783]],["hybull",[8259]],["hyphen",[8208]],["Iacute",[205]],["iacute",[237]],["ic",[8291]],["Icirc",[206]],["icirc",[238]],["Icy",[1048]],["icy",[1080]],["Idot",[304]],["IEcy",[1045]],["iecy",[1077]],["iexcl",[161]],["iff",[8660]],["ifr",[120102]],["Ifr",[8465]],["Igrave",[204]],["igrave",[236]],["ii",[8520]],["iiiint",[10764]],["iiint",[8749]],["iinfin",[10716]],["iiota",[8489]],["IJlig",[306]],["ijlig",[307]],["Imacr",[298]],["imacr",[299]],["image",[8465]],["ImaginaryI",[8520]],["imagline",[8464]],["imagpart",[8465]],["imath",[305]],["Im",[8465]],["imof",[8887]],["imped",[437]],["Implies",[8658]],["incare",[8453]],["in",[8712]],["infin",[8734]],["infintie",[10717]],["inodot",[305]],["intcal",[8890]],["int",[8747]],["Int",[8748]],["integers",[8484]],["Integral",[8747]],["intercal",[8890]],["Intersection",[8898]],["intlarhk",[10775]],["intprod",[10812]],["InvisibleComma",[8291]],["InvisibleTimes",[8290]],["IOcy",[1025]],["iocy",[1105]],["Iogon",[302]],["iogon",[303]],["Iopf",[120128]],["iopf",[120154]],["Iota",[921]],["iota",[953]],["iprod",[10812]],["iquest",[191]],["iscr",[119998]],["Iscr",[8464]],["isin",[8712]],["isindot",[8949]],["isinE",[8953]],["isins",[8948]],["isinsv",[8947]],["isinv",[8712]],["it",[8290]],["Itilde",[296]],["itilde",[297]],["Iukcy",[1030]],["iukcy",[1110]],["Iuml",[207]],["iuml",[239]],["Jcirc",[308]],["jcirc",[309]],["Jcy",[1049]],["jcy",[1081]],["Jfr",[120077]],["jfr",[120103]],["jmath",[567]],["Jopf",[120129]],["jopf",[120155]],["Jscr",[119973]],["jscr",[119999]],["Jsercy",[1032]],["jsercy",[1112]],["Jukcy",[1028]],["jukcy",[1108]],["Kappa",[922]],["kappa",[954]],["kappav",[1008]],["Kcedil",[310]],["kcedil",[311]],["Kcy",[1050]],["kcy",[1082]],["Kfr",[120078]],["kfr",[120104]],["kgreen",[312]],["KHcy",[1061]],["khcy",[1093]],["KJcy",[1036]],["kjcy",[1116]],["Kopf",[120130]],["kopf",[120156]],["Kscr",[119974]],["kscr",[12e4]],["lAarr",[8666]],["Lacute",[313]],["lacute",[314]],["laemptyv",[10676]],["lagran",[8466]],["Lambda",[923]],["lambda",[955]],["lang",[10216]],["Lang",[10218]],["langd",[10641]],["langle",[10216]],["lap",[10885]],["Laplacetrf",[8466]],["laquo",[171]],["larrb",[8676]],["larrbfs",[10527]],["larr",[8592]],["Larr",[8606]],["lArr",[8656]],["larrfs",[10525]],["larrhk",[8617]],["larrlp",[8619]],["larrpl",[10553]],["larrsim",[10611]],["larrtl",[8610]],["latail",[10521]],["lAtail",[10523]],["lat",[10923]],["late",[10925]],["lates",[10925,65024]],["lbarr",[10508]],["lBarr",[10510]],["lbbrk",[10098]],["lbrace",[123]],["lbrack",[91]],["lbrke",[10635]],["lbrksld",[10639]],["lbrkslu",[10637]],["Lcaron",[317]],["lcaron",[318]],["Lcedil",[315]],["lcedil",[316]],["lceil",[8968]],["lcub",[123]],["Lcy",[1051]],["lcy",[1083]],["ldca",[10550]],["ldquo",[8220]],["ldquor",[8222]],["ldrdhar",[10599]],["ldrushar",[10571]],["ldsh",[8626]],["le",[8804]],["lE",[8806]],["LeftAngleBracket",[10216]],["LeftArrowBar",[8676]],["leftarrow",[8592]],["LeftArrow",[8592]],["Leftarrow",[8656]],["LeftArrowRightArrow",[8646]],["leftarrowtail",[8610]],["LeftCeiling",[8968]],["LeftDoubleBracket",[10214]],["LeftDownTeeVector",[10593]],["LeftDownVectorBar",[10585]],["LeftDownVector",[8643]],["LeftFloor",[8970]],["leftharpoondown",[8637]],["leftharpoonup",[8636]],["leftleftarrows",[8647]],["leftrightarrow",[8596]],["LeftRightArrow",[8596]],["Leftrightarrow",[8660]],["leftrightarrows",[8646]],["leftrightharpoons",[8651]],["leftrightsquigarrow",[8621]],["LeftRightVector",[10574]],["LeftTeeArrow",[8612]],["LeftTee",[8867]],["LeftTeeVector",[10586]],["leftthreetimes",[8907]],["LeftTriangleBar",[10703]],["LeftTriangle",[8882]],["LeftTriangleEqual",[8884]],["LeftUpDownVector",[10577]],["LeftUpTeeVector",[10592]],["LeftUpVectorBar",[10584]],["LeftUpVector",[8639]],["LeftVectorBar",[10578]],["LeftVector",[8636]],["lEg",[10891]],["leg",[8922]],["leq",[8804]],["leqq",[8806]],["leqslant",[10877]],["lescc",[10920]],["les",[10877]],["lesdot",[10879]],["lesdoto",[10881]],["lesdotor",[10883]],["lesg",[8922,65024]],["lesges",[10899]],["lessapprox",[10885]],["lessdot",[8918]],["lesseqgtr",[8922]],["lesseqqgtr",[10891]],["LessEqualGreater",[8922]],["LessFullEqual",[8806]],["LessGreater",[8822]],["lessgtr",[8822]],["LessLess",[10913]],["lesssim",[8818]],["LessSlantEqual",[10877]],["LessTilde",[8818]],["lfisht",[10620]],["lfloor",[8970]],["Lfr",[120079]],["lfr",[120105]],["lg",[8822]],["lgE",[10897]],["lHar",[10594]],["lhard",[8637]],["lharu",[8636]],["lharul",[10602]],["lhblk",[9604]],["LJcy",[1033]],["ljcy",[1113]],["llarr",[8647]],["ll",[8810]],["Ll",[8920]],["llcorner",[8990]],["Lleftarrow",[8666]],["llhard",[10603]],["lltri",[9722]],["Lmidot",[319]],["lmidot",[320]],["lmoustache",[9136]],["lmoust",[9136]],["lnap",[10889]],["lnapprox",[10889]],["lne",[10887]],["lnE",[8808]],["lneq",[10887]],["lneqq",[8808]],["lnsim",[8934]],["loang",[10220]],["loarr",[8701]],["lobrk",[10214]],["longleftarrow",[10229]],["LongLeftArrow",[10229]],["Longleftarrow",[10232]],["longleftrightarrow",[10231]],["LongLeftRightArrow",[10231]],["Longleftrightarrow",[10234]],["longmapsto",[10236]],["longrightarrow",[10230]],["LongRightArrow",[10230]],["Longrightarrow",[10233]],["looparrowleft",[8619]],["looparrowright",[8620]],["lopar",[10629]],["Lopf",[120131]],["lopf",[120157]],["loplus",[10797]],["lotimes",[10804]],["lowast",[8727]],["lowbar",[95]],["LowerLeftArrow",[8601]],["LowerRightArrow",[8600]],["loz",[9674]],["lozenge",[9674]],["lozf",[10731]],["lpar",[40]],["lparlt",[10643]],["lrarr",[8646]],["lrcorner",[8991]],["lrhar",[8651]],["lrhard",[10605]],["lrm",[8206]],["lrtri",[8895]],["lsaquo",[8249]],["lscr",[120001]],["Lscr",[8466]],["lsh",[8624]],["Lsh",[8624]],["lsim",[8818]],["lsime",[10893]],["lsimg",[10895]],["lsqb",[91]],["lsquo",[8216]],["lsquor",[8218]],["Lstrok",[321]],["lstrok",[322]],["ltcc",[10918]],["ltcir",[10873]],["lt",[60]],["LT",[60]],["Lt",[8810]],["ltdot",[8918]],["lthree",[8907]],["ltimes",[8905]],["ltlarr",[10614]],["ltquest",[10875]],["ltri",[9667]],["ltrie",[8884]],["ltrif",[9666]],["ltrPar",[10646]],["lurdshar",[10570]],["luruhar",[10598]],["lvertneqq",[8808,65024]],["lvnE",[8808,65024]],["macr",[175]],["male",[9794]],["malt",[10016]],["maltese",[10016]],["Map",[10501]],["map",[8614]],["mapsto",[8614]],["mapstodown",[8615]],["mapstoleft",[8612]],["mapstoup",[8613]],["marker",[9646]],["mcomma",[10793]],["Mcy",[1052]],["mcy",[1084]],["mdash",[8212]],["mDDot",[8762]],["measuredangle",[8737]],["MediumSpace",[8287]],["Mellintrf",[8499]],["Mfr",[120080]],["mfr",[120106]],["mho",[8487]],["micro",[181]],["midast",[42]],["midcir",[10992]],["mid",[8739]],["middot",[183]],["minusb",[8863]],["minus",[8722]],["minusd",[8760]],["minusdu",[10794]],["MinusPlus",[8723]],["mlcp",[10971]],["mldr",[8230]],["mnplus",[8723]],["models",[8871]],["Mopf",[120132]],["mopf",[120158]],["mp",[8723]],["mscr",[120002]],["Mscr",[8499]],["mstpos",[8766]],["Mu",[924]],["mu",[956]],["multimap",[8888]],["mumap",[8888]],["nabla",[8711]],["Nacute",[323]],["nacute",[324]],["nang",[8736,8402]],["nap",[8777]],["napE",[10864,824]],["napid",[8779,824]],["napos",[329]],["napprox",[8777]],["natural",[9838]],["naturals",[8469]],["natur",[9838]],["nbsp",[160]],["nbump",[8782,824]],["nbumpe",[8783,824]],["ncap",[10819]],["Ncaron",[327]],["ncaron",[328]],["Ncedil",[325]],["ncedil",[326]],["ncong",[8775]],["ncongdot",[10861,824]],["ncup",[10818]],["Ncy",[1053]],["ncy",[1085]],["ndash",[8211]],["nearhk",[10532]],["nearr",[8599]],["neArr",[8663]],["nearrow",[8599]],["ne",[8800]],["nedot",[8784,824]],["NegativeMediumSpace",[8203]],["NegativeThickSpace",[8203]],["NegativeThinSpace",[8203]],["NegativeVeryThinSpace",[8203]],["nequiv",[8802]],["nesear",[10536]],["nesim",[8770,824]],["NestedGreaterGreater",[8811]],["NestedLessLess",[8810]],["nexist",[8708]],["nexists",[8708]],["Nfr",[120081]],["nfr",[120107]],["ngE",[8807,824]],["nge",[8817]],["ngeq",[8817]],["ngeqq",[8807,824]],["ngeqslant",[10878,824]],["nges",[10878,824]],["nGg",[8921,824]],["ngsim",[8821]],["nGt",[8811,8402]],["ngt",[8815]],["ngtr",[8815]],["nGtv",[8811,824]],["nharr",[8622]],["nhArr",[8654]],["nhpar",[10994]],["ni",[8715]],["nis",[8956]],["nisd",[8954]],["niv",[8715]],["NJcy",[1034]],["njcy",[1114]],["nlarr",[8602]],["nlArr",[8653]],["nldr",[8229]],["nlE",[8806,824]],["nle",[8816]],["nleftarrow",[8602]],["nLeftarrow",[8653]],["nleftrightarrow",[8622]],["nLeftrightarrow",[8654]],["nleq",[8816]],["nleqq",[8806,824]],["nleqslant",[10877,824]],["nles",[10877,824]],["nless",[8814]],["nLl",[8920,824]],["nlsim",[8820]],["nLt",[8810,8402]],["nlt",[8814]],["nltri",[8938]],["nltrie",[8940]],["nLtv",[8810,824]],["nmid",[8740]],["NoBreak",[8288]],["NonBreakingSpace",[160]],["nopf",[120159]],["Nopf",[8469]],["Not",[10988]],["not",[172]],["NotCongruent",[8802]],["NotCupCap",[8813]],["NotDoubleVerticalBar",[8742]],["NotElement",[8713]],["NotEqual",[8800]],["NotEqualTilde",[8770,824]],["NotExists",[8708]],["NotGreater",[8815]],["NotGreaterEqual",[8817]],["NotGreaterFullEqual",[8807,824]],["NotGreaterGreater",[8811,824]],["NotGreaterLess",[8825]],["NotGreaterSlantEqual",[10878,824]],["NotGreaterTilde",[8821]],["NotHumpDownHump",[8782,824]],["NotHumpEqual",[8783,824]],["notin",[8713]],["notindot",[8949,824]],["notinE",[8953,824]],["notinva",[8713]],["notinvb",[8951]],["notinvc",[8950]],["NotLeftTriangleBar",[10703,824]],["NotLeftTriangle",[8938]],["NotLeftTriangleEqual",[8940]],["NotLess",[8814]],["NotLessEqual",[8816]],["NotLessGreater",[8824]],["NotLessLess",[8810,824]],["NotLessSlantEqual",[10877,824]],["NotLessTilde",[8820]],["NotNestedGreaterGreater",[10914,824]],["NotNestedLessLess",[10913,824]],["notni",[8716]],["notniva",[8716]],["notnivb",[8958]],["notnivc",[8957]],["NotPrecedes",[8832]],["NotPrecedesEqual",[10927,824]],["NotPrecedesSlantEqual",[8928]],["NotReverseElement",[8716]],["NotRightTriangleBar",[10704,824]],["NotRightTriangle",[8939]],["NotRightTriangleEqual",[8941]],["NotSquareSubset",[8847,824]],["NotSquareSubsetEqual",[8930]],["NotSquareSuperset",[8848,824]],["NotSquareSupersetEqual",[8931]],["NotSubset",[8834,8402]],["NotSubsetEqual",[8840]],["NotSucceeds",[8833]],["NotSucceedsEqual",[10928,824]],["NotSucceedsSlantEqual",[8929]],["NotSucceedsTilde",[8831,824]],["NotSuperset",[8835,8402]],["NotSupersetEqual",[8841]],["NotTilde",[8769]],["NotTildeEqual",[8772]],["NotTildeFullEqual",[8775]],["NotTildeTilde",[8777]],["NotVerticalBar",[8740]],["nparallel",[8742]],["npar",[8742]],["nparsl",[11005,8421]],["npart",[8706,824]],["npolint",[10772]],["npr",[8832]],["nprcue",[8928]],["nprec",[8832]],["npreceq",[10927,824]],["npre",[10927,824]],["nrarrc",[10547,824]],["nrarr",[8603]],["nrArr",[8655]],["nrarrw",[8605,824]],["nrightarrow",[8603]],["nRightarrow",[8655]],["nrtri",[8939]],["nrtrie",[8941]],["nsc",[8833]],["nsccue",[8929]],["nsce",[10928,824]],["Nscr",[119977]],["nscr",[120003]],["nshortmid",[8740]],["nshortparallel",[8742]],["nsim",[8769]],["nsime",[8772]],["nsimeq",[8772]],["nsmid",[8740]],["nspar",[8742]],["nsqsube",[8930]],["nsqsupe",[8931]],["nsub",[8836]],["nsubE",[10949,824]],["nsube",[8840]],["nsubset",[8834,8402]],["nsubseteq",[8840]],["nsubseteqq",[10949,824]],["nsucc",[8833]],["nsucceq",[10928,824]],["nsup",[8837]],["nsupE",[10950,824]],["nsupe",[8841]],["nsupset",[8835,8402]],["nsupseteq",[8841]],["nsupseteqq",[10950,824]],["ntgl",[8825]],["Ntilde",[209]],["ntilde",[241]],["ntlg",[8824]],["ntriangleleft",[8938]],["ntrianglelefteq",[8940]],["ntriangleright",[8939]],["ntrianglerighteq",[8941]],["Nu",[925]],["nu",[957]],["num",[35]],["numero",[8470]],["numsp",[8199]],["nvap",[8781,8402]],["nvdash",[8876]],["nvDash",[8877]],["nVdash",[8878]],["nVDash",[8879]],["nvge",[8805,8402]],["nvgt",[62,8402]],["nvHarr",[10500]],["nvinfin",[10718]],["nvlArr",[10498]],["nvle",[8804,8402]],["nvlt",[60,8402]],["nvltrie",[8884,8402]],["nvrArr",[10499]],["nvrtrie",[8885,8402]],["nvsim",[8764,8402]],["nwarhk",[10531]],["nwarr",[8598]],["nwArr",[8662]],["nwarrow",[8598]],["nwnear",[10535]],["Oacute",[211]],["oacute",[243]],["oast",[8859]],["Ocirc",[212]],["ocirc",[244]],["ocir",[8858]],["Ocy",[1054]],["ocy",[1086]],["odash",[8861]],["Odblac",[336]],["odblac",[337]],["odiv",[10808]],["odot",[8857]],["odsold",[10684]],["OElig",[338]],["oelig",[339]],["ofcir",[10687]],["Ofr",[120082]],["ofr",[120108]],["ogon",[731]],["Ograve",[210]],["ograve",[242]],["ogt",[10689]],["ohbar",[10677]],["ohm",[937]],["oint",[8750]],["olarr",[8634]],["olcir",[10686]],["olcross",[10683]],["oline",[8254]],["olt",[10688]],["Omacr",[332]],["omacr",[333]],["Omega",[937]],["omega",[969]],["Omicron",[927]],["omicron",[959]],["omid",[10678]],["ominus",[8854]],["Oopf",[120134]],["oopf",[120160]],["opar",[10679]],["OpenCurlyDoubleQuote",[8220]],["OpenCurlyQuote",[8216]],["operp",[10681]],["oplus",[8853]],["orarr",[8635]],["Or",[10836]],["or",[8744]],["ord",[10845]],["order",[8500]],["orderof",[8500]],["ordf",[170]],["ordm",[186]],["origof",[8886]],["oror",[10838]],["orslope",[10839]],["orv",[10843]],["oS",[9416]],["Oscr",[119978]],["oscr",[8500]],["Oslash",[216]],["oslash",[248]],["osol",[8856]],["Otilde",[213]],["otilde",[245]],["otimesas",[10806]],["Otimes",[10807]],["otimes",[8855]],["Ouml",[214]],["ouml",[246]],["ovbar",[9021]],["OverBar",[8254]],["OverBrace",[9182]],["OverBracket",[9140]],["OverParenthesis",[9180]],["para",[182]],["parallel",[8741]],["par",[8741]],["parsim",[10995]],["parsl",[11005]],["part",[8706]],["PartialD",[8706]],["Pcy",[1055]],["pcy",[1087]],["percnt",[37]],["period",[46]],["permil",[8240]],["perp",[8869]],["pertenk",[8241]],["Pfr",[120083]],["pfr",[120109]],["Phi",[934]],["phi",[966]],["phiv",[981]],["phmmat",[8499]],["phone",[9742]],["Pi",[928]],["pi",[960]],["pitchfork",[8916]],["piv",[982]],["planck",[8463]],["planckh",[8462]],["plankv",[8463]],["plusacir",[10787]],["plusb",[8862]],["pluscir",[10786]],["plus",[43]],["plusdo",[8724]],["plusdu",[10789]],["pluse",[10866]],["PlusMinus",[177]],["plusmn",[177]],["plussim",[10790]],["plustwo",[10791]],["pm",[177]],["Poincareplane",[8460]],["pointint",[10773]],["popf",[120161]],["Popf",[8473]],["pound",[163]],["prap",[10935]],["Pr",[10939]],["pr",[8826]],["prcue",[8828]],["precapprox",[10935]],["prec",[8826]],["preccurlyeq",[8828]],["Precedes",[8826]],["PrecedesEqual",[10927]],["PrecedesSlantEqual",[8828]],["PrecedesTilde",[8830]],["preceq",[10927]],["precnapprox",[10937]],["precneqq",[10933]],["precnsim",[8936]],["pre",[10927]],["prE",[10931]],["precsim",[8830]],["prime",[8242]],["Prime",[8243]],["primes",[8473]],["prnap",[10937]],["prnE",[10933]],["prnsim",[8936]],["prod",[8719]],["Product",[8719]],["profalar",[9006]],["profline",[8978]],["profsurf",[8979]],["prop",[8733]],["Proportional",[8733]],["Proportion",[8759]],["propto",[8733]],["prsim",[8830]],["prurel",[8880]],["Pscr",[119979]],["pscr",[120005]],["Psi",[936]],["psi",[968]],["puncsp",[8200]],["Qfr",[120084]],["qfr",[120110]],["qint",[10764]],["qopf",[120162]],["Qopf",[8474]],["qprime",[8279]],["Qscr",[119980]],["qscr",[120006]],["quaternions",[8461]],["quatint",[10774]],["quest",[63]],["questeq",[8799]],["quot",[34]],["QUOT",[34]],["rAarr",[8667]],["race",[8765,817]],["Racute",[340]],["racute",[341]],["radic",[8730]],["raemptyv",[10675]],["rang",[10217]],["Rang",[10219]],["rangd",[10642]],["range",[10661]],["rangle",[10217]],["raquo",[187]],["rarrap",[10613]],["rarrb",[8677]],["rarrbfs",[10528]],["rarrc",[10547]],["rarr",[8594]],["Rarr",[8608]],["rArr",[8658]],["rarrfs",[10526]],["rarrhk",[8618]],["rarrlp",[8620]],["rarrpl",[10565]],["rarrsim",[10612]],["Rarrtl",[10518]],["rarrtl",[8611]],["rarrw",[8605]],["ratail",[10522]],["rAtail",[10524]],["ratio",[8758]],["rationals",[8474]],["rbarr",[10509]],["rBarr",[10511]],["RBarr",[10512]],["rbbrk",[10099]],["rbrace",[125]],["rbrack",[93]],["rbrke",[10636]],["rbrksld",[10638]],["rbrkslu",[10640]],["Rcaron",[344]],["rcaron",[345]],["Rcedil",[342]],["rcedil",[343]],["rceil",[8969]],["rcub",[125]],["Rcy",[1056]],["rcy",[1088]],["rdca",[10551]],["rdldhar",[10601]],["rdquo",[8221]],["rdquor",[8221]],["CloseCurlyDoubleQuote",[8221]],["rdsh",[8627]],["real",[8476]],["realine",[8475]],["realpart",[8476]],["reals",[8477]],["Re",[8476]],["rect",[9645]],["reg",[174]],["REG",[174]],["ReverseElement",[8715]],["ReverseEquilibrium",[8651]],["ReverseUpEquilibrium",[10607]],["rfisht",[10621]],["rfloor",[8971]],["rfr",[120111]],["Rfr",[8476]],["rHar",[10596]],["rhard",[8641]],["rharu",[8640]],["rharul",[10604]],["Rho",[929]],["rho",[961]],["rhov",[1009]],["RightAngleBracket",[10217]],["RightArrowBar",[8677]],["rightarrow",[8594]],["RightArrow",[8594]],["Rightarrow",[8658]],["RightArrowLeftArrow",[8644]],["rightarrowtail",[8611]],["RightCeiling",[8969]],["RightDoubleBracket",[10215]],["RightDownTeeVector",[10589]],["RightDownVectorBar",[10581]],["RightDownVector",[8642]],["RightFloor",[8971]],["rightharpoondown",[8641]],["rightharpoonup",[8640]],["rightleftarrows",[8644]],["rightleftharpoons",[8652]],["rightrightarrows",[8649]],["rightsquigarrow",[8605]],["RightTeeArrow",[8614]],["RightTee",[8866]],["RightTeeVector",[10587]],["rightthreetimes",[8908]],["RightTriangleBar",[10704]],["RightTriangle",[8883]],["RightTriangleEqual",[8885]],["RightUpDownVector",[10575]],["RightUpTeeVector",[10588]],["RightUpVectorBar",[10580]],["RightUpVector",[8638]],["RightVectorBar",[10579]],["RightVector",[8640]],["ring",[730]],["risingdotseq",[8787]],["rlarr",[8644]],["rlhar",[8652]],["rlm",[8207]],["rmoustache",[9137]],["rmoust",[9137]],["rnmid",[10990]],["roang",[10221]],["roarr",[8702]],["robrk",[10215]],["ropar",[10630]],["ropf",[120163]],["Ropf",[8477]],["roplus",[10798]],["rotimes",[10805]],["RoundImplies",[10608]],["rpar",[41]],["rpargt",[10644]],["rppolint",[10770]],["rrarr",[8649]],["Rrightarrow",[8667]],["rsaquo",[8250]],["rscr",[120007]],["Rscr",[8475]],["rsh",[8625]],["Rsh",[8625]],["rsqb",[93]],["rsquo",[8217]],["rsquor",[8217]],["CloseCurlyQuote",[8217]],["rthree",[8908]],["rtimes",[8906]],["rtri",[9657]],["rtrie",[8885]],["rtrif",[9656]],["rtriltri",[10702]],["RuleDelayed",[10740]],["ruluhar",[10600]],["rx",[8478]],["Sacute",[346]],["sacute",[347]],["sbquo",[8218]],["scap",[10936]],["Scaron",[352]],["scaron",[353]],["Sc",[10940]],["sc",[8827]],["sccue",[8829]],["sce",[10928]],["scE",[10932]],["Scedil",[350]],["scedil",[351]],["Scirc",[348]],["scirc",[349]],["scnap",[10938]],["scnE",[10934]],["scnsim",[8937]],["scpolint",[10771]],["scsim",[8831]],["Scy",[1057]],["scy",[1089]],["sdotb",[8865]],["sdot",[8901]],["sdote",[10854]],["searhk",[10533]],["searr",[8600]],["seArr",[8664]],["searrow",[8600]],["sect",[167]],["semi",[59]],["seswar",[10537]],["setminus",[8726]],["setmn",[8726]],["sext",[10038]],["Sfr",[120086]],["sfr",[120112]],["sfrown",[8994]],["sharp",[9839]],["SHCHcy",[1065]],["shchcy",[1097]],["SHcy",[1064]],["shcy",[1096]],["ShortDownArrow",[8595]],["ShortLeftArrow",[8592]],["shortmid",[8739]],["shortparallel",[8741]],["ShortRightArrow",[8594]],["ShortUpArrow",[8593]],["shy",[173]],["Sigma",[931]],["sigma",[963]],["sigmaf",[962]],["sigmav",[962]],["sim",[8764]],["simdot",[10858]],["sime",[8771]],["simeq",[8771]],["simg",[10910]],["simgE",[10912]],["siml",[10909]],["simlE",[10911]],["simne",[8774]],["simplus",[10788]],["simrarr",[10610]],["slarr",[8592]],["SmallCircle",[8728]],["smallsetminus",[8726]],["smashp",[10803]],["smeparsl",[10724]],["smid",[8739]],["smile",[8995]],["smt",[10922]],["smte",[10924]],["smtes",[10924,65024]],["SOFTcy",[1068]],["softcy",[1100]],["solbar",[9023]],["solb",[10692]],["sol",[47]],["Sopf",[120138]],["sopf",[120164]],["spades",[9824]],["spadesuit",[9824]],["spar",[8741]],["sqcap",[8851]],["sqcaps",[8851,65024]],["sqcup",[8852]],["sqcups",[8852,65024]],["Sqrt",[8730]],["sqsub",[8847]],["sqsube",[8849]],["sqsubset",[8847]],["sqsubseteq",[8849]],["sqsup",[8848]],["sqsupe",[8850]],["sqsupset",[8848]],["sqsupseteq",[8850]],["square",[9633]],["Square",[9633]],["SquareIntersection",[8851]],["SquareSubset",[8847]],["SquareSubsetEqual",[8849]],["SquareSuperset",[8848]],["SquareSupersetEqual",[8850]],["SquareUnion",[8852]],["squarf",[9642]],["squ",[9633]],["squf",[9642]],["srarr",[8594]],["Sscr",[119982]],["sscr",[120008]],["ssetmn",[8726]],["ssmile",[8995]],["sstarf",[8902]],["Star",[8902]],["star",[9734]],["starf",[9733]],["straightepsilon",[1013]],["straightphi",[981]],["strns",[175]],["sub",[8834]],["Sub",[8912]],["subdot",[10941]],["subE",[10949]],["sube",[8838]],["subedot",[10947]],["submult",[10945]],["subnE",[10955]],["subne",[8842]],["subplus",[10943]],["subrarr",[10617]],["subset",[8834]],["Subset",[8912]],["subseteq",[8838]],["subseteqq",[10949]],["SubsetEqual",[8838]],["subsetneq",[8842]],["subsetneqq",[10955]],["subsim",[10951]],["subsub",[10965]],["subsup",[10963]],["succapprox",[10936]],["succ",[8827]],["succcurlyeq",[8829]],["Succeeds",[8827]],["SucceedsEqual",[10928]],["SucceedsSlantEqual",[8829]],["SucceedsTilde",[8831]],["succeq",[10928]],["succnapprox",[10938]],["succneqq",[10934]],["succnsim",[8937]],["succsim",[8831]],["SuchThat",[8715]],["sum",[8721]],["Sum",[8721]],["sung",[9834]],["sup1",[185]],["sup2",[178]],["sup3",[179]],["sup",[8835]],["Sup",[8913]],["supdot",[10942]],["supdsub",[10968]],["supE",[10950]],["supe",[8839]],["supedot",[10948]],["Superset",[8835]],["SupersetEqual",[8839]],["suphsol",[10185]],["suphsub",[10967]],["suplarr",[10619]],["supmult",[10946]],["supnE",[10956]],["supne",[8843]],["supplus",[10944]],["supset",[8835]],["Supset",[8913]],["supseteq",[8839]],["supseteqq",[10950]],["supsetneq",[8843]],["supsetneqq",[10956]],["supsim",[10952]],["supsub",[10964]],["supsup",[10966]],["swarhk",[10534]],["swarr",[8601]],["swArr",[8665]],["swarrow",[8601]],["swnwar",[10538]],["szlig",[223]],["Tab",[9]],["target",[8982]],["Tau",[932]],["tau",[964]],["tbrk",[9140]],["Tcaron",[356]],["tcaron",[357]],["Tcedil",[354]],["tcedil",[355]],["Tcy",[1058]],["tcy",[1090]],["tdot",[8411]],["telrec",[8981]],["Tfr",[120087]],["tfr",[120113]],["there4",[8756]],["therefore",[8756]],["Therefore",[8756]],["Theta",[920]],["theta",[952]],["thetasym",[977]],["thetav",[977]],["thickapprox",[8776]],["thicksim",[8764]],["ThickSpace",[8287,8202]],["ThinSpace",[8201]],["thinsp",[8201]],["thkap",[8776]],["thksim",[8764]],["THORN",[222]],["thorn",[254]],["tilde",[732]],["Tilde",[8764]],["TildeEqual",[8771]],["TildeFullEqual",[8773]],["TildeTilde",[8776]],["timesbar",[10801]],["timesb",[8864]],["times",[215]],["timesd",[10800]],["tint",[8749]],["toea",[10536]],["topbot",[9014]],["topcir",[10993]],["top",[8868]],["Topf",[120139]],["topf",[120165]],["topfork",[10970]],["tosa",[10537]],["tprime",[8244]],["trade",[8482]],["TRADE",[8482]],["triangle",[9653]],["triangledown",[9663]],["triangleleft",[9667]],["trianglelefteq",[8884]],["triangleq",[8796]],["triangleright",[9657]],["trianglerighteq",[8885]],["tridot",[9708]],["trie",[8796]],["triminus",[10810]],["TripleDot",[8411]],["triplus",[10809]],["trisb",[10701]],["tritime",[10811]],["trpezium",[9186]],["Tscr",[119983]],["tscr",[120009]],["TScy",[1062]],["tscy",[1094]],["TSHcy",[1035]],["tshcy",[1115]],["Tstrok",[358]],["tstrok",[359]],["twixt",[8812]],["twoheadleftarrow",[8606]],["twoheadrightarrow",[8608]],["Uacute",[218]],["uacute",[250]],["uarr",[8593]],["Uarr",[8607]],["uArr",[8657]],["Uarrocir",[10569]],["Ubrcy",[1038]],["ubrcy",[1118]],["Ubreve",[364]],["ubreve",[365]],["Ucirc",[219]],["ucirc",[251]],["Ucy",[1059]],["ucy",[1091]],["udarr",[8645]],["Udblac",[368]],["udblac",[369]],["udhar",[10606]],["ufisht",[10622]],["Ufr",[120088]],["ufr",[120114]],["Ugrave",[217]],["ugrave",[249]],["uHar",[10595]],["uharl",[8639]],["uharr",[8638]],["uhblk",[9600]],["ulcorn",[8988]],["ulcorner",[8988]],["ulcrop",[8975]],["ultri",[9720]],["Umacr",[362]],["umacr",[363]],["uml",[168]],["UnderBar",[95]],["UnderBrace",[9183]],["UnderBracket",[9141]],["UnderParenthesis",[9181]],["Union",[8899]],["UnionPlus",[8846]],["Uogon",[370]],["uogon",[371]],["Uopf",[120140]],["uopf",[120166]],["UpArrowBar",[10514]],["uparrow",[8593]],["UpArrow",[8593]],["Uparrow",[8657]],["UpArrowDownArrow",[8645]],["updownarrow",[8597]],["UpDownArrow",[8597]],["Updownarrow",[8661]],["UpEquilibrium",[10606]],["upharpoonleft",[8639]],["upharpoonright",[8638]],["uplus",[8846]],["UpperLeftArrow",[8598]],["UpperRightArrow",[8599]],["upsi",[965]],["Upsi",[978]],["upsih",[978]],["Upsilon",[933]],["upsilon",[965]],["UpTeeArrow",[8613]],["UpTee",[8869]],["upuparrows",[8648]],["urcorn",[8989]],["urcorner",[8989]],["urcrop",[8974]],["Uring",[366]],["uring",[367]],["urtri",[9721]],["Uscr",[119984]],["uscr",[120010]],["utdot",[8944]],["Utilde",[360]],["utilde",[361]],["utri",[9653]],["utrif",[9652]],["uuarr",[8648]],["Uuml",[220]],["uuml",[252]],["uwangle",[10663]],["vangrt",[10652]],["varepsilon",[1013]],["varkappa",[1008]],["varnothing",[8709]],["varphi",[981]],["varpi",[982]],["varpropto",[8733]],["varr",[8597]],["vArr",[8661]],["varrho",[1009]],["varsigma",[962]],["varsubsetneq",[8842,65024]],["varsubsetneqq",[10955,65024]],["varsupsetneq",[8843,65024]],["varsupsetneqq",[10956,65024]],["vartheta",[977]],["vartriangleleft",[8882]],["vartriangleright",[8883]],["vBar",[10984]],["Vbar",[10987]],["vBarv",[10985]],["Vcy",[1042]],["vcy",[1074]],["vdash",[8866]],["vDash",[8872]],["Vdash",[8873]],["VDash",[8875]],["Vdashl",[10982]],["veebar",[8891]],["vee",[8744]],["Vee",[8897]],["veeeq",[8794]],["vellip",[8942]],["verbar",[124]],["Verbar",[8214]],["vert",[124]],["Vert",[8214]],["VerticalBar",[8739]],["VerticalLine",[124]],["VerticalSeparator",[10072]],["VerticalTilde",[8768]],["VeryThinSpace",[8202]],["Vfr",[120089]],["vfr",[120115]],["vltri",[8882]],["vnsub",[8834,8402]],["vnsup",[8835,8402]],["Vopf",[120141]],["vopf",[120167]],["vprop",[8733]],["vrtri",[8883]],["Vscr",[119985]],["vscr",[120011]],["vsubnE",[10955,65024]],["vsubne",[8842,65024]],["vsupnE",[10956,65024]],["vsupne",[8843,65024]],["Vvdash",[8874]],["vzigzag",[10650]],["Wcirc",[372]],["wcirc",[373]],["wedbar",[10847]],["wedge",[8743]],["Wedge",[8896]],["wedgeq",[8793]],["weierp",[8472]],["Wfr",[120090]],["wfr",[120116]],["Wopf",[120142]],["wopf",[120168]],["wp",[8472]],["wr",[8768]],["wreath",[8768]],["Wscr",[119986]],["wscr",[120012]],["xcap",[8898]],["xcirc",[9711]],["xcup",[8899]],["xdtri",[9661]],["Xfr",[120091]],["xfr",[120117]],["xharr",[10231]],["xhArr",[10234]],["Xi",[926]],["xi",[958]],["xlarr",[10229]],["xlArr",[10232]],["xmap",[10236]],["xnis",[8955]],["xodot",[10752]],["Xopf",[120143]],["xopf",[120169]],["xoplus",[10753]],["xotime",[10754]],["xrarr",[10230]],["xrArr",[10233]],["Xscr",[119987]],["xscr",[120013]],["xsqcup",[10758]],["xuplus",[10756]],["xutri",[9651]],["xvee",[8897]],["xwedge",[8896]],["Yacute",[221]],["yacute",[253]],["YAcy",[1071]],["yacy",[1103]],["Ycirc",[374]],["ycirc",[375]],["Ycy",[1067]],["ycy",[1099]],["yen",[165]],["Yfr",[120092]],["yfr",[120118]],["YIcy",[1031]],["yicy",[1111]],["Yopf",[120144]],["yopf",[120170]],["Yscr",[119988]],["yscr",[120014]],["YUcy",[1070]],["yucy",[1102]],["yuml",[255]],["Yuml",[376]],["Zacute",[377]],["zacute",[378]],["Zcaron",[381]],["zcaron",[382]],["Zcy",[1047]],["zcy",[1079]],["Zdot",[379]],["zdot",[380]],["zeetrf",[8488]],["ZeroWidthSpace",[8203]],["Zeta",[918]],["zeta",[950]],["zfr",[120119]],["Zfr",[8488]],["ZHcy",[1046]],["zhcy",[1078]],["zigrarr",[8669]],["zopf",[120171]],["Zopf",[8484]],["Zscr",[119989]],["zscr",[120015]],["zwj",[8205]],["zwnj",[8204]]],a={},o={};l(a,o);var i=function(){function n(){}return n.prototype.decode=function(n){return n&&n.length?n.replace(/&(#?[\w\d]+);?/g,(function(n,e){var t;if("#"===e.charAt(0)){var r="x"===e.charAt(1)?parseInt(e.substr(2).toLowerCase(),16):parseInt(e.substr(1));isNaN(r)||r<-32768||r>65535||(t=String.fromCharCode(r))}else t=a[e];return t||n})):""},n.decode=function(e){return(new n).decode(e)},n.prototype.encode=function(n){if(!n||!n.length)return"";var e=n.length,t="",r=0;while(r<e){var a=o[n.charCodeAt(r)];if(a){var i=a[n.charCodeAt(r+1)];if(i?r++:i=a[""],i){t+="&"+i+";",r++;continue}}t+=n.charAt(r),r++}return t},n.encode=function(e){return(new n).encode(e)},n.prototype.encodeNonUTF=function(n){if(!n||!n.length)return"";var e=n.length,t="",r=0;while(r<e){var a=n.charCodeAt(r),i=o[a];if(i){var l=i[n.charCodeAt(r+1)];if(l?r++:l=i[""],l){t+="&"+l+";",r++;continue}}t+=a<32||a>126?"&#"+a+";":n.charAt(r),r++}return t},n.encodeNonUTF=function(e){return(new n).encodeNonUTF(e)},n.prototype.encodeNonASCII=function(n){if(!n||!n.length)return"";var e=n.length,t="",r=0;while(r<e){var a=n.charCodeAt(r);a<=255?t+=n[r++]:(t+="&#"+a+";",r++)}return t},n.encodeNonASCII=function(e){return(new n).encodeNonASCII(e)},n}();function l(n,e){var t=r.length;while(t--){var a=r[t],o=a[0],i=a[1],l=i[0],s=l<32||l>126||62===l||60===l||38===l||34===l||39===l,c=void 0;if(s&&(c=e[l]=e[l]||{}),i[1]){var p=i[1];n[o]=String.fromCharCode(l)+String.fromCharCode(p),s&&(c[p]=o)}else n[o]=String.fromCharCode(l),s&&(c[""]=o)}}e.Html5Entities=i},F52u:function(n,e,t){var r=t("UwrT");n.exports=function(n){if("number"!=typeof n&&"Number"!=r(n))throw TypeError("Incorrect invocation");return+n}},F6Mq:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t("YCKM"),o=t("f4X2"),i=t("IOv4"),l=t("5IVg"),s=t.n(l);e["default"]=()=>r["createElement"](i["b"],{grayBg:!0},r["createElement"](i["a"],{title:"Basic"},r["createElement"](i["c"],null,r["createElement"](i["d"],null,r["createElement"](o["j"],null)))),r["createElement"](i["a"],{title:"Type"},r["createElement"](i["c"],null,r["createElement"](i["d"],{name:"anna"},r["createElement"](a["d"],{className:s.a.main,style:{transform:"translate(0.5rem, 1.06rem)"}},r["createElement"](o["j"],{type:"anna"}))),r["createElement"](i["d"],{name:"wave"},r["createElement"](a["d"],{className:s.a.main},r["createElement"](o["j"],{type:"wave"}))),r["createElement"](i["d"],{name:"default"},r["createElement"](a["d"],{className:s.a.main},r["createElement"](o["j"],null))))),r["createElement"](i["a"],{title:"Color"},r["createElement"](i["c"],null,r["createElement"](i["d"],{name:"#FF9999"},r["createElement"](a["d"],{className:s.a.main,style:{transform:"translate(0.5rem, 1.06rem)"}},r["createElement"](o["j"],{type:"anna",color:"#FF9999"}))),r["createElement"](i["d"],{name:"#000000"},r["createElement"](a["d"],{className:s.a.main},r["createElement"](o["j"],{type:"wave",color:"#000000"}))),r["createElement"](i["d"],{name:"#1890FF"},r["createElement"](a["d"],{className:s.a.main},r["createElement"](o["j"],{color:"#1890FF"}))))))},FBts:function(n,e,t){var r=t("MMxC");r({target:"Math",stat:!0},{imulh:function(n,e){var t=65535,r=+n,a=+e,o=r&t,i=a&t,l=r>>16,s=a>>16,c=(l*i>>>0)+(o*i>>>16);return l*s+(c>>16)+((o*s>>>0)+(c&t)>>16)}})},FCfD:function(n,e){n.exports=function(n){if(void 0==n)throw TypeError("Can't call method on "+n);return n}},FK48:function(n,e,t){"use strict";var r=t("MMxC"),a=t("IuhT"),o=t("cT1L");r({target:"Map",stat:!0},{groupBy:function(n,e){var t=new this;o(e);var r=o(t.has),i=o(t.get),l=o(t.set);return a(n,(function(n){var a=e(n);r.call(t,a)?i.call(t,a).push(n):l.call(t,a,[n])})),t}})},FKIO:function(n,e,t){var r=t("MMxC");r({target:"Math",stat:!0},{umulh:function(n,e){var t=65535,r=+n,a=+e,o=r&t,i=a&t,l=r>>>16,s=a>>>16,c=(l*i>>>0)+(o*i>>>16);return l*s+(c>>>16)+((o*s>>>0)+(c&t)>>>16)}})},"FM/G":function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("VXy1")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"searchbar"},o.a.createElement("a",{"aria-hidden":"true",href:"#searchbar"},o.a.createElement("span",{className:"icon icon-link"})),"SearchBar"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { SearchBar } from \'anna-remax-ui\';\nimport { Block, Frame } from \'../../common\';\n\nexport default () => {\n  const [value, setValue] = React.useState(\'\');\n  const [value1, setValue1] = React.useState(\'\');\n  const [value2, setValue2] = React.useState(\'\');\n\n  return (\n    <Frame padding>\n      <Block noTitlePadding title="Basic">\n        <SearchBar\n          placeholder="\u641c\u7d22"\n          value={value}\n          onInput={(v: any) => setValue(v)}\n          onClear={() => setValue(\'\')}\n        />\n      </Block>\n      <Block noTitlePadding title="Show action button">\n        <SearchBar\n          placeholder="\u641c\u7d22"\n          keepShowActionButton\n          value={value1}\n          onInput={(v: any) => setValue1(v)}\n          onClear={() => setValue1(\'\')}\n        />\n      </Block>\n      <Block noTitlePadding title="Custom action text">\n        <SearchBar\n          placeholder="\u641c\u7d22"\n          actionName="\u641c\u7d22"\n          value={value2}\n          onInput={(v: any) => setValue2(v)}\n          onClear={() => setValue2(\'\')}\n          onSubmit={() => {}}\n          onActionClick={() => console.log(\'action\')}\n        />\n      </Block>\n      <Block noTitlePadding title="Size">\n        <SearchBar size="large" placeholder="large" style={{ marginBottom: \'30px\' }} />\n        <SearchBar placeholder="default" style={{ marginBottom: \'30px\' }} />\n        <SearchBar size="small" placeholder="small" />\n      </Block>\n      <Block noTitlePadding title="Custom input style">\n        <SearchBar\n          placeholder="\u641c\u7d22"\n          inputStyle={{\n            backgroundColor: \'#333\',\n          }}\n        />\n      </Block>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { SearchBar } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nexport default () => {\n  const [value, setValue] = React.useState('');\n  const [value1, setValue1] = React.useState('');\n  const [value2, setValue2] = React.useState('');\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      padding: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(SearchBar, {\n        placeholder: '\\u641C\\u7D22',\n        value,\n        onInput: v => setValue(v),\n        onClear: () => setValue(''),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Show action button',\n      },\n      /* #__PURE__ */ React.createElement(SearchBar, {\n        placeholder: '\\u641C\\u7D22',\n        keepShowActionButton: true,\n        value: value1,\n        onInput: v => setValue1(v),\n        onClear: () => setValue1(''),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Custom action text',\n      },\n      /* #__PURE__ */ React.createElement(SearchBar, {\n        placeholder: '\\u641C\\u7D22',\n        actionName: '\\u641C\\u7D22',\n        value: value2,\n        onInput: v => setValue2(v),\n        onClear: () => setValue2(''),\n        onSubmit: () => {},\n        onActionClick: () => console.log('action'),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Size',\n      },\n      /* #__PURE__ */ React.createElement(SearchBar, {\n        size: 'large',\n        placeholder: 'large',\n        style: {\n          marginBottom: '30px',\n        },\n      }),\n      /* #__PURE__ */ React.createElement(SearchBar, {\n        placeholder: 'default',\n        style: {\n          marginBottom: '30px',\n        },\n      }),\n      /* #__PURE__ */ React.createElement(SearchBar, {\n        size: 'small',\n        placeholder: 'small',\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Custom input style',\n      },\n      /* #__PURE__ */ React.createElement(SearchBar, {\n        placeholder: '\\u641C\\u7D22',\n        inputStyle: {\n          backgroundColor: '#333',\n        },\n      }),\n    ),\n  );\n};\n"}},{path:"/_demos/index-10",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u641c\u7d22\u6846\u5185\u5bb9"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"placeholder"),o.a.createElement("td",null,"\u5360\u4f4d\u63d0\u793a\u6587\u5b57"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"focus"),o.a.createElement("td",null,"\u83b7\u53d6\u7126\u70b9"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"actionName"),o.a.createElement("td",null,"\u53f3\u4fa7\u6309\u94ae\u6587\u6848"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,o.a.createElement("code",null,"\u53d6\u6d88"))),o.a.createElement("tr",null,o.a.createElement("td",null,"keepShowActionButton"),o.a.createElement("td",null,"\u662f\u5426\u4e00\u76f4\u663e\u793a\u53f3\u4fa7\u6309\u94ae"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"hideActionButton"),o.a.createElement("td",null,"\u820d\u53bb\u53f3\u4fa7\u6309\u94ae"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"size"),o.a.createElement("td",null,"\u641c\u7d22\u6846\u5927\u5c0f"),o.a.createElement("td",null,o.a.createElement("code",null,"small")," | ",o.a.createElement("code",null,"large")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"inputStyle"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u641c\u7d22\u6846\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onInput"),o.a.createElement("td",null,"\u952e\u76d8\u8f93\u5165\u65f6\u89e6\u53d1 input \u4e8b\u4ef6"),o.a.createElement("td",null,"(v) => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onClear"),o.a.createElement("td",null,"\u70b9\u51fb\u6e05\u9664\u6309\u94ae\u65f6\u89e6\u53d1\u4e8b\u4ef6"),o.a.createElement("td",null,"(v) => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onActionClick"),o.a.createElement("td",null,"\u53f3\u4fa7\u6309\u94ae\u70b9\u51fb\u89e6\u53d1\u4e8b\u4ef6"),o.a.createElement("td",null,"() => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onFocus"),o.a.createElement("td",null,"\u8f93\u5165\u6846\u805a\u7126\u65f6\u89e6\u53d1"),o.a.createElement("td",null,"(e) => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onBlur"),o.a.createElement("td",null,"\u8f93\u5165\u6846\u503c\u5931\u53bb\u7126\u70b9\u65f6\u89e6\u53d1"),o.a.createElement("td",null,"(e) => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onSubmit"),o.a.createElement("td",null,"\u70b9\u51fb\u5b8c\u6210\u6309\u94ae\u65f6\u89e6\u53d1"),o.a.createElement("td",null,"(v) => void"),o.a.createElement("td",null,"-"))))))}},FVwB:function(n,e,t){"use strict";var r,a=t("GNqc"),o=t("tny8"),i=t("ukPv"),l=t("tSXo"),s=t("jtLI"),c=t("Ei+o"),p=t("lz10"),u=t("NMFW"),d=t("YfKC").f,m=t("Acmb"),f=t("g1ZG"),h=t("2kyd"),x=t("evbn"),g=i.Int8Array,y=g&&g.prototype,C=i.Uint8ClampedArray,w=C&&C.prototype,v=g&&m(g),b=y&&m(y),k=Object.prototype,V=k.isPrototypeOf,P=h("toStringTag"),N=x("TYPED_ARRAY_TAG"),R=a&&!!f&&"Opera"!==c(i.opera),S=!1,T={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},E=function(n){var e=c(n);return"DataView"===e||s(T,e)},$=function(n){return l(n)&&s(T,c(n))},I=function(n){if($(n))return n;throw TypeError("Target is not a typed array")},_=function(n){if(f){if(V.call(v,n))return n}else for(var e in T)if(s(T,r)){var t=i[e];if(t&&(n===t||V.call(t,n)))return n}throw TypeError("Target is not a typed array constructor")},F=function(n,e,t){if(o){if(t)for(var r in T){var a=i[r];a&&s(a.prototype,n)&&delete a.prototype[n]}b[n]&&!t||u(b,n,t?e:R&&y[n]||e)}},O=function(n,e,t){var r,a;if(o){if(f){if(t)for(r in T)a=i[r],a&&s(a,n)&&delete a[n];if(v[n]&&!t)return;try{return u(v,n,t?e:R&&g[n]||e)}catch(l){}}for(r in T)a=i[r],!a||a[n]&&!t||u(a,n,e)}};for(r in T)i[r]||(R=!1);if((!R||"function"!=typeof v||v===Function.prototype)&&(v=function(){throw TypeError("Incorrect invocation")},R))for(r in T)i[r]&&f(i[r],v);if((!R||!b||b===k)&&(b=v.prototype,R))for(r in T)i[r]&&f(i[r].prototype,b);if(R&&m(w)!==b&&f(w,b),o&&!s(b,P))for(r in S=!0,d(b,P,{get:function(){return l(this)?this[N]:void 0}}),T)i[r]&&p(i[r],N,r);n.exports={NATIVE_ARRAY_BUFFER_VIEWS:R,TYPED_ARRAY_TAG:S&&N,aTypedArray:I,aTypedArrayConstructor:_,exportTypedArrayMethod:F,exportTypedArrayStaticMethod:O,isView:E,isTypedArray:$,TypedArray:v,TypedArrayPrototype:b}},FbcW:function(n,e,t){"use strict";var r=t("0qr0"),a=t("eNh0"),o=t("5yw/"),i=t("1aI8"),l=t("uMwj"),s="Array Iterator",c=i.set,p=i.getterFor(s);n.exports=l(Array,"Array",(function(n,e){c(this,{type:s,target:r(n),index:0,kind:e})}),(function(){var n=p(this),e=n.target,t=n.kind,r=n.index++;return!e||r>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values"),o.Arguments=o.Array,a("keys"),a("values"),a("entries")},FiYG:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("VqQD")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"card"},o.a.createElement("a",{"aria-hidden":"true",href:"#card"},o.a.createElement("span",{className:"icon icon-link"})),"Card"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Card } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nexport default () => {\n  return (\n    <Frame grayBg padding>\n      <Block title=\"Basic\">\n        <Card>\n          <View className={styles.row}>Card content</View>\n          <View className={styles.row}>Card content</View>\n          <View className={styles.row}>Card content</View>\n        </Card>\n      </Block>\n      <Block title=\"With Title\">\n        <Card title=\"title\">\n          <View className={styles.row}>Card content</View>\n          <View className={styles.row}>Card content</View>\n          <View className={styles.row}>Card content</View>\n        </Card>\n      </Block>\n      <Block title=\"With Extra\">\n        <Card title=\"title\" extra={<View className={styles.extra}>status</View>}>\n          <View className={styles.row}>Card content</View>\n          <View className={styles.row}>Card content</View>\n          <View className={styles.row}>Card content</View>\n        </Card>\n      </Block>\n    </Frame>\n  );\n};\n",jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Card } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nexport default () =>\n  /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n      padding: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(\n        Card,\n        null,\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.row,\n          },\n          'Card content',\n        ),\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.row,\n          },\n          'Card content',\n        ),\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.row,\n          },\n          'Card content',\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Title',\n      },\n      /* #__PURE__ */ React.createElement(\n        Card,\n        {\n          title: 'title',\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.row,\n          },\n          'Card content',\n        ),\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.row,\n          },\n          'Card content',\n        ),\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.row,\n          },\n          'Card content',\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Extra',\n      },\n      /* #__PURE__ */ React.createElement(\n        Card,\n        {\n          title: 'title',\n          extra: /* #__PURE__ */ React.createElement(\n            View,\n            {\n              className: styles.extra,\n            },\n            'status',\n          ),\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.row,\n          },\n          'Card content',\n        ),\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.row,\n          },\n          'Card content',\n        ),\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.row,\n          },\n          'Card content',\n        ),\n      ),\n    ),\n  );\n"}},{path:"/_demos/index",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"index.module.scss":{path:"./index.module.scss",content:".app {\n  padding: 30px;\n  background-color: #f2f2f2;\n  .extra{\n    color: #1890FF;\n  }\n  .row{\n    height: 60px;\n    line-height: 60px;\n  }\n}\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"title"),o.a.createElement("td",null,"\u5361\u7247\u6807\u9898"),o.a.createElement("td",null,o.a.createElement("code",null,"string")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"extra"),o.a.createElement("td",null,"\u5361\u7247\u53f3\u4e0a\u89d2\u7684\u64cd\u4f5c\u533a\u57df"),o.a.createElement("td",null,o.a.createElement("code",null,"string")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u5361\u7247\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"contentStyle"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u5361\u7247\u5185\u5bb9\u533a\u57df\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-"))))))}},Fs9M:function(n,e,t){var r=t("MVys");n.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},FuvP:function(n,e,t){var r=t("MMxC"),a=t("qA1w");r({target:"Set",stat:!0},{of:a})},GNqc:function(n,e){n.exports="undefined"!==typeof ArrayBuffer&&"undefined"!==typeof DataView},GPZX:function(n,e,t){var r=t("MMxC"),a=t("ls1J"),o=t("f1E4"),i=a.toKey,l=a.getMap,s=a.store;r({target:"Reflect",stat:!0},{deleteMetadata:function(n,e){var t=arguments.length<3?void 0:i(arguments[2]),r=l(o(e),t,!1);if(void 0===r||!r["delete"](n))return!1;if(r.size)return!0;var a=s.get(e);return a["delete"](t),!!a.size||s["delete"](e)}})},GPrf:function(n,e,t){var r=t("2kyd"),a=r("iterator"),o=!1;try{var i=0,l={next:function(){return{done:!!i++}},return:function(){o=!0}};l[a]=function(){return this},Array.from(l,(function(){throw 2}))}catch(s){}n.exports=function(n,e){if(!e&&!o)return!1;var t=!1;try{var r={};r[a]=function(){return{next:function(){return{done:t=!0}}}},n(r)}catch(s){}return t}},GemG:function(n,e,t){var r,a,o;(function(t,i){a=[n,e],r=i,o="function"===typeof r?r.apply(e,a):r,void 0===o||(n.exports=o)})(0,(function(n,e){"use strict";var t="function"===typeof Map?new Map:function(){var n=[],e=[];return{has:function(e){return n.indexOf(e)>-1},get:function(t){return e[n.indexOf(t)]},set:function(t,r){-1===n.indexOf(t)&&(n.push(t),e.push(r))},delete:function(t){var r=n.indexOf(t);r>-1&&(n.splice(r,1),e.splice(r,1))}}}(),r=function(n){return new Event(n,{bubbles:!0})};try{new Event("test")}catch(s){r=function(n){var e=document.createEvent("Event");return e.initEvent(n,!0,!1),e}}function a(n){if(n&&n.nodeName&&"TEXTAREA"===n.nodeName&&!t.has(n)){var e=null,a=null,o=null,i=function(){n.clientWidth!==a&&d()},l=function(e){window.removeEventListener("resize",i,!1),n.removeEventListener("input",d,!1),n.removeEventListener("keyup",d,!1),n.removeEventListener("autosize:destroy",l,!1),n.removeEventListener("autosize:update",d,!1),Object.keys(e).forEach((function(t){n.style[t]=e[t]})),t["delete"](n)}.bind(n,{height:n.style.height,resize:n.style.resize,overflowY:n.style.overflowY,overflowX:n.style.overflowX,wordWrap:n.style.wordWrap});n.addEventListener("autosize:destroy",l,!1),"onpropertychange"in n&&"oninput"in n&&n.addEventListener("keyup",d,!1),window.addEventListener("resize",i,!1),n.addEventListener("input",d,!1),n.addEventListener("autosize:update",d,!1),n.style.overflowX="hidden",n.style.wordWrap="break-word",t.set(n,{destroy:l,update:d}),s()}function s(){var t=window.getComputedStyle(n,null);"vertical"===t.resize?n.style.resize="none":"both"===t.resize&&(n.style.resize="horizontal"),e="content-box"===t.boxSizing?-(parseFloat(t.paddingTop)+parseFloat(t.paddingBottom)):parseFloat(t.borderTopWidth)+parseFloat(t.borderBottomWidth),isNaN(e)&&(e=0),d()}function c(e){var t=n.style.width;n.style.width="0px",n.offsetWidth,n.style.width=t,n.style.overflowY=e}function p(n){var e=[];while(n&&n.parentNode&&n.parentNode instanceof Element)n.parentNode.scrollTop&&e.push({node:n.parentNode,scrollTop:n.parentNode.scrollTop}),n=n.parentNode;return e}function u(){if(0!==n.scrollHeight){var t=p(n),r=document.documentElement&&document.documentElement.scrollTop;n.style.height="",n.style.height=n.scrollHeight+e+"px",a=n.clientWidth,t.forEach((function(n){n.node.scrollTop=n.scrollTop})),r&&(document.documentElement.scrollTop=r)}}function d(){u();var e=Math.round(parseFloat(n.style.height)),t=window.getComputedStyle(n,null),a="content-box"===t.boxSizing?Math.round(parseFloat(t.height)):n.offsetHeight;if(a<e?"hidden"===t.overflowY&&(c("scroll"),u(),a="content-box"===t.boxSizing?Math.round(parseFloat(window.getComputedStyle(n,null).height)):n.offsetHeight):"hidden"!==t.overflowY&&(c("hidden"),u(),a="content-box"===t.boxSizing?Math.round(parseFloat(window.getComputedStyle(n,null).height)):n.offsetHeight),o!==a){o=a;var i=r("autosize:resized");try{n.dispatchEvent(i)}catch(l){}}}}function o(n){var e=t.get(n);e&&e.destroy()}function i(n){var e=t.get(n);e&&e.update()}var l=null;"undefined"===typeof window||"function"!==typeof window.getComputedStyle?(l=function(n){return n},l.destroy=function(n){return n},l.update=function(n){return n}):(l=function(n,e){return n&&Array.prototype.forEach.call(n.length?n:[n],(function(n){return a(n,e)})),n},l.destroy=function(n){return n&&Array.prototype.forEach.call(n.length?n:[n],o),n},l.update=function(n){return n&&Array.prototype.forEach.call(n.length?n:[n],i),n}),e["default"]=l,n.exports=e["default"]}))},"Gw+j":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("/dTS"),c=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{symmetricDifference:function(n){var e=i(this),t=new(s(e,o("Set")))(e),r=l(t["delete"]),a=l(t.add);return c(n,(function(n){r.call(t,n)||a.call(t,n)})),t}})},H8Ov:function(n,e,t){var r=t("I65O");r("toPrimitive")},HKQd:function(n,e,t){var r=t("MVys"),a=t("Tfd0"),o="\u200b\x85\u180e";n.exports=function(n){return r((function(){return!!a[n]()||o[n]()!=o||a[n].name!==n}))}},HQPm:function(n,e,t){t("bPAU")},HctQ:function(n,e,t){var r=t("tny8"),a=t("YfKC"),o=t("f1E4"),i=t("P0e2");n.exports=r?Object.defineProperties:function(n,e){o(n);var t,r=i(e),l=r.length,s=0;while(l>s)a.f(n,t=r[s++],e[t]);return n}},HhvW:function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},HjuX:function(n,e,t){var r=t("MMxC"),a=t("CdV7").entries;r({target:"Object",stat:!0},{entries:function(n){return a(n)}})},HwU6:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=["apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","Aelig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams"],a=[39,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,38,60,62,338,339,352,353,376,710,732,8194,8195,8201,8204,8205,8206,8207,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8240,8249,8250,8364,402,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,977,978,982,8226,8230,8242,8243,8254,8260,8472,8465,8476,8482,8501,8592,8593,8594,8595,8596,8629,8656,8657,8658,8659,8660,8704,8706,8707,8709,8711,8712,8713,8715,8719,8721,8722,8727,8730,8733,8734,8736,8743,8744,8745,8746,8747,8756,8764,8773,8776,8800,8801,8804,8805,8834,8835,8836,8838,8839,8853,8855,8869,8901,8968,8969,8970,8971,9001,9002,9674,9824,9827,9829,9830],o={},i={};(function(){var n=0,e=r.length;while(n<e){var t=r[n],l=a[n];o[t]=String.fromCharCode(l),i[l]=t,n++}})();var l=function(){function n(){}return n.prototype.decode=function(n){return n&&n.length?n.replace(/&(#?[\w\d]+);?/g,(function(n,e){var t;if("#"===e.charAt(0)){var r="x"===e.charAt(1).toLowerCase()?parseInt(e.substr(2),16):parseInt(e.substr(1));isNaN(r)||r<-32768||r>65535||(t=String.fromCharCode(r))}else t=o[e];return t||n})):""},n.decode=function(e){return(new n).decode(e)},n.prototype.encode=function(n){if(!n||!n.length)return"";var e=n.length,t="",r=0;while(r<e){var a=i[n.charCodeAt(r)];t+=a?"&"+a+";":n.charAt(r),r++}return t},n.encode=function(e){return(new n).encode(e)},n.prototype.encodeNonUTF=function(n){if(!n||!n.length)return"";var e=n.length,t="",r=0;while(r<e){var a=n.charCodeAt(r),o=i[a];t+=o?"&"+o+";":a<32||a>126?"&#"+a+";":n.charAt(r),r++}return t},n.encodeNonUTF=function(e){return(new n).encodeNonUTF(e)},n.prototype.encodeNonASCII=function(n){if(!n||!n.length)return"";var e=n.length,t="",r=0;while(r<e){var a=n.charCodeAt(r);a<=255?t+=n[r++]:(t+="&#"+a+";",r++)}return t},n.encodeNonASCII=function(e){return(new n).encodeNonASCII(e)},n}();e.Html4Entities=l},"I5+W":function(n,e,t){"use strict";var r=t("FVwB"),a=t("8OQV"),o=r.aTypedArrayConstructor,i=r.exportTypedArrayStaticMethod;i("of",(function(){var n=0,e=arguments.length,t=new(o(this))(e);while(e>n)t[n]=arguments[n++];return t}),a)},I65O:function(n,e,t){var r=t("nFn1"),a=t("jtLI"),o=t("IjB0"),i=t("YfKC").f;n.exports=function(n){var e=r.Symbol||(r.Symbol={});a(e,n)||i(e,n,{value:o.f(n)})}},"IC/V":function(n,e,t){var r=t("I65O");r("split")},IGnA:function(n,e,t){var r=t("0qr0"),a=t("uGHk").f,o={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],l=function(n){try{return a(n)}catch(e){return i.slice()}};n.exports.f=function(n){return i&&"[object Window]"==o.call(n)?l(n):a(r(n))}},IOv4:function(n,e,t){"use strict";t.d(e,"b",(function(){return u})),t.d(e,"a",(function(){return h})),t.d(e,"c",(function(){return C})),t.d(e,"d",(function(){return k}));var r=t("k1fw"),a=t("q1tI"),o=t("YCKM"),i=t("TSYQ"),l=t.n(i),s=t("5P4d"),c=t.n(s),p=n=>{var e=n.title,t=n.children,i=n.className,s=void 0===i?"":i,p=n.grayBg,u=n.padding,d=n.style;return a["createElement"](o["d"],{className:l()({[c.a.app]:!0,[s]:!0,[c.a.padding]:u}),style:Object(r["a"])(Object(r["a"])({},d),{},{backgroundColor:p?"#F2F2F2":"#FDFFFD"})},e?a["createElement"](o["d"],{className:c.a.title},e):null,a["createElement"](o["d"],{className:c.a.content},t))},u=p,d=t("kRLG"),m=t.n(d),f=n=>{var e=n.title,t=n.children,r=n.noTitlePadding;return a["createElement"](o["d"],{className:m.a.block},a["createElement"](o["d"],{className:m.a.title,style:{paddingLeft:r?"0":"0.75rem"}},e),a["createElement"](o["d"],{className:m.a.content},t))},h=f,x=t("Qj0x"),g=t.n(x),y=n=>{var e=n.children;return a["createElement"](o["d"],{className:g.a.grid},e)},C=y,w=t("nekP"),v=t.n(w),b=n=>{var e=n.name,t=n.children;return a["createElement"](o["d"],{className:v.a.gridItem},t,a["createElement"](o["d"],{className:v.a.name},e))},k=b},IVUx:function(n,e,t){var r=t("Pp3M"),a=t("UHn5"),o=t("u+7+"),i=t("tSXo"),l=function(){this.object=null,this.symbol=null,this.primitives=null,this.objectsByIndex=o(null)};l.prototype.get=function(n,e){return this[n]||(this[n]=e())},l.prototype.next=function(n,e,t){var o=t?this.objectsByIndex[n]||(this.objectsByIndex[n]=new a):this.primitives||(this.primitives=new r),i=o.get(e);return i||o.set(e,i=new l),i};var s=new l;n.exports=function(){var n,e,t=s,r=arguments.length;for(n=0;n<r;n++)i(e=arguments[n])&&(t=t.next(n,e,!0));if(this===Object&&t===s)throw TypeError("Composite keys must contain a non-primitive component");for(n=0;n<r;n++)i(e=arguments[n])||(t=t.next(n,e,!1));return t}},IbaC:function(n,e,t){"use strict";var r=t("MMxC"),a=t("FCfD"),o=t("YON3"),i=t("k/J9"),l=t("2kyd"),s=t("Zcjx"),c=l("replace"),p=RegExp.prototype;r({target:"String",proto:!0},{replaceAll:function n(e,t){var r,l,u,d,m,f,h,x,g,y=a(this);if(null!=e){if(r=o(e),r&&(l=String(a("flags"in p?e.flags:i.call(e))),!~l.indexOf("g")))throw TypeError("`.replaceAll` does not allow non-global regexes");if(u=e[c],void 0!==u)return u.call(e,y,t);if(s&&r)return String(y).replace(e,t)}if(d=String(y),m=String(e),""===m)return n.call(d,/(?:)/g,t);if(f=d.split(m),"function"!==typeof t)return f.join(String(t));for(h=f[0],x=h.length,g=1;g<f.length;g++)h+=String(t(m,x,d)),x+=m.length+f[g].length,h+=f[g];return h}})},IjB0:function(n,e,t){var r=t("2kyd");e.f=r},IuhT:function(n,e,t){var r=t("f1E4"),a=t("bF+Q"),o=t("oa35"),i=t("7BAe"),l=t("9SZg"),s=t("Y3g6"),c=function(n,e){this.stopped=n,this.result=e},p=n.exports=function(n,e,t,p,u){var d,m,f,h,x,g,y,C=i(e,t,p?2:1);if(u)d=n;else{if(m=l(n),"function"!=typeof m)throw TypeError("Target is not iterable");if(a(m)){for(f=0,h=o(n.length);h>f;f++)if(x=p?C(r(y=n[f])[0],y[1]):C(n[f]),x&&x instanceof c)return x;return new c(!1)}d=m.call(n)}g=d.next;while(!(y=g.call(d)).done)if(x=s(d,C,y.value,p),"object"==typeof x&&x&&x instanceof c)return x;return new c(!1)};p.stop=function(n){return new c(!0,n)}},"J+Da":function(n,e,t){var r=t("m0kY"),a=t("oa35");n.exports=function(n){if(void 0===n)return 0;var e=r(n),t=a(e);if(e!==t)throw RangeError("Wrong length or index");return t}},J3Yn:function(n,e,t){var r=t("pb5k"),a=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(n){return a.call(n)}),n.exports=r.inspectSource},J428:function(n,e,t){var r=t("MMxC"),a=t("CdV7").values;r({target:"Object",stat:!0},{values:function(n){return a(n)}})},J5tk:function(n,e,t){},JI6M:function(n,e,t){"use strict";var r=t("MMxC"),a=t("mTKU").trim,o=t("HKQd");r({target:"String",proto:!0,forced:o("trim")},{trim:function(){return a(this)}})},JS3A:function(n,e,t){var r=t("tSXo");n.exports=function(n){if(!r(n)&&null!==n)throw TypeError("Can't set "+String(n)+" as a prototype");return n}},JXee:function(n,e,t){var r=t("MMxC"),a=t("YMoz"),o=t("jdp+");r({target:"Math",stat:!0},{fscale:function(n,e,t,r,i){return o(a(n,e,t,r,i))}})},JXem:function(n,e,t){"use strict";var r,a,o,i=t("Acmb"),l=t("lz10"),s=t("jtLI"),c=t("2kyd"),p=t("Zcjx"),u=c("iterator"),d=!1,m=function(){return this};[].keys&&(o=[].keys(),"next"in o?(a=i(i(o)),a!==Object.prototype&&(r=a)):d=!0),void 0==r&&(r={}),p||s(r,u)||l(r,u,m),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:d}},"Ju5/":function(n,e,t){"use strict";var r=t("XqMk"),a="object"==typeof self&&self&&self.Object===Object&&self,o=r["a"]||a||Function("return this")();e["a"]=o},"K+nK":function(n,e){function t(n){return n&&n.__esModule?n:{default:n}}n.exports=t},K8hH:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("tIdH")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"steps"},o.a.createElement("a",{"aria-hidden":"true",href:"#steps"},o.a.createElement("span",{className:"icon icon-link"})),"Steps"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Steps } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nexport default () => {\n  return (\n    <Frame padding>\n      <Block noTitlePadding title=\"Basic\">\n        <Steps\n          current={1}\n          steps={[\n            {\n              title: '\u5ba2\u6237\u4e0b\u5355',\n            },\n            {\n              title: '\u5546\u57ce\u53d1\u8d27',\n            },\n            {\n              title: '\u4e70\u5bb6\u786e\u8ba4',\n            },\n          ]}\n        />\n      </Block>\n      <Block noTitlePadding title=\"Status\">\n        <Steps\n          current={1}\n          status={'error'}\n          steps={[\n            {\n              title: '\u5ba2\u6237\u4e0b\u5355',\n            },\n            {\n              title: '\u5546\u57ce\u53d1\u8d27',\n              errorTitle: '\u53d1\u8d27\u5931\u8d25',\n            },\n            {\n              title: '\u4e70\u5bb6\u786e\u8ba4',\n            },\n          ]}\n        />\n      </Block>\n      <Block noTitlePadding title=\"Direction\">\n        <View\n          style={{\n            padding: '60px 50px',\n          }}\n        >\n          <Steps\n            direction=\"vertical\"\n            steps={[\n              {\n                title: '\u62a5\u4ef7\u6210\u529f',\n              },\n              {\n                title: '\u8be2\u4ef7\u4e2d',\n              },\n              {\n                title: '\u5f85\u5904\u7406',\n              },\n            ]}\n          />\n        </View>\n      </Block>\n      <Block noTitlePadding title=\"Description & Extra\">\n        <View\n          style={{\n            padding: '60px 50px',\n          }}\n        >\n          <Steps\n            direction=\"vertical\"\n            steps={[\n              {\n                title: '\u62a5\u4ef7\u6210\u529f',\n                description: '\u5ba2\u6237\u5df2\u63a5\u53d7\u62a5\u4ef7',\n                extra: '2020-5-1',\n              },\n              {\n                title: '\u8be2\u4ef7\u4e2d',\n                description: '\u9500\u552e\u4ee5\u5411\u91c7\u8d2d\u63d0\u4ea4\u8be2\u4ef7\u8bf7\u6c42',\n                extra: '2020-4-27',\n              },\n              {\n                title: '\u5f85\u5904\u7406',\n                description: '\u5ba2\u6237\u5df2\u4e0b\u5355\uff0c\u8ba2\u5355\u7b49\u5f85\u9500\u552e\u5904\u7406',\n                extra: '2020-4-23',\n              },\n            ]}\n          />\n        </View>\n      </Block>\n    </Frame>\n  );\n};\n",jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Steps } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nexport default () =>\n  /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      padding: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(Steps, {\n        current: 1,\n        steps: [\n          {\n            title: '\u5ba2\u6237\u4e0b\u5355',\n          },\n          {\n            title: '\u5546\u57ce\u53d1\u8d27',\n          },\n          {\n            title: '\u4e70\u5bb6\u786e\u8ba4',\n          },\n        ],\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Status',\n      },\n      /* #__PURE__ */ React.createElement(Steps, {\n        current: 1,\n        status: 'error',\n        steps: [\n          {\n            title: '\u5ba2\u6237\u4e0b\u5355',\n          },\n          {\n            title: '\u5546\u57ce\u53d1\u8d27',\n            errorTitle: '\u53d1\u8d27\u5931\u8d25',\n          },\n          {\n            title: '\u4e70\u5bb6\u786e\u8ba4',\n          },\n        ],\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Direction',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          style: {\n            padding: '60px 50px',\n          },\n        },\n        /* #__PURE__ */ React.createElement(Steps, {\n          direction: 'vertical',\n          steps: [\n            {\n              title: '\u62a5\u4ef7\u6210\u529f',\n            },\n            {\n              title: '\u8be2\u4ef7\u4e2d',\n            },\n            {\n              title: '\u5f85\u5904\u7406',\n            },\n          ],\n        }),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Description & Extra',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          style: {\n            padding: '60px 50px',\n          },\n        },\n        /* #__PURE__ */ React.createElement(Steps, {\n          direction: 'vertical',\n          steps: [\n            {\n              title: '\u62a5\u4ef7\u6210\u529f',\n              description: '\u5ba2\u6237\u5df2\u63a5\u53d7\u62a5\u4ef7',\n              extra: '2020-5-1',\n            },\n            {\n              title: '\u8be2\u4ef7\u4e2d',\n              description: '\u9500\u552e\u4ee5\u5411\u91c7\u8d2d\u63d0\u4ea4\u8be2\u4ef7\u8bf7\u6c42',\n              extra: '2020-4-27',\n            },\n            {\n              title: '\u5f85\u5904\u7406',\n              description: '\u5ba2\u6237\u5df2\u4e0b\u5355\uff0c\u8ba2\u5355\u7b49\u5f85\u9500\u552e\u5904\u7406',\n              extra: '2020-4-23',\n            },\n          ],\n        }),\n      ),\n    ),\n  );\n"}},{path:"/_demos/index-1",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"steps-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#steps-1"},o.a.createElement("span",{className:"icon icon-link"})),"Steps"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"current"),o.a.createElement("td",null,"\u6307\u5b9a\u5f53\u524d\u6b65\u9aa4\uff0c\u4ece 0 \u5f00\u59cb\u8bb0\u6570"),o.a.createElement("td",null,"number"),o.a.createElement("td",null,o.a.createElement("code",null,"0"))),o.a.createElement("tr",null,o.a.createElement("td",null,"status"),o.a.createElement("td",null,"\u6307\u5b9a\u5f53\u524d\u6b65\u9aa4\u7684\u72b6\u6001\u3002 \u53ef\u9009\u5931\u8d25 ",o.a.createElement("code",null,"error")),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"direction"),o.a.createElement("td",null,"\u6307\u5b9a\u6b65\u9aa4\u6761\u65b9\u5411\u3002\u53ef\u9009\u6c34\u5e73 ",o.a.createElement("code",null,"horizontal")," \u548c\u7ad6\u76f4 ",o.a.createElement("code",null,"vertical")," \u4e24\u79cd\u65b9\u5411"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,o.a.createElement("code",null,"horizontal"))),o.a.createElement("tr",null,o.a.createElement("td",null,"steps"),o.a.createElement("td",null,"\u6b65\u9aa4\u6570\u636e"),o.a.createElement("td",null,"StepProps[]"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"stepprops"},o.a.createElement("a",{"aria-hidden":"true",href:"#stepprops"},o.a.createElement("span",{className:"icon icon-link"})),"StepProps"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"title"),o.a.createElement("td",null,"\u6807\u9898"),o.a.createElement("td",null,o.a.createElement("code",null,"string"),"|",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"errorTitle"),o.a.createElement("td",null,"\u5931\u8d25\u72b6\u6001\u4e0b\u7684\u6807\u9898"),o.a.createElement("td",null,o.a.createElement("code",null,"string"),"|",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"extra"),o.a.createElement("td",null,"\u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df"),o.a.createElement("td",null,o.a.createElement("code",null,"string"),"|",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"description"),o.a.createElement("td",null,"\u6b65\u9aa4\u7684\u8be6\u60c5\u63cf\u8ff0"),o.a.createElement("td",null,o.a.createElement("code",null,"string"),"|",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-"))))))}},KAxK:function(n,e,t){"use strict";var r=t("MMxC"),a=t("IuhT"),o=t("cT1L");r({target:"Map",stat:!0},{keyBy:function(n,e){var t=new this;o(e);var r=o(t.set);return a(n,(function(n){r.call(t,e(n),n)})),t}})},KC71:function(n,e,t){},KCaj:function(n,e,t){},KHCi:function(n,e,t){var r=t("MMxC"),a=Math.min,o=Math.max;r({target:"Math",stat:!0},{clamp:function(n,e,t){return a(t,o(e,n))}})},KUpu:function(n,e,t){var r=t("I65O");r("hasInstance")},KvPC:function(n,e,t){"use strict";var r=t("eYKs").charAt,a=t("1aI8"),o=t("uMwj"),i="String Iterator",l=a.set,s=a.getterFor(i);o(String,"String",(function(n){l(this,{type:i,string:String(n),index:0})}),(function(){var n,e=s(this),t=e.string,a=e.index;return a>=t.length?{value:void 0,done:!0}:(n=r(t,a),e.index+=n.length,{value:n,done:!1})}))},L3Qv:function(n,e,t){"use strict";function r(){return!1}e["a"]=r},L5O0:function(n,e,t){var r=t("MMxC"),a=t("qA1w");r({target:"WeakSet",stat:!0},{of:a})},LJ80:function(n,e,t){var r=t("jtLI"),a=t("cC5k"),o=t("g8rt"),i=t("YfKC");n.exports=function(n,e){for(var t=a(e),l=i.f,s=o.f,c=0;c<t.length;c++){var p=t[c];r(n,p)||l(n,p,s(e,p))}}},LQzi:function(n,e,t){n.exports={app:"app___3-C98",extra:"extra___3iKa4",row:"row___3Garu"}},LUyE:function(n,e,t){"use strict";var r=t("cT1L"),a=function(n){var e,t;this.promise=new n((function(n,r){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=r})),this.resolve=r(e),this.reject=r(t)};n.exports.f=function(n){return new a(n)}},LtsZ:function(n,e,t){"use strict";t.r(e),t.d(e,"ApplyPluginsType",(function(){return s})),t.d(e,"Plugin",(function(){return $})),t.d(e,"dynamic",(function(){return q}));var r=t("WmNS"),a=t.n(r),o=t("55Ip");t.d(e,"Link",(function(){return o["Link"]}));var i=t("Ty5D");t.d(e,"MemoryRouter",(function(){return i["a"]})),t.d(e,"NavLink",(function(){return o["NavLink"]})),t.d(e,"Prompt",(function(){return i["b"]})),t.d(e,"Redirect",(function(){return i["c"]})),t.d(e,"Route",(function(){return i["d"]})),t.d(e,"Router",(function(){return i["e"]})),t.d(e,"Switch",(function(){return i["g"]})),t.d(e,"matchPath",(function(){return i["j"]})),t.d(e,"useHistory",(function(){return i["k"]})),t.d(e,"useLocation",(function(){return i["l"]})),t.d(e,"useParams",(function(){return i["m"]})),t.d(e,"useRouteMatch",(function(){return i["n"]})),t.d(e,"withRouter",(function(){return i["o"]})),t.d(e,"__RouterContext",(function(){return i["h"]}));var l=t("YS25");t.d(e,"createBrowserHistory",(function(){return l["a"]})),t.d(e,"createHashHistory",(function(){return l["b"]})),t.d(e,"createMemoryHistory",(function(){return l["d"]}));var s,c=t("q1tI"),p=t.n(c),u=t("8L3h");function d(n){return d="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},d(n)}function m(n,e,t,r,a,o,i){try{var l=n[o](i),s=l.value}catch(c){return void t(c)}l.done?e(s):Promise.resolve(s).then(r,a)}function f(n){return function(){var e=this,t=arguments;return new Promise((function(r,a){var o=n.apply(e,t);function i(n){m(o,r,a,i,l,"next",n)}function l(n){m(o,r,a,i,l,"throw",n)}i(void 0)}))}}function h(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function x(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function g(n,e,t){return e&&x(n.prototype,e),t&&x(n,t),n}function y(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function C(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function w(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?C(Object(t),!0).forEach((function(e){y(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):C(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function v(n){return b(n)||k(n)||V(n)||N()}function b(n){if(Array.isArray(n))return n}function k(n){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}function V(n,e){if(n){if("string"===typeof n)return P(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?P(n,e):void 0}}function P(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function N(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function R(n){if("undefined"===typeof Symbol||null==n[Symbol.iterator]){if(Array.isArray(n)||(n=V(n))){var e=0,t=function(){};return{s:t,n:function(){return e>=n.length?{done:!0}:{done:!1,value:n[e++]}},e:function(n){throw n},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,a,o=!0,i=!1;return{s:function(){r=n[Symbol.iterator]()},n:function(){var n=r.next();return o=n.done,n},e:function(n){i=!0,a=n},f:function(){try{o||null==r["return"]||r["return"]()}finally{if(i)throw a}}}}function S(n,e){if(!n)throw new Error(e)}function T(n){var e=n.fns,t=n.args;if(1===e.length)return e[0];var r=e.pop();return e.reduce((function(n,e){return function(){return e(n,t)}}),r)}function E(n){return!!n&&"object"===d(n)&&"function"===typeof n.then}(function(n){n["compose"]="compose",n["modify"]="modify",n["event"]="event"})(s||(s={}));var $=function(){function n(e){h(this,n),this.hooks={},this.validKeys=(null===e||void 0===e?void 0:e.validKeys)||[]}return g(n,[{key:"register",value:function(n){var e=this;S(!!n.apply,"register failed, plugin.apply must supplied"),S(!!n.path,"register failed, plugin.path must supplied"),Object.keys(n.apply).forEach((function(t){S(e.validKeys.indexOf(t)>-1,"register failed, invalid key ".concat(t," from plugin ").concat(n.path,".")),e.hooks[t]||(e.hooks[t]=[]),e.hooks[t]=e.hooks[t].concat(n.apply[t])}))}},{key:"getHooks",value:function(n){var e=n.split("."),t=v(e),r=t[0],a=t.slice(1),o=this.hooks[r];return a.length&&(o=o.map((function(n){try{var e,t=n,r=R(a);try{for(r.s();!(e=r.n()).done;){var o=e.value;t=t[o]}}catch(i){r.e(i)}finally{r.f()}return t}catch(l){return null}})).filter(Boolean)),o}},{key:"applyPlugins",value:function(n){var e=n.key,t=n.type,r=n.initialValue,o=n.args,i=n.async,l=this.getHooks(e)||[];switch(o&&S("object"===d(o),"applyPlugins failed, args must be plain object."),t){case s.modify:return i?l.reduce(function(){var n=f(a.a.mark((function n(t,r){var i;return a.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(S("function"===typeof r||"object"===d(r)||E(r),"applyPlugins failed, all hooks for key ".concat(e," must be function, plain object or Promise.")),!E(t)){n.next=5;break}return n.next=4,t;case 4:t=n.sent;case 5:if("function"!==typeof r){n.next=16;break}if(i=r(t,o),!E(i)){n.next=13;break}return n.next=10,i;case 10:return n.abrupt("return",n.sent);case 13:return n.abrupt("return",i);case 14:n.next=21;break;case 16:if(!E(r)){n.next=20;break}return n.next=19,r;case 19:r=n.sent;case 20:return n.abrupt("return",w({},t,{},r));case 21:case"end":return n.stop()}}),n)})));return function(e,t){return n.apply(this,arguments)}}(),E(r)?r:Promise.resolve(r)):l.reduce((function(n,t){return S("function"===typeof t||"object"===d(t),"applyPlugins failed, all hooks for key ".concat(e," must be function or plain object.")),"function"===typeof t?t(n,o):w({},n,{},t)}),r);case s.event:return l.forEach((function(n){S("function"===typeof n,"applyPlugins failed, all hooks for key ".concat(e," must be function.")),n(o)}));case s.compose:return function(){return T({fns:l.concat(r),args:o})()}}}}]),n}(),I=Object(c["createContext"])(null),_=[],F=[],O=!1;function A(n){var e=n(),t={loading:!0,loaded:null,error:null};return t.promise=e.then((function(n){return t.loading=!1,t.loaded=n,n}))["catch"]((function(n){throw t.loading=!1,t.error=n,n})),t}function M(n){var e={loading:!1,loaded:{},error:null},t=[];try{Object.keys(n).forEach((function(r){var a=A(n[r]);a.loading?e.loading=!0:(e.loaded[r]=a.loaded,e.error=a.error),t.push(a.promise),a.promise.then((function(n){e.loaded[r]=n}))["catch"]((function(n){e.error=n}))}))}catch(r){e.error=r}return e.promise=Promise.all(t).then((function(n){return e.loading=!1,n}))["catch"]((function(n){throw e.loading=!1,n})),e}function z(n){return n&&n.__esModule?n["default"]:n}function j(n,e){return p.a.createElement(z(n),e)}function B(n,e){var t=Object.assign({loader:null,loading:null,delay:200,timeout:null,render:j,webpack:null,modules:null},e),r=null;function a(){if(!r){var e=new D(n,t);r={getCurrentValue:e.getCurrentValue.bind(e),subscribe:e.subscribe.bind(e),retry:e.retry.bind(e),promise:e.promise.bind(e)}}return r.promise()}if("undefined"===typeof window&&_.push(a),!O&&"undefined"!==typeof window&&"function"===typeof t.webpack){var o=t.webpack();F.push((function(n){var e,t=R(o);try{for(t.s();!(e=t.n()).done;){var r=e.value;if(-1!==n.indexOf(r))return a()}}catch(i){t.e(i)}finally{t.f()}}))}var i=function(n,e){a();var o=p.a.useContext(I),i=Object(u["useSubscription"])(r);return p.a.useImperativeHandle(e,(function(){return{retry:r.retry}})),o&&Array.isArray(t.modules)&&t.modules.forEach((function(n){o(n)})),i.loading||i.error?p.a.createElement(t.loading,{isLoading:i.loading,pastDelay:i.pastDelay,timedOut:i.timedOut,error:i.error,retry:r.retry}):i.loaded?t.render(i.loaded,n):null};return i.preload=function(){return a()},i.displayName="LoadableComponent",p.a.forwardRef(i)}var D=function(){function n(e,t){h(this,n),this._loadFn=e,this._opts=t,this._callbacks=new Set,this._delay=null,this._timeout=null,this.retry()}return g(n,[{key:"promise",value:function(){return this._res.promise}},{key:"retry",value:function(){var n=this;this._clearTimeouts(),this._res=this._loadFn(this._opts.loader),this._state={pastDelay:!1,timedOut:!1};var e=this._res,t=this._opts;e.loading&&("number"===typeof t.delay&&(0===t.delay?this._state.pastDelay=!0:this._delay=setTimeout((function(){n._update({pastDelay:!0})}),t.delay)),"number"===typeof t.timeout&&(this._timeout=setTimeout((function(){n._update({timedOut:!0})}),t.timeout))),this._res.promise.then((function(){n._update(),n._clearTimeouts()}))["catch"]((function(e){n._update(),n._clearTimeouts()})),this._update({})}},{key:"_update",value:function(n){this._state=w({},this._state,{},n),this._callbacks.forEach((function(n){return n()}))}},{key:"_clearTimeouts",value:function(){clearTimeout(this._delay),clearTimeout(this._timeout)}},{key:"getCurrentValue",value:function(){return w({},this._state,{error:this._res.error,loaded:this._res.loaded,loading:this._res.loading})}},{key:"subscribe",value:function(n){var e=this;return this._callbacks.add(n),function(){e._callbacks["delete"](n)}}}]),n}();function L(n){return B(A,n)}function U(n){if("function"!==typeof n.render)throw new Error("LoadableMap requires a `render(loaded, props)` function");return B(M,n)}function K(n,e){var t=[];while(n.length){var r=n.pop();t.push(r(e))}return Promise.all(t).then((function(){if(n.length)return K(n,e)}))}function q(n){var e=L,t={loading:function(n){n.error,n.isLoading;return Object(c["createElement"])("p",null,"loading...")}};if("function"===typeof n)t.loader=n;else{if("object"!==d(n))throw new Error("Unexpect arguments ".concat(n));t=w({},t,{},n)}return e(t)}L.Map=U,L.preloadAll=function(){return new Promise((function(n,e){K(_).then(n,e)}))},L.preloadReady=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return new Promise((function(e){var t=function(){return O=!0,e()};K(F,n).then(t,t)}))},"undefined"!==typeof window&&(window.__NEXT_PRELOADREADY=L.preloadReady)},M8HR:function(n,e,t){"use strict";var r=t("MVys");function a(n,e){return RegExp(n,e)}e.UNSUPPORTED_Y=r((function(){var n=a("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),e.BROKEN_CARET=r((function(){var n=a("^r","gy");return n.lastIndex=2,null!=n.exec("str")}))},MIOZ:function(n,e){function t(n,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done);r=!0)if(t.push(i.value),e&&t.length===e)break}catch(s){a=!0,o=s}finally{try{r||null==l["return"]||l["return"]()}finally{if(a)throw o}}return t}}n.exports=t},MMxC:function(n,e,t){var r=t("ukPv"),a=t("g8rt").f,o=t("lz10"),i=t("NMFW"),l=t("TMUv"),s=t("LJ80"),c=t("kkxG");n.exports=function(n,e){var t,p,u,d,m,f,h=n.target,x=n.global,g=n.stat;if(p=x?r:g?r[h]||l(h,{}):(r[h]||{}).prototype,p)for(u in e){if(m=e[u],n.noTargetGet?(f=a(p,u),d=f&&f.value):d=p[u],t=c(x?u:h+(g?".":"#")+u,n.forced),!t&&void 0!==d){if(typeof m===typeof d)continue;s(m,d)}(n.sham||d&&d.sham)&&o(m,"sham",!0),i(p,u,m,n)}}},MVys:function(n,e){n.exports=function(n){try{return!!n()}catch(e){return!0}}},MgzW:function(n,e,t){"use strict";var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function i(n){if(null===n||void 0===n)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(n)}function l(){try{if(!Object.assign)return!1;var n=new String("abc");if(n[5]="de","5"===Object.getOwnPropertyNames(n)[0])return!1;for(var e={},t=0;t<10;t++)e["_"+String.fromCharCode(t)]=t;var r=Object.getOwnPropertyNames(e).map((function(n){return e[n]}));if("0123456789"!==r.join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(n){a[n]=n})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(o){return!1}}n.exports=l()?Object.assign:function(n,e){for(var t,l,s=i(n),c=1;c<arguments.length;c++){for(var p in t=Object(arguments[c]),t)a.call(t,p)&&(s[p]=t[p]);if(r){l=r(t);for(var u=0;u<l.length;u++)o.call(t,l[u])&&(s[l[u]]=t[l[u]])}}return s}},Mi8B:function(n,e,t){"use strict";var r=t("MMxC"),a=t("ukPv"),o=t("tny8"),i=t("8OQV"),l=t("FVwB"),s=t("ZSlt"),c=t("igoe"),p=t("HhvW"),u=t("lz10"),d=t("oa35"),m=t("J+Da"),f=t("nCqj"),h=t("gFfw"),x=t("jtLI"),g=t("Ei+o"),y=t("tSXo"),C=t("u+7+"),w=t("g1ZG"),v=t("uGHk").f,b=t("Sn4z"),k=t("zv1X").forEach,V=t("ssJt"),P=t("YfKC"),N=t("g8rt"),R=t("1aI8"),S=t("+vfm"),T=R.get,E=R.set,$=P.f,I=N.f,_=Math.round,F=a.RangeError,O=s.ArrayBuffer,A=s.DataView,M=l.NATIVE_ARRAY_BUFFER_VIEWS,z=l.TYPED_ARRAY_TAG,j=l.TypedArray,B=l.TypedArrayPrototype,D=l.aTypedArrayConstructor,L=l.isTypedArray,U="BYTES_PER_ELEMENT",K="Wrong length",q=function(n,e){var t=0,r=e.length,a=new(D(n))(r);while(r>t)a[t]=e[t++];return a},W=function(n,e){$(n,e,{get:function(){return T(this)[e]}})},H=function(n){var e;return n instanceof O||"ArrayBuffer"==(e=g(n))||"SharedArrayBuffer"==e},G=function(n,e){return L(n)&&"symbol"!=typeof e&&e in n&&String(+e)==String(e)},X=function(n,e){return G(n,e=h(e,!0))?p(2,n[e]):I(n,e)},Y=function(n,e,t){return!(G(n,e=h(e,!0))&&y(t)&&x(t,"value"))||x(t,"get")||x(t,"set")||t.configurable||x(t,"writable")&&!t.writable||x(t,"enumerable")&&!t.enumerable?$(n,e,t):(n[e]=t.value,n)};o?(M||(N.f=X,P.f=Y,W(B,"buffer"),W(B,"byteOffset"),W(B,"byteLength"),W(B,"length")),r({target:"Object",stat:!0,forced:!M},{getOwnPropertyDescriptor:X,defineProperty:Y}),n.exports=function(n,e,t){var o=n.match(/\d+$/)[0]/8,l=n+(t?"Clamped":"")+"Array",s="get"+n,p="set"+n,h=a[l],x=h,g=x&&x.prototype,P={},N=function(n,e){var t=T(n);return t.view[s](e*o+t.byteOffset,!0)},R=function(n,e,r){var a=T(n);t&&(r=(r=_(r))<0?0:r>255?255:255&r),a.view[p](e*o+a.byteOffset,r,!0)},I=function(n,e){$(n,e,{get:function(){return N(this,e)},set:function(n){return R(this,e,n)},enumerable:!0})};M?i&&(x=e((function(n,e,t,r){return c(n,x,l),S(function(){return y(e)?H(e)?void 0!==r?new h(e,f(t,o),r):void 0!==t?new h(e,f(t,o)):new h(e):L(e)?q(x,e):b.call(x,e):new h(m(e))}(),n,x)})),w&&w(x,j),k(v(h),(function(n){n in x||u(x,n,h[n])})),x.prototype=g):(x=e((function(n,e,t,r){c(n,x,l);var a,i,s,p=0,u=0;if(y(e)){if(!H(e))return L(e)?q(x,e):b.call(x,e);a=e,u=f(t,o);var h=e.byteLength;if(void 0===r){if(h%o)throw F(K);if(i=h-u,i<0)throw F(K)}else if(i=d(r)*o,i+u>h)throw F(K);s=i/o}else s=m(e),i=s*o,a=new O(i);E(n,{buffer:a,byteOffset:u,byteLength:i,length:s,view:new A(a)});while(p<s)I(n,p++)})),w&&w(x,j),g=x.prototype=C(B)),g.constructor!==x&&u(g,"constructor",x),z&&u(g,z,l),P[l]=x,r({global:!0,forced:x!=h,sham:!M},P),U in x||u(x,U,o),U in g||u(g,U,o),V(l)}):n.exports=function(){}},Mn2j:function(n,e,t){var r=t("Mi8B");r("Int8",(function(n){return function(e,t,r){return n(this,e,t,r)}}))},Mz97:function(n,e,t){},N14H:function(n,e,t){},N6At:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var r=a(t("mZso"));function a(n){return n&&n.__esModule?n:{default:n}}var o=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:window.location,a=t.search,o=[];return(0,r["default"])(t)?(o.push("?anchor=".concat(e)),a&&o.push("&".concat(a.replace("?",""))),o.join("")):"".concat(n).concat(a,"#").concat(e)},i=o;e["default"]=i},NF3c:function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t.n(a),i=t("YCKM"),l=t("f4X2"),s=t("IOv4"),c=t("0cmj"),p=t.n(c),u={paddingBottom:"0.94rem"};e["default"]=()=>{var n=Object(a["useState"])(!0),e=Object(r["a"])(n,2),t=(e[0],e[1],Object(a["useState"])("0")),c=Object(r["a"])(t,2),d=c[0],m=c[1],f=Object(a["useState"])("0"),h=Object(r["a"])(f,2),x=h[0],g=h[1];return o.a.createElement(s["b"],{padding:!0},o.a.createElement(s["a"],{title:"Basic",noTitlePadding:!0},o.a.createElement(i["d"],{className:p.a.container},o.a.createElement(l["f"],{checked:!0},"Checkbox"))),o.a.createElement(s["a"],{title:"Group",noTitlePadding:!0},o.a.createElement(l["f"].Group,{value:x,onChange:(n,e)=>g(e)},o.a.createElement(l["f"],{value:"0"},"\u65f6\u6548\u95ee\u9898"),o.a.createElement(l["f"],{value:"1"},"\u4ef7\u683c\u95ee\u9898"),o.a.createElement(l["f"],{value:"2"},"\u5176\u4ed6"))),o.a.createElement(s["a"],{title:"Direction & Extra",noTitlePadding:!0},o.a.createElement(i["d"],{className:p.a.container},o.a.createElement(l["f"].Group,{direction:"column",value:d,onChange:(n,e)=>m(e)},o.a.createElement(l["f"],{value:"0",style:u},"\u65f6\u6548\u95ee\u9898"),o.a.createElement(l["f"],{value:"1",style:u},"\u4ef7\u683c\u95ee\u9898"),o.a.createElement(l["f"],{value:"2",extra:o.a.createElement(l["w"],{className:p.a.remarks,placeholder:"\u82e5\u4e3a\u5176\u4ed6\uff0c\u8bf7\u586b\u5199\u5907\u6ce8\uff08\u6ce8\uff1a\u6b64\u5904\u4e3aextra\uff09",value:"",showCount:!1})},"\u5176\u4ed6")))))}},NKr8:function(n,e,t){"use strict";function r(n){return r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}Object.defineProperty(e,"__esModule",{value:!0}),e.scrollToSlug=u,e["default"]=void 0;var a=p(t("q1tI")),o=t("ArA+"),i=s(t("+t3K"));t("Uuu5");var l=s(t("N6At"));function s(n){return n&&n.__esModule?n:{default:n}}function c(){if("function"!==typeof WeakMap)return null;var n=new WeakMap;return c=function(){return n},n}function p(n){if(n&&n.__esModule)return n;if(null===n||"object"!==r(n)&&"function"!==typeof n)return{default:n};var e=c();if(e&&e.has(n))return e.get(n);var t={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in n)if(Object.prototype.hasOwnProperty.call(n,o)){var i=a?Object.getOwnPropertyDescriptor(n,o):null;i&&(i.get||i.set)?Object.defineProperty(t,o,i):t[o]=n[o]}return t["default"]=n,e&&e.set(n,t),t}function u(n){var e=document.getElementById(n);return e&&(document.documentElement.scrollTop=e.offsetTop-100),Boolean(e)}var d=function(n){var e=n.className,t=n.slugs,r=n.base,s=n.location,c=(0,a.useContext)(i["default"]),p=c.slug,d=(0,a.useRef)(null);function m(n,e){var t,r;u(e)&&(null===(t=d.current)||void 0===t||null===(r=t.offsetParent)||void 0===r?void 0:r.scrollTop)<n.target.offsetTop&&(d.current.offsetParent.scrollTop=n.target.offsetTop)}return a["default"].createElement("ul",{className:e,role:"slug-list",ref:d},t.filter((function(n){var e=n.depth;return e>1&&e<4})).map((function(n){return a["default"].createElement("li",{key:n.heading,title:n.value,"data-depth":n.depth,className:p===n.heading?"active":"",onClick:function(e){return m(e,n.heading)}},a["default"].createElement(o.Link,{to:(0,l["default"])(r,n.heading,s)},a["default"].createElement("span",null,n.value)))})))},m=d;e["default"]=m},NMFW:function(n,e,t){var r=t("ukPv"),a=t("lz10"),o=t("jtLI"),i=t("TMUv"),l=t("J3Yn"),s=t("1aI8"),c=s.get,p=s.enforce,u=String(String).split("String");(n.exports=function(n,e,t,l){var s=!!l&&!!l.unsafe,c=!!l&&!!l.enumerable,d=!!l&&!!l.noTargetGet;"function"==typeof t&&("string"!=typeof e||o(t,"name")||a(t,"name",e),p(t).source=u.join("string"==typeof e?e:"")),n!==r?(s?!d&&n[e]&&(c=!0):delete n[e],c?n[e]=t:a(n,e,t)):c?n[e]=t:i(e,t)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||l(this)}))},NMu4:function(n,e,t){"use strict";var r=t("MMxC");r({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return URL.prototype.toString.call(this)}})},"NQz/":function(n,e,t){"use strict";var r=t("FVwB").exportTypedArrayMethod,a=t("MVys"),o=t("ukPv"),i=o.Uint8Array,l=i&&i.prototype||{},s=[].toString,c=[].join;a((function(){s.call({})}))&&(s=function(){return c.call(this)});var p=l.toString!=s;r("toString",s,p)},NSAu:function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t("f4X2"),i=t("IOv4"),l=o["v"].CheckableTag;e["default"]=()=>{var n=a["useState"](!1),e=Object(r["a"])(n,2),t=e[0],s=e[1],c=a["useState"](!1),p=Object(r["a"])(c,2),u=p[0],d=p[1];return a["createElement"](i["b"],{padding:!0},a["createElement"](i["a"],{noTitlePadding:!0,title:"Basic"},a["createElement"](o["v"],null,"Anna")),a["createElement"](i["a"],{noTitlePadding:!0,title:"Type"},a["createElement"](o["v"],{type:"success"},"success"),a["createElement"](o["v"],{type:"info"},"info"),a["createElement"](o["v"],{type:"error"},"error")),a["createElement"](i["a"],{noTitlePadding:!0,title:"Size"},a["createElement"](o["v"],{size:"large"},"large"),a["createElement"](o["v"],null,"default"),a["createElement"](o["v"],{size:"small"},"small")),a["createElement"](i["a"],{noTitlePadding:!0,title:"Checkable"},a["createElement"](l,{checked:t,onChange:n=>s(n)},"\u5927\u4f17\u4f18\u9009"),a["createElement"](l,{checked:u,onChange:n=>d(n)},"\u70b9\u8bc4\u9ad8\u5206")))}},NYJX:function(n,e,t){"use strict";var r=t("MMxC"),a=t("zv1X").filter,o=t("jMDO"),i=t("kGMc"),l=o("filter"),s=i("filter");r({target:"Array",proto:!0,forced:!l||!s},{filter:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},NcLc:function(n,e,t){"use strict";var r=t("k/J9"),a=t("M8HR"),o=RegExp.prototype.exec,i=String.prototype.replace,l=o,s=function(){var n=/a/,e=/b*/g;return o.call(n,"a"),o.call(e,"a"),0!==n.lastIndex||0!==e.lastIndex}(),c=a.UNSUPPORTED_Y||a.BROKEN_CARET,p=void 0!==/()??/.exec("")[1],u=s||p||c;u&&(l=function(n){var e,t,a,l,u=this,d=c&&u.sticky,m=r.call(u),f=u.source,h=0,x=n;return d&&(m=m.replace("y",""),-1===m.indexOf("g")&&(m+="g"),x=String(n).slice(u.lastIndex),u.lastIndex>0&&(!u.multiline||u.multiline&&"\n"!==n[u.lastIndex-1])&&(f="(?: "+f+")",x=" "+x,h++),t=new RegExp("^(?:"+f+")",m)),p&&(t=new RegExp("^"+f+"$(?!\\s)",m)),s&&(e=u.lastIndex),a=o.call(d?t:u,x),d?a?(a.input=a.input.slice(h),a[0]=a[0].slice(h),a.index=u.lastIndex,u.lastIndex+=a[0].length):u.lastIndex=0:s&&a&&(u.lastIndex=u.global?a.index+a[0].length:e),p&&a&&a.length>1&&i.call(a[0],t,(function(){for(l=1;l<arguments.length-2;l++)void 0===arguments[l]&&(a[l]=void 0)})),a}),n.exports=l},O6Fj:function(n,e,t){"use strict";e.__esModule=!0;var r=t("CNgt");e["default"]=r.TextareaAutosize},O8zu:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t("f4X2"),o=t("IOv4");e["default"]=()=>r["createElement"](o["b"],{grayBg:!0},r["createElement"](o["a"],{title:"Basic"},r["createElement"](a["e"],{label:"Cell",border:!1},"content")),r["createElement"](o["a"],{title:"With Icon"},r["createElement"](a["e"],{label:"Music",icon:"musicfill",border:!1},"content")),r["createElement"](o["a"],{title:"With Required"},r["createElement"](a["e"],{label:"Cell",required:!0,border:!1},"content")),r["createElement"](o["a"],{title:"With Arrow"},r["createElement"](a["e"],{label:"Cell",arrow:!0,border:!1},"content")),r["createElement"](o["a"],{title:"With Border"},r["createElement"](a["e"],{label:"Cell"},"content"),r["createElement"](a["e"],{label:"Cell",border:!1},"content")),r["createElement"](o["a"],{title:"With Description"},r["createElement"](a["e"],{label:"Cell",border:!1,description:"Here is the description"},"content")))},O9az:function(n,e,t){var r=t("MMxC"),a=t("f1E4"),o=t("tSXo"),i=t("jtLI"),l=t("MVys"),s=t("YfKC"),c=t("g8rt"),p=t("Acmb"),u=t("HhvW");function d(n,e,t){var r,l,m=arguments.length<4?n:arguments[3],f=c.f(a(n),e);if(!f){if(o(l=p(n)))return d(l,e,t,m);f=u(0)}if(i(f,"value")){if(!1===f.writable||!o(m))return!1;if(r=c.f(m,e)){if(r.get||r.set||!1===r.writable)return!1;r.value=t,s.f(m,e,r)}else s.f(m,e,u(0,t));return!0}return void 0!==f.set&&(f.set.call(m,t),!0)}var m=l((function(){var n=s.f({},"a",{configurable:!0});return!1!==Reflect.set(p(n),"a",1,n)}));r({target:"Reflect",stat:!0,forced:m},{set:d})},OAmA:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("Z+8a");r({target:"WeakSet",proto:!0,real:!0,forced:a},{addAll:function(){return o.apply(this,arguments)}})},OiS4:function(n,e,t){},Osgv:function(n,e,t){var r=t("MMxC");r({target:"Math",stat:!0},{signbit:function(n){return(n=+n)==n&&0==n?1/n==-1/0:n<0}})},P0e2:function(n,e,t){var r=t("Srjj"),a=t("De94");n.exports=Object.keys||function(n){return r(n,a)}},PHrn:function(n,e,t){"use strict";var r=t("zv1X").forEach,a=t("R8iy"),o=t("kGMc"),i=a("forEach"),l=o("forEach");n.exports=i&&l?[].forEach:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}},PPXv:function(n,e,t){var r=t("Zcjx"),a=t("qcmB");n.exports=r?a:function(n){return Map.prototype.entries.call(n)}},PUJJ:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("cT1L"),l=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{isSupersetOf:function(n){var e=o(this),t=i(e.has);return!l(n,(function(n){if(!1===t.call(e,n))return l.stop()})).stopped}})},Pp3M:function(n,e,t){"use strict";var r=t("/gva"),a=t("vO0A");n.exports=r("Map",(function(n){return function(){return n(this,arguments.length?arguments[0]:void 0)}}),a)},PqlB:function(n,e,t){},Q0jR:function(n,e,t){},Q3OH:function(n,e,t){var r=t("eNh0");r("flatMap")},Q6P9:function(n,e,t){"use strict";function r(n){return r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var a=t("ArA+"),o=p(t("q1tI")),i=t("NKr8"),l=s(t("+t3K"));function s(n){return n&&n.__esModule?n:{default:n}}function c(){if("function"!==typeof WeakMap)return null;var n=new WeakMap;return c=function(){return n},n}function p(n){if(n&&n.__esModule)return n;if(null===n||"object"!==r(n)&&"function"!==typeof n)return{default:n};var e=c();if(e&&e.has(n))return e.get(n);var t={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in n)if(Object.prototype.hasOwnProperty.call(n,o)){var i=a?Object.getOwnPropertyDescriptor(n,o):null;i&&(i.get||i.set)?Object.defineProperty(t,o,i):t[o]=n[o]}return t["default"]=n,e&&e.set(n,t),t}function u(n){return f(n)||m(n)||g(n)||d()}function d(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function m(n){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}function f(n){if(Array.isArray(n))return y(n)}function h(n,e){return w(n)||C(n,e)||g(n,e)||x()}function x(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function g(n,e){if(n){if("string"===typeof n)return y(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?y(n,e):void 0}}function y(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function C(n,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done);r=!0)if(t.push(i.value),e&&t.length===e)break}catch(s){a=!0,o=s}finally{try{r||null==l["return"]||l["return"]()}finally{if(a)throw o}}return t}}function w(n){if(Array.isArray(n))return n}t("g9PX");var v=function(n){var e=n.routes,t=(0,o.useContext)(l["default"]),r=t.locale,s=t.locales,c=(0,o.useState)([]),p=h(c,2),d=p[0],m=p[1],f=(0,o.useState)([]),x=h(f,2),g=x[0],y=x[1],C=(0,o.useState)(""),w=h(C,2),v=w[0],b=w[1];return(0,o.useEffect)((function(){m(e.filter((function(n){var e,t=n.title,a=n.meta,o=(null===a||void 0===a?void 0:a.locale)===r,i=(null===a||void 0===a?void 0:a.locale)===(null===(e=s[0])||void 0===e?void 0:e.name)||!(null===a||void 0===a?void 0:a.locale)&&(!s.length||r===s[0].name);return t&&(i||o)})).reduce((function(n,e){var t,r,a={title:e.title,path:e.path};return(null===(t=e.meta)||void 0===t?void 0:t.group)&&(a.parent=e.meta.group),n.push(a),n.push.apply(n,u(((null===(r=e.meta)||void 0===r?void 0:r.slugs)||[]).filter((function(n){var t=n.value;return t!==e.title})).map((function(n){return{title:n.value,path:"".concat(e.path,"#").concat(n.heading),parent:a}})))),n}),[]))}),[e.length,r]),(0,o.useEffect)((function(){var n=v.trim().toUpperCase();if(n){for(var e=[],t=0;t<d.length&&e.length<6;t+=1)d[t].title.toUpperCase().indexOf(n)>-1&&e.push(d[t]);y(e)}else y([])}),[v]),o["default"].createElement("div",{className:"__dumi-default-search"},o["default"].createElement("input",{type:"search",value:v,onChange:function(n){return b(n.target.value)}}),o["default"].createElement("ul",null,g.map((function(n){var e;return o["default"].createElement("li",{key:n.path,onClick:function(){var e=n.path.split("#")[1];e&&(0,i.scrollToSlug)(e),b("")}},o["default"].createElement(a.Link,{to:n.path},(null===(e=n.parent)||void 0===e?void 0:e.title)&&o["default"].createElement("span",null,n.parent.title),n.title))}))))},b=v;e["default"]=b},Q9SF:function(n,e){function t(n){if(Array.isArray(n))return n}n.exports=t},QCnb:function(n,e,t){"use strict";n.exports=t("+wdc")},QDMV:function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t("YCKM"),i=t("f4X2"),l=t("IOv4"),s=t("fLP+"),c=t.n(s);e["default"]=()=>{var n=a["useState"](!0),e=Object(r["a"])(n,2),t=e[0],s=e[1],p=a["useState"](!0),u=Object(r["a"])(p,2),d=u[0],m=u[1],f=a["useState"](!1),h=Object(r["a"])(f,2),x=h[0],g=h[1];return a["createElement"](l["b"],{grayBg:!0,className:c.a.app},a["createElement"](l["a"],{title:"Basic"},a["createElement"](o["d"],{className:c.a.container},a["createElement"](i["t"],{checked:t,onChange:n=>s(n)}))),a["createElement"](l["a"],{title:"Small"},a["createElement"](o["d"],{className:c.a.container},a["createElement"](i["t"],{small:!0,checked:d,onChange:n=>m(n)}))),a["createElement"](l["a"],{title:"Disabled"},a["createElement"](o["d"],{className:c.a.container},a["createElement"](i["t"],{disabled:!0,checked:!1}),a["createElement"](o["d"],{style:{display:"inline-block",width:"0.94rem",height:"0.75rem"}}),a["createElement"](i["t"],{disabled:!0,checked:!0}))),a["createElement"](l["a"],{title:"With Cell"},a["createElement"](i["e"],{label:"\u8bbe\u4e3a\u9ed8\u8ba4\u5730\u5740",valueStyle:{display:"flex",justifyContent:"flex-end"}},a["createElement"](i["t"],{checked:x,onChange:n=>g(n)}))))}},QQ4S:function(n,e,t){"use strict";var r=t("0qr0"),a=t("m0kY"),o=t("oa35"),i=t("R8iy"),l=t("kGMc"),s=Math.min,c=[].lastIndexOf,p=!!c&&1/[1].lastIndexOf(1,-0)<0,u=i("lastIndexOf"),d=l("indexOf",{ACCESSORS:!0,1:0}),m=p||!u||!d;n.exports=m?function(n){if(p)return c.apply(this,arguments)||0;var e=r(this),t=o(e.length),i=t-1;for(arguments.length>1&&(i=s(i,a(arguments[1]))),i<0&&(i=t+i);i>=0;i--)if(i in e&&e[i]===n)return i||0;return-1}:c},Qj0x:function(n,e,t){n.exports={grid:"grid___2tffN"}},Qlla:function(n,e,t){var r=t("29mP");n.exports=r("navigator","userAgent")||""},"Qqe/":function(n,e,t){var r=t("1Cbe"),a=t("NMFW"),o=t("33TD");r||a(Object.prototype,"toString",o,{unsafe:!0})},"R/Zn":function(n,e,t){var r=t("MVys");n.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},R2QN:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=e.issueLink=void 0;var r=o(t("eVs5")),a=t("swKd");function o(n){return n&&n.__esModule?n:{default:n}}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var c=function(n){n.react||n["react-dom"]?n.react?n["react-dom"]||(n["react-dom"]=n.react):n.react=n["react-dom"]:(n.react="latest",n["react-dom"]="latest")},p="/** This is an auto-generated demo by dumi\n* if you think it is not working as expected,\n* please report the issue at\n* https://github.com/umijs/dumi/issues\n**/\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);";e.issueLink=p;var u=function(n,e){var t=n.files,o=n.deps,i=n.devDependencies,s=n.desc;e||(e={});var p=e,u=p.extraFiles,d=p.extraDependencies,m=p.name,f=p.template,h=void 0===f?"create-react-app":f,x=e,g=x.main,y=l({},o,{},d);g=g||"create-react-app-typescript"!==h?"index.js":"index.tsx",c(y);var C=l({},t,{"package.json":{content:(0,a.newpkgJSON)(y,m,g,i||{},s)},"sandbox.config.json":{content:JSON.stringify({template:h})}},u),w=(0,r["default"])({files:C});return{files:C,dependencies:y,parameters:w}};e["default"]=u},R5yR:function(n,e,t){var r=t("9xmf"),a=t("rhT+"),o=t("mGKP"),i=t("XWE6");function l(n){return r(n)||a(n)||o(n)||i()}n.exports=l},R8iy:function(n,e,t){"use strict";var r=t("MVys");n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){throw 1},1)}))}},RDHo:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("+X1D");r({target:"Set",proto:!0,real:!0,forced:a},{deleteAll:function(){return o.apply(this,arguments)}})},RhWa:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("qcmB"),c=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{isSubsetOf:function(n){var e=s(this),t=i(n),r=t.has;return"function"!=typeof r&&(t=new(o("Set"))(n),r=l(t.has)),!c(e,(function(n){if(!1===r.call(t,n))return c.stop()}),void 0,!1,!0).stopped}})},Rk8H:function(n,e,t){var r=t("jTPX");function a(n){var e=r(n,"line-height"),t=parseFloat(e,10);if(e===t+""){var a=n.style.lineHeight;n.style.lineHeight=e+"em",e=r(n,"line-height"),t=parseFloat(e,10),a?n.style.lineHeight=a:delete n.style.lineHeight}if(-1!==e.indexOf("pt")?(t*=4,t/=3):-1!==e.indexOf("mm")?(t*=96,t/=25.4):-1!==e.indexOf("cm")?(t*=96,t/=2.54):-1!==e.indexOf("in")?t*=96:-1!==e.indexOf("pc")&&(t*=16),t=Math.round(t),"normal"===e){var o=n.nodeName,i=document.createElement(o);i.innerHTML="&nbsp;","TEXTAREA"===o.toUpperCase()&&i.setAttribute("rows","1");var l=r(n,"font-size");i.style.fontSize=l,i.style.padding="0px",i.style.border="0px";var s=document.body;s.appendChild(i);var c=i.offsetHeight;t=c,s.removeChild(i)}return t}n.exports=a},Rka6:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("7BAe"),l=t("PPXv"),s=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{findKey:function(n){var e=o(this),t=l(e),r=i(n,arguments.length>1?arguments[1]:void 0,3);return s(t,(function(n,t){if(r(t,n,e))return s.stop(n)}),void 0,!0,!0).result}})},Rw1i:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("b6st"),i=t("MVys"),l=t("29mP"),s=t("/dTS"),c=t("U8/t"),p=t("NMFW"),u=!!o&&i((function(){o.prototype["finally"].call({then:function(){}},(function(){}))}));r({target:"Promise",proto:!0,real:!0,forced:u},{finally:function(n){var e=s(this,l("Promise")),t="function"==typeof n;return this.then(t?function(t){return c(e,n()).then((function(){return t}))}:n,t?function(t){return c(e,n()).then((function(){throw t}))}:n)}}),a||"function"!=typeof o||o.prototype["finally"]||p(o.prototype,"finally",l("Promise").prototype["finally"])},S5nV:function(n,e,t){var r=t("MMxC");r({target:"Math",stat:!0},{RAD_PER_DEG:180/Math.PI})},S9Xh:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("p4TF")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"selector"},o.a.createElement("a",{"aria-hidden":"true",href:"#selector"},o.a.createElement("span",{className:"icon icon-link"})),"Selector"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:"import React, { useRef } from 'react';\nimport { View } from 'remax/one';\nimport { Selector, SelectorPopup, Cell, Filter } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport { ReturnDeliveryWay } from '../../mock';\n\nconst options1 = [\n  {\n    key: '0',\n    value: '1000',\n  },\n  {\n    key: '1',\n    value: '2000',\n  },\n  {\n    key: '2',\n    value: '3000',\n  },\n];\n\nexport default () => {\n  const [selector, setSelector] = React.useState({\n    value: [],\n    valueStr: null,\n  });\n  const [selector1, setSelector1] = React.useState({\n    value: [],\n    valueStr: null,\n  });\n  const [selector2, setSelector2] = React.useState({\n    value: [],\n    valueStr: null,\n  });\n  const [value3, setValue3] = React.useState('0');\n\n  const handleChange = (value: any, valueStr: any) => {\n    setSelector({\n      value,\n      valueStr,\n    });\n  };\n\n  const handleChange1 = (value: any, valueStr: any) => {\n    setSelector1({\n      value,\n      valueStr,\n    });\n  };\n\n  // Filter\n  const seletorRef = useRef<any>();\n  const handleChange2 = (value: any, valueStr: any) => {\n    setSelector2({\n      value,\n      valueStr,\n    });\n    seletorRef.current.toggle();\n  };\n\n  return (\n    <Frame grayBg>\n      <Block title=\"Basic\">\n        <View style={{ backgroundColor: '#FDFFFD' }}>\n          <Selector options={ReturnDeliveryWay} onChange={handleChange} value={selector.value} />\n        </View>\n      </Block>\n      <Block title=\"With Filter\">\n        <View style={{ backgroundColor: '#FDFFFD' }}>\n          <Filter zIndex={998}>\n            <Filter.Item title=\"\u914d\u9001\u65b9\u5f0f\" ref={seletorRef}>\n              <Selector\n                options={ReturnDeliveryWay}\n                onChange={handleChange2}\n                value={selector2.value}\n              />\n            </Filter.Item>\n            <Filter.Item\n              label=\"\u4ef7\u683c\"\n              value={value3}\n              options={options1}\n              onChange={e => setValue3(e.key)}\n            />\n          </Filter>\n        </View>\n      </Block>\n      <Block title=\"With Cell and Popup\">\n        <Cell label=\"\u914d\u9001\u65b9\u5f0f\" arrow>\n          <SelectorPopup\n            options={ReturnDeliveryWay}\n            onChange={handleChange1}\n            value={selector1.value}\n            title=\"\u914d\u9001\u65b9\u5f0f\"\n            placeholder=\"\u8bf7\u9009\u62e9\"\n          >\n            {selector1.valueStr}\n          </SelectorPopup>\n        </Cell>\n      </Block>\n    </Frame>\n  );\n};\n",jsx:"import React, { useRef } from 'react';\nimport { View } from 'remax/one';\nimport { Selector, SelectorPopup, Cell, Filter } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport { ReturnDeliveryWay } from '../../mock';\n\nconst options1 = [\n  {\n    key: '0',\n    value: '1000',\n  },\n  {\n    key: '1',\n    value: '2000',\n  },\n  {\n    key: '2',\n    value: '3000',\n  },\n];\nexport default () => {\n  const [selector, setSelector] = React.useState({\n    value: [],\n    valueStr: null,\n  });\n  const [selector1, setSelector1] = React.useState({\n    value: [],\n    valueStr: null,\n  });\n  const [selector2, setSelector2] = React.useState({\n    value: [],\n    valueStr: null,\n  });\n  const [value3, setValue3] = React.useState('0');\n\n  const handleChange = (value, valueStr) => {\n    setSelector({\n      value,\n      valueStr,\n    });\n  };\n\n  const handleChange1 = (value, valueStr) => {\n    setSelector1({\n      value,\n      valueStr,\n    });\n  }; // Filter\n\n  const seletorRef = useRef();\n\n  const handleChange2 = (value, valueStr) => {\n    setSelector2({\n      value,\n      valueStr,\n    });\n    seletorRef.current.toggle();\n  };\n\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          style: {\n            backgroundColor: '#FDFFFD',\n          },\n        },\n        /* #__PURE__ */ React.createElement(Selector, {\n          options: ReturnDeliveryWay,\n          onChange: handleChange,\n          value: selector.value,\n        }),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Filter',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          style: {\n            backgroundColor: '#FDFFFD',\n          },\n        },\n        /* #__PURE__ */ React.createElement(\n          Filter,\n          {\n            zIndex: 998,\n          },\n          /* #__PURE__ */ React.createElement(\n            Filter.Item,\n            {\n              title: '\\u914D\\u9001\\u65B9\\u5F0F',\n              ref: seletorRef,\n            },\n            /* #__PURE__ */ React.createElement(Selector, {\n              options: ReturnDeliveryWay,\n              onChange: handleChange2,\n              value: selector2.value,\n            }),\n          ),\n          /* #__PURE__ */ React.createElement(Filter.Item, {\n            label: '\\u4EF7\\u683C',\n            value: value3,\n            options: options1,\n            onChange: e => setValue3(e.key),\n          }),\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Cell and Popup',\n      },\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: '\\u914D\\u9001\\u65B9\\u5F0F',\n          arrow: true,\n        },\n        /* #__PURE__ */ React.createElement(\n          SelectorPopup,\n          {\n            options: ReturnDeliveryWay,\n            onChange: handleChange1,\n            value: selector1.value,\n            title: '\\u914D\\u9001\\u65B9\\u5F0F',\n            placeholder: '\\u8BF7\\u9009\\u62E9',\n          },\n          selector1.valueStr,\n        ),\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-11",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"mock/index.ts":{path:"../../mock",content:"export const ReturnDeliveryWay = [\n  {\n    children: [\n      {\n        value: '\u516c\u53f8\u81ea\u53d6',\n        key: 'companySelfFetch',\n      },\n      {\n        value: '\u8d27\u62c9\u62c9',\n        key: 'companyHuoLaLa',\n      },\n      {\n        value: '\u5176\u4ed6\u7b2c\u4e09\u65b9\u7269\u6d41',\n        key: 'companyOtherLogistics',\n      },\n    ],\n    value: '\u516c\u53f8\u914d\u9001',\n    key: 'company',\n  },\n  {\n    children: [\n      {\n        value: '\u5ba2\u6237\u81ea\u9001',\n        key: 'customerSelfSend',\n      },\n      {\n        value: '\u8d27\u62c9\u62c9',\n        key: 'customerHuoLaLa',\n      },\n      {\n        value: '\u5176\u4ed6\u7b2c\u4e09\u65b9\u7269\u6d41',\n        key: 'customerOtherLogistics',\n      },\n    ],\n    value: '\u5ba2\u6237\u914d\u9001',\n    key: 'customer',\n  },\n];\n\nexport const Categorys = [\n  {\n    key: '20191217161304575-000001y6tyZNjU',\n    value: '\u8f85\u6750',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165823924-000002gO44PH4L',\n        value: '\u5305\u88c5\u888b',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656301-0000399wiWTEts',\n            value: 'PE',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656301-00004069R24fKd',\n            value: 'OPP',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656302-000041aYgkOREr',\n            value: '\u65e0\u7eba\u5e03',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656302-000042eCtjDn1k',\n            value: '\u6c14\u6ce1\u888b',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656302-000043UFAkA6vU',\n            value: '\u5305\u88c5\u76d2',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656302-0000442hqIqGoF',\n            value: '\u7279\u79cd\u819c',\n            parentKey: '20191217165823924-000002gO44PH4L',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165823925-000003lcmwrD8L',\n        value: '\u5546\u6807',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656303-000047tPRW1CcA',\n            value: '\u7ec7\u551b',\n            parentKey: '20191217165823925-000003lcmwrD8L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656303-000048AdtxHrs8',\n            value: '\u540a\u724c',\n            parentKey: '20191217165823925-000003lcmwrD8L',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656303-0000498cYkKVZU',\n            value: '\u6d17\u6c34\u551b',\n            parentKey: '20191217165823925-000003lcmwrD8L',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165823925-000004jnmMJAhI',\n        value: '\u8863\u67b6',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: [\n          {\n            key: '20200207134709826-0000017IdxzBg1',\n            value: '\u5851\u6599\u8863\u67b6',\n            parentKey: '20191217165823925-000004jnmMJAhI',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165823925-000005zNvplXoZ',\n        value: '\u9b54\u672f\u8d34',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: [\n          {\n            key: '20200207134709841-000004CbGGqtSn',\n            value: '\u901a\u7528\u9b54\u672f\u8d34',\n            parentKey: '20191217165823925-000005zNvplXoZ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20200427132730707-000001Eb7GSuIf',\n        value: '\u540a\u7c92',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20200427132730717-000002NMWmmiYK',\n        value: '\u9632\u76d7\u6263',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20200427132730717-000003jRLoFOfD',\n        value: '\u7eb8\u5361',\n        parentKey: '20191217161304575-000001y6tyZNjU',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304576-000002r1LOtUSo',\n    value: '\u88c5\u9970\u7247',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217162147778-000001JsV6LYt9',\n        value: '\u624b\u5de5\u9489\u73e0',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: [\n          {\n            key: '20191217163043957-0000018FENDbBC',\n            value: '\u6bdb\u6be1\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 3,\n            children: null,\n          },\n          {\n            key: '20191217163043959-000002wGATJohh',\n            value: '\u7eb1\u7c7b\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 4,\n            children: null,\n          },\n          {\n            key: '20191217163043959-000003YfJc0a7y',\n            value: '\u7ee3\u82b1\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 5,\n            children: null,\n          },\n          {\n            key: '20191217163043959-000004gQb8fOXl',\n            value: '\u88c1\u7247\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 6,\n            children: null,\n          },\n          {\n            key: '20191217163043960-000005p8It3KTK',\n            value: '\u8863\u9886\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 7,\n            children: null,\n          },\n          {\n            key: '20191217163043960-000006L6oJJMyg',\n            value: '\u6210\u8863\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 8,\n            children: null,\n          },\n          {\n            key: '20191217163043960-000007RptOyytA',\n            value: '\u7ec7\u5e26\u9489\u73e0',\n            parentKey: '20191217162147778-000001JsV6LYt9',\n            sort: 9,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217162147782-000002fV02O3ca',\n        value: '\u673a\u5668\u6253\u73e0',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: [\n          {\n            key: '20191217163814286-000001uWoEKBrA',\n            value: '\u673a\u5668\u6253\u73cd\u73e0',\n            parentKey: '20191217162147782-000002fV02O3ca',\n            sort: 3,\n            children: null,\n          },\n          {\n            key: '20191217163814288-000002trUKEqmp',\n            value: '\u673a\u5668\u6253\u94bb',\n            parentKey: '20191217162147782-000002fV02O3ca',\n            sort: 4,\n            children: null,\n          },\n          {\n            key: '20191217163814288-000003IJia6iAW',\n            value: '\u673a\u5668\u6253\u91d1\u5c5e\u9489',\n            parentKey: '20191217162147782-000002fV02O3ca',\n            sort: 5,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217162147782-000003M6Y1PIl2',\n        value: '\u624b\u94a9\u82b1',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: null,\n      },\n      {\n        key: '20191217162147782-000004CgQkO75J',\n        value: '\u8863\u9886',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: null,\n      },\n      {\n        key: '20191217162147782-000005Ty3EoFjO',\n        value: '\u70eb\u753b',\n        parentKey: '20191217161304576-000002r1LOtUSo',\n        sort: 2,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304576-000003HHVXFr6e',\n    value: '\u523a\u7ee3',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232236-00000166H9exyS',\n        value: '\u7ee3\u82b1\u7ae0',\n        parentKey: '20191217161304576-000003HHVXFr6e',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430118-000001mc4VstBq',\n            value: '\u73e0\u7247\u7ee3',\n            parentKey: '20191217165232236-00000166H9exyS',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232237-000002Y1kBzGKT',\n        value: '\u88c1\u7247\u523a\u7ee3',\n        parentKey: '20191217161304576-000003HHVXFr6e',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430120-000002kvZwHAkn',\n            value: '\u73e0\u5b50\u7ee3',\n            parentKey: '20191217165232237-000002Y1kBzGKT',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232237-000003CgD4oONp',\n        value: '\u6210\u8863\u523a\u7ee3',\n        parentKey: '20191217161304576-000003HHVXFr6e',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430120-000003BvPrzoaN',\n            value: '\u76d8\u7ef3\u7ee3',\n            parentKey: '20191217165232237-000003CgD4oONp',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000004KyaioEsi',\n        value: '\u9762\u6599\u523a\u7ee3',\n        parentKey: '20191217161304576-000003HHVXFr6e',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430120-0000044F3f0sLK',\n            value: '\u7ebf\u7ee3/\u5e73\u7ee3',\n            parentKey: '20191217165232238-000004KyaioEsi',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430120-000005I63gL7tF',\n            value: '\u7259\u5237\u7ee3',\n            parentKey: '20191217165232238-000004KyaioEsi',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430121-000006PC2r6L31',\n            value: '\u6bdb\u5dfe\u7ee3',\n            parentKey: '20191217165232238-000004KyaioEsi',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430121-0000073c2ZeSAy',\n            value: '\u690d\u7ed2\u7ee3',\n            parentKey: '20191217165232238-000004KyaioEsi',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20191217161304576-000004FTr9G76t',\n    value: '\u82b1\u8fb9',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232238-000005yrkmxC6f',\n        value: '\u6c34\u6eb6\u82b1\u8fb9',\n        parentKey: '20191217161304576-000004FTr9G76t',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430121-000008FSnIRmdM',\n            value: '\u725b\u5976\u4e1d',\n            parentKey: '20191217165232238-000005yrkmxC6f',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430121-0000096Vs9uQ0R',\n            value: '\u68c9\u4e1d',\n            parentKey: '20191217165232238-000005yrkmxC6f',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430121-000010tDxNfTNC',\n            value: '\u6da4\u5149',\n            parentKey: '20191217165232238-000005yrkmxC6f',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000006pYONxAlu',\n        value: '\u857e\u4e1d\u82b1\u8fb9',\n        parentKey: '20191217161304576-000004FTr9G76t',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430121-000011VYPB6U7b',\n            value: '\u776b\u6bdb\u82b1\u8fb9',\n            parentKey: '20191217165232238-000006pYONxAlu',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000007ivSMOS92',\n        value: '\u523a\u7ee3\u82b1\u8fb9',\n        parentKey: '20191217161304576-000004FTr9G76t',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430121-000012dexmjeIf',\n            value: '\u68c9\u5e03\u7ee3',\n            parentKey: '20191217165232238-000007ivSMOS92',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430122-000013CRNBFK23',\n            value: '\u96d5\u5b54\u7ee3',\n            parentKey: '20191217165232238-000007ivSMOS92',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20191217161304576-000005RN9X3YFT',\n    value: '\u5143\u7d20',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232238-000008MglUKL6v',\n        value: '\u6c34\u94bb',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430122-0000141P9Tz4yw',\n            value: '\u82b1\u7bee\u722a',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430122-000015bMmUBISy',\n            value: '\u56db\u722a',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430122-000016Vt8nK231',\n            value: '\u5305\u6263',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430122-000017ucrwcbfx',\n            value: '\u7c98\u80f6',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430123-0000180mx2t9BL',\n            value: '\u88f8\u6c34\u94bb',\n            parentKey: '20191217165232238-000008MglUKL6v',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000009I56kLELs',\n        value: '\u94bb\u94fe',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430123-000019aZy65KbG',\n            value: '\u5355\u6392\u94bb\u94fe',\n            parentKey: '20191217165232238-000009I56kLELs',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430123-000020sBM1lVrC',\n            value: '\u7ec4\u5408\u94bb\u94fe',\n            parentKey: '20191217165232238-000009I56kLELs',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430123-000021Tg0mAI20',\n            value: '\u94bb\u7f51',\n            parentKey: '20191217165232238-000009I56kLELs',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-000010CIhXWh7P',\n        value: '\u6c34\u6676',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430123-000022t2wJHZWG',\n            value: '\u5c16\u5e95\u6c34\u6676',\n            parentKey: '20191217165232238-000010CIhXWh7P',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430123-0000238vmPQmJc',\n            value: '\u5e73\u5e95\u6c34\u6676',\n            parentKey: '20191217165232238-000010CIhXWh7P',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232238-0000115uliki3x',\n        value: '\u6c34\u6676\u73e0',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232238-000012wyxWG27j',\n        value: '\u918b\u9178\u677f\u6750',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232238-000013xYUqVQb4',\n        value: '\u70eb\u77f3',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430124-000024TEPGQYbl',\n            value: '\u70eb\u94bb',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-000025qCudkwHK',\n            value: '\u94dd\u70eb\u7247',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-0000266timdVxn',\n            value: '\u94dc\u70eb\u7247',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-000027k9heSLmy',\n            value: '\u73cd\u73e0\u70eb\u7247',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-000028uQLunj2D',\n            value: '\u6811\u8102\u70eb',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430124-000029i1UqkwGh',\n            value: '\u4e9a\u514b\u529b\u70eb',\n            parentKey: '20191217165232238-000013xYUqVQb4',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232239-000014JrMYVHhM',\n        value: '\u5c3f\u7d20\u73e0',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232239-0000154JEiSkDU',\n        value: '\u4eff\u73cd\u73e0',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232239-000016w3UwMSLn',\n        value: '\u6811\u8102',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430124-000030KiG9kCZt',\n            value: '\u5c16\u5e95\u6811\u8102',\n            parentKey: '20191217165232239-000016w3UwMSLn',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430125-000031MqyFnI35',\n            value: '\u5e73\u5e95\u6811\u8102',\n            parentKey: '20191217165232239-000016w3UwMSLn',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430125-000032B4Lbm1yI',\n            value: '\u6811\u8102\u677f\u6750',\n            parentKey: '20191217165232239-000016w3UwMSLn',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232239-000017hyf9ZTce',\n        value: '\u4e9a\u514b\u529b',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430125-000033kl68NHe8',\n            value: '\u5c16\u5e95\u4e9a\u514b\u529b',\n            parentKey: '20191217165232239-000017hyf9ZTce',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430125-000034bNEkm1JS',\n            value: '\u5e73\u5e95\u4e9a\u514b\u529b',\n            parentKey: '20191217165232239-000017hyf9ZTce',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430125-000035IbpW6shj',\n            value: '\u4e9a\u514b\u529b\u677f\u6750',\n            parentKey: '20191217165232239-000017hyf9ZTce',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232239-000018X2VXnwJr',\n        value: '\u6ef4\u6cb9',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430125-000036StiCLSoY',\n            value: '\u6ef4\u6cb9\u94bb',\n            parentKey: '20191217165232239-000018X2VXnwJr',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430126-000037DcQr4Y6r',\n            value: '\u6ef4\u6cb9\u82b1',\n            parentKey: '20191217165232239-000018X2VXnwJr',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232239-000019pWyf1m8E',\n        value: '\u73e0\u5b50',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232239-000020rhGd9Exh',\n        value: '\u73e0\u7ba1',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232239-000021keUzT6bA',\n        value: '\u73e0\u7247',\n        parentKey: '20191217161304576-000005RN9X3YFT',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-0000062lDupQwh',\n    value: '\u7ec7\u5e26',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232240-000022FVYyI6KA',\n        value: '\u677e\u7d27\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-000023XUanCWUJ',\n        value: '\u7ef3\u5b50',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170430126-000038eLf0Tg9V',\n            value: '\u68c9\u7ef3',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: [\n              {\n                key: '20191217171318553-000001fJ1nTKgF',\n                value: '\u6241\u7ef3',\n                parentKey: '20191217170430126-000038eLf0Tg9V',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000002CM2D2GqJ',\n                value: '\u7f16\u7ec7\u7ef3',\n                parentKey: '20191217170430126-000038eLf0Tg9V',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000003pvgWKty2',\n                value: '\u5706\u7ef3',\n                parentKey: '20191217170430126-000038eLf0Tg9V',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20191217170430126-000039PUsVEnfM',\n            value: '\u6da4\u68c9',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430126-000040vgGwM3BI',\n            value: 'PP\u4e19\u7eb6',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430126-000041iRWU94sR',\n            value: '\u6da4\u7eb6(\u5706\u7ef3)',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: [\n              {\n                key: '20191217171318554-000004u64rvFci',\n                value: '\u7f16\u7ec7\u5706\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000005D82CJ2Zh',\n                value: '\u87ba\u7eb9\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000006AM320zG1',\n                value: '\u7f0e\u7eb9\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318554-000007cD2sAorC',\n                value: '\u683c\u5b50\u7eb9',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-0000084gSupYXT',\n                value: '\u5706\u70b9\u7eb9',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-000009jMr56TvB',\n                value: '\u4eba\u5b57\u7eb9',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-000010giPOme5z',\n                value: '\u63d0\u82b1',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-0000114j3DTdyv',\n                value: '\u5e73\u7eb9\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-0000124dp8ALZu',\n                value: '\u5bc6\u7ec7\u7ef3',\n                parentKey: '20191217170430126-000041iRWU94sR',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20191217170430126-000042V2yKelNY',\n            value: '\u9526\u7eb6',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170430127-000043Xhx3U4Pk',\n            value: '\u4e73\u80f6/\u50cf\u7b4b\u7ef3',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: [\n              {\n                key: '20191217171318555-0000138UnKaeCt',\n                value: '\u900f\u660e\u6241\u7ef3',\n                parentKey: '20191217170430127-000043Xhx3U4Pk',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20191217171318555-000014ey7W2NOj',\n                value: '\u5706\u7ef3',\n                parentKey: '20191217170430127-000043Xhx3U4Pk',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20191217170656292-000001T2mnDeIP',\n            value: '\u4eba\u9020\u4e1d',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656294-000002674NqDCg',\n            value: '\u5c3c\u9f99',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656294-000003re8ap0Hi',\n            value: '\u5316\u7ea4',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656294-000004JWEXgdHy',\n            value: '\u9ebb\u7ef3',\n            parentKey: '20191217165232240-000023XUanCWUJ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232240-000024z4jTsIAh',\n        value: '\u87ba\u7eb9',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-000025VNHMU170',\n        value: '\u5e3d\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-0000265uM1zXBk',\n        value: '\u4e1d\u7ed2\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-000027PgvfnF0C',\n        value: '\u91d1\u94f6\u8471\u7ec7\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165232240-000028xlHru6lj',\n        value: '\u4e8c\u6b21\u5de5\u827a\u7ec7\u5e26',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656295-000005DbDFXz0U',\n            value: '\u5c0f\u9999\u98ce\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-000006C7kIWn1n',\n            value: '\u6bdb\u5dfe\u7ee3\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-0000079klbAYsR',\n            value: '\u73e0\u7247\u7ee3\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-000008eat014IA',\n            value: 'TPU\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-000009JXZg7Fbj',\n            value: '\u6c11\u65cf\u98ce\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656295-000010FnPul1N0',\n            value: '\u4e94\u91d1\u7ec7\u5e26',\n            parentKey: '20191217165232240-000028xlHru6lj',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165232240-000029kdoKB8AZ',\n        value: '\u6d41\u82cf',\n        parentKey: '20191217161304577-0000062lDupQwh',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656296-000011whdNoZP3',\n            value: 'U\u578b/I\u578b\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656296-0000125i0Lb9zp',\n            value: '\u540a\u7a57\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656296-000013LfGEyCMB',\n            value: '\u76ae\u8d28\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656296-000014vN8M7dt7',\n            value: '\u4eae\u7247\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656296-000015dDY8NQ7N',\n            value: '\u73e0\u94bb\u6d41\u82cf',\n            parentKey: '20191217165232240-000029kdoKB8AZ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-000007RvNnXMgX',\n    value: '\u4e94\u91d1',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165232240-000030bweCQhxN',\n        value: '\u94fe\u6761',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657971-0000015c4MFng6',\n        value: '\u6c14\u773c',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657972-000002Lv0YsTin',\n        value: '\u94c6\u9489\u7c7b',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-000003tjwHCvBl',\n        value: '\u80f8\u9488',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-000004wTF2ZyE4',\n        value: '\u540a\u949f',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-000005yX7GUQOQ',\n        value: '\u91d1\u5c5e\u73af',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656297-000016fOKXol0z',\n            value: '\u65e5\u5b57\u73af',\n            parentKey: '20191217165657973-000005yX7GUQOQ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656297-000017FskDddgE',\n            value: 'D\u5b57\u73af',\n            parentKey: '20191217165657973-000005yX7GUQOQ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657973-000006F6cXFSYy',\n        value: '\u4e94\u91d1\u9970\u54c1',\n        parentKey: '20191217161304577-000007RvNnXMgX',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656297-0000184Jd9TRtJ',\n            value: '\u94dc\u7c7b\u9970\u54c1',\n            parentKey: '20191217165657973-000006F6cXFSYy',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656297-000019sRveH0fP',\n            value: '\u950c\u5408\u91d1\u9970\u54c1',\n            parentKey: '20191217165657973-000006F6cXFSYy',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656298-000020wakZDCyA',\n            value: '\u7ec4\u5408\u9970\u54c1',\n            parentKey: '20191217165657973-000006F6cXFSYy',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-000008HsmOlG2W',\n    value: '\u7ebd\u6263',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165657973-000007o31Z6lyw',\n        value: '\u94bb\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656298-0000214QdZt0ak',\n            value: '\u5408\u91d1\u94bb\u6263',\n            parentKey: '20191217165657973-000007o31Z6lyw',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656298-000022PKF0mV1r',\n            value: 'ABS\u7c98\u94bb\u6263',\n            parentKey: '20191217165657973-000007o31Z6lyw',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656298-000023IRsreTfR',\n            value: '\u73cd\u73e0\u7ec4\u5408\u94bb\u6263',\n            parentKey: '20191217165657973-000007o31Z6lyw',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657973-0000080UuZhY3V',\n        value: '\u6c34\u6676\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-000009N2w7blXD',\n        value: '\u6811\u8102\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657973-0000100bCa6Vc7',\n        value: '\u918b\u9178\u677f\u6750\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657974-000011NPbUPhAK',\n        value: '\u5305\u5e03\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657974-000012JcZm9nla',\n        value: '\u56db\u5408\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656298-000024mkSTQQK8',\n            value: '\u9762\u677f',\n            parentKey: '20191217165657974-000012JcZm9nla',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656299-000025kawKkDbO',\n            value: '\u4e0b\u4e09\u4ef6',\n            parentKey: '20191217165657974-000012JcZm9nla',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657974-000013iiAWdkTL',\n        value: '\u91d1\u5c5e\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656299-000026UPO56ZC3',\n            value: '\u65e5\u5b57\u6263',\n            parentKey: '20191217165657974-000013iiAWdkTL',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656299-000027UriRNFog',\n            value: 'D\u5b57\u6263',\n            parentKey: '20191217165657974-000013iiAWdkTL',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656299-000028W4ScFbD0',\n            value: '\u4e94\u722a\u6263',\n            parentKey: '20191217165657974-000013iiAWdkTL',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656299-000029OOjaYjoJ',\n            value: '\u5de5\u5b57\u6263',\n            parentKey: '20191217165657974-000013iiAWdkTL',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657974-0000141GLhUHVz',\n        value: '\u5f39\u7c27\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656299-0000300M8MpigQ',\n            value: '\u5730\u96f7\u6263',\n            parentKey: '20191217165657974-0000141GLhUHVz',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656300-000031PtfsRGxv',\n            value: '\u5927\u7af9\u8282\u5f39\u7c27\u6263',\n            parentKey: '20191217165657974-0000141GLhUHVz',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656300-000032H4NE3wuY',\n            value: '\u53cc\u5934\u5f39\u7c27\u6263',\n            parentKey: '20191217165657974-0000141GLhUHVz',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656300-000033emnUX2Gw',\n            value: '\u5355\u5934\u5f39\u7c27\u6263',\n            parentKey: '20191217165657974-0000141GLhUHVz',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657974-000015eIs6S1GZ',\n        value: '\u6697\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: [\n          {\n            key: '20191217170656300-0000349J7FFIa6',\n            value: '\u91d1\u5c5e',\n            parentKey: '20191217165657974-000015eIs6S1GZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656300-000035pWgaROfZ',\n            value: '\u6811\u8102',\n            parentKey: '20191217165657974-000015eIs6S1GZ',\n            sort: 0,\n            children: null,\n          },\n          {\n            key: '20191217170656301-000036YEOBRkDl',\n            value: '\u5305\u5e03',\n            parentKey: '20191217165657974-000015eIs6S1GZ',\n            sort: 0,\n            children: null,\n          },\n        ],\n      },\n      {\n        key: '20191217165657974-000016voKKPOE9',\n        value: '\u725b\u89d2\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657974-0000178Syd6uqO',\n        value: '\u8d1d\u58f3\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657974-000018gXZz0iLB',\n        value: '\u6930\u5b50\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000019nKObN65V',\n        value: '\u6728\u5934\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20200414111318783-000001AYXiigA4',\n        value: '\u5361\u6263',\n        parentKey: '20191217161304577-000008HsmOlG2W',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-000009kakIYneM',\n    value: '\u7f1d\u7eab\u7ebf',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217170656301-000037OrpfP8R1',\n        value: '\u6da4\u7eb6\u7f1d\u7eab\u7ebf',\n        parentKey: '20191217161304577-000009kakIYneM',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217170656301-000037OrpfP8RD',\n        value: '\u4f4e\u5f39\u4e1d',\n        parentKey: '20191217161304577-000009kakIYneM',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217170656301-000038RebaC6Pc',\n        value: '\u9ad8\u5f3a\u7ebf',\n        parentKey: '20191217161304577-000009kakIYneM',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20191217161304577-000010MmFCiK6I',\n    value: '\u91cc\u5e03',\n    parentKey: '0',\n    sort: 1,\n    children: [\n      {\n        key: '20191217165657975-000021Fiiskon1',\n        value: '\u96ea\u7eba',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000022F31oZ869',\n        value: '\u8272\u4e01',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000023van83q8e',\n        value: '\u9488\u7ec7',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000024lVAwJLPt',\n        value: '\u918b\u9178',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000025CnovdiJo',\n        value: '\u6da4\u5854\u592b',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657975-000026smSLbU0R',\n        value: '\u6625\u4e9a\u7eba',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165657976-000027E6qtGc83',\n        value: '\u8212\u7f8e\u7ef8',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20191217165823923-0000010GHOJdYD',\n        value: '\u80c6\u5e03',\n        parentKey: '20191217161304577-000010MmFCiK6I',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n  {\n    key: '20200226091842647-000001yM5dZfDy',\n    value: '\u533b\u7597\u7528\u54c1',\n    parentKey: '0',\n    sort: 0,\n    children: [\n      {\n        key: '20200226091842649-0000025gFxW5l2',\n        value: '\u53e3\u7f69',\n        parentKey: '20200226091842647-000001yM5dZfDy',\n        sort: 0,\n        children: [\n          {\n            key: '20200226091842649-000004vCuabYKH',\n            value: '\u53e3\u7f69\u7ef3\u5b50',\n            parentKey: '20200226091842649-0000025gFxW5l2',\n            sort: 0,\n            children: [\n              {\n                key: '20200226091842650-000008pIo29kKY',\n                value: '\u6241\u7ef3',\n                parentKey: '20200226091842649-000004vCuabYKH',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842650-000009eIUMUpCq',\n                value: '\u5706\u5f62\u7ef3',\n                parentKey: '20200226091842649-000004vCuabYKH',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20200226091842649-000005rbAn6Lmm',\n            value: '\u53e3\u7f69\u9f3b\u6881\u6761',\n            parentKey: '20200226091842649-0000025gFxW5l2',\n            sort: 0,\n            children: [\n              {\n                key: '20200226091842650-000010Av15mvpG',\n                value: '\u5355\u94c1\u4e1d\u9f3b\u6881\u6761',\n                parentKey: '20200226091842649-000005rbAn6Lmm',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842650-000011TjOPF5Qz',\n                value: '\u5851\u6599\u9f3b\u6881\u6761',\n                parentKey: '20200226091842649-000005rbAn6Lmm',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n          {\n            key: '20200226091842649-0000063CryWbUA',\n            value: '\u53e3\u7f69\u5e03\u6599',\n            parentKey: '20200226091842649-0000025gFxW5l2',\n            sort: 0,\n            children: [\n              {\n                key: '20200226091842650-000012xUA5yPhG',\n                value: '\u65e0\u7eba\u5e03',\n                parentKey: '20200226091842649-0000063CryWbUA',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842650-0000134NbHyUhr',\n                value: '\u7eba\u9ecf\u5e03',\n                parentKey: '20200226091842649-0000063CryWbUA',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842650-000014AJRbZ0Vc',\n                value: '\u7194\u55b7\u5e03',\n                parentKey: '20200226091842649-0000063CryWbUA',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        key: '20200226091842649-000003rv7VLKkK',\n        value: '\u9632\u62a4\u670d',\n        parentKey: '20200226091842647-000001yM5dZfDy',\n        sort: 0,\n        children: [\n          {\n            key: '20200226091842649-0000079Tp494QF',\n            value: '\u9632\u62a4\u670d\u62c9\u94fe',\n            parentKey: '20200226091842649-000003rv7VLKkK',\n            sort: 0,\n            children: [\n              {\n                key: '20200226091842651-000015jxNcTAcj',\n                value: '\u4e00\u822c\u5c3c\u9f99\u62c9\u94fe',\n                parentKey: '20200226091842649-0000079Tp494QF',\n                sort: 0,\n                children: null,\n              },\n              {\n                key: '20200226091842651-000016lEOhJjOR',\n                value: '\u9632\u6c34\u62c9\u94fe',\n                parentKey: '20200226091842649-0000079Tp494QF',\n                sort: 0,\n                children: null,\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: '20200309140701867-000007HFFNjGOQ',\n    value: '\u7eba\u7c98\u5e03',\n    parentKey: '0',\n    sort: 0,\n    children: [\n      {\n        key: '20200309140701867-000008JZbEaoZQ',\n        value: '\u7eba\u7c98\u5e03SS\u7ea7\u522b',\n        parentKey: '20200309140701867-000007HFFNjGOQ',\n        sort: 0,\n        children: null,\n      },\n      {\n        key: '20200309140701867-000009a5QWRoXk',\n        value: '\u7eba\u7c98\u5e03SSS\u7ea7\u522b',\n        parentKey: '20200309140701867-000007HFFNjGOQ',\n        sort: 0,\n        children: null,\n      },\n    ],\n  },\n];\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"selector-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#selector-1"},o.a.createElement("span",{className:"icon icon-link"})),"Selector"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u6307\u5b9a\u5f53\u524d\u9009\u4e2d\u7684\u6761\u76ee"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,o.a.createElement("code",null,"[]"))),o.a.createElement("tr",null,o.a.createElement("td",null,"options"),o.a.createElement("td",null,"\u53ef\u9009\u9879\u6570\u636e\u6e90"),o.a.createElement("td",null,"OptionProps"),o.a.createElement("td",null,o.a.createElement("code",null,"[]"))),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49Selector\u7684\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"\u9009\u4e2d\u4e8c\u7ea7\u8282\u70b9\u65f6\u8c03\u7528\u6b64\u51fd\u6570"),o.a.createElement("td",null,"(value: any, valueStr?: string) => void"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onChangeParentOption"),o.a.createElement("td",null,"\u9009\u4e2d\u4e00\u7ea7\u8282\u70b9\u65f6\u8c03\u7528\u6b64\u51fd\u6570"),o.a.createElement("td",null,"(v) => void"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"optionprops"},o.a.createElement("a",{"aria-hidden":"true",href:"#optionprops"},o.a.createElement("span",{className:"icon icon-link"})),"OptionProps"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"key"),o.a.createElement("td",null,"\u6b64\u9879\u5fc5\u987b\u8bbe\u7f6e\uff08\u5176\u503c\u5728\u6574\u4e2a\u9009\u9879\u8303\u56f4\u5185\u552f\u4e00\uff09\uff0c\u6839\u636e\u6b64\u5c5e\u6027\u503c\u8fdb\u884c\u7b5b\u9009"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u503c"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"children"),o.a.createElement("td",null,"\u5b50\u8282\u70b9"),o.a.createElement("td",null,"OptionProps[]"),o.a.createElement("td",null,"-"))))))}},SGZ1:function(n,e,t){var r=t("I65O");r("search")},"SUj/":function(n,e,t){},Sf9Y:function(n,e,t){"use strict";var r=t("MMxC"),a=t("m0kY"),o=t("Ze4s"),i="Invalid number representation",l="Invalid radix",s=/^[\da-z]+$/;r({target:"Number",stat:!0},{fromString:function(n,e){var t,r,c=1;if("string"!=typeof n)throw TypeError(i);if(!n.length)throw SyntaxError(i);if("-"==n.charAt(0)&&(c=-1,n=n.slice(1),!n.length))throw SyntaxError(i);if(t=void 0===e?10:a(e),t<2||t>36)throw RangeError(l);if(!s.test(n)||(r=o(n,t)).toString(t)!==n)throw SyntaxError(i);return c*r}})},Sn4z:function(n,e,t){var r=t("cTDu"),a=t("oa35"),o=t("9SZg"),i=t("bF+Q"),l=t("7BAe"),s=t("FVwB").aTypedArrayConstructor;n.exports=function(n){var e,t,c,p,u,d,m=r(n),f=arguments.length,h=f>1?arguments[1]:void 0,x=void 0!==h,g=o(m);if(void 0!=g&&!i(g)){u=g.call(m),d=u.next,m=[];while(!(p=d.call(u)).done)m.push(p.value)}for(x&&f>2&&(h=l(h,arguments[2],2)),t=a(m.length),c=new(s(this))(t),e=0;t>e;e++)c[e]=x?h(m[e],e):m[e];return c}},SprQ:function(n,e,t){var r=t("MVys");n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},Srjj:function(n,e,t){var r=t("jtLI"),a=t("0qr0"),o=t("/3zY").indexOf,i=t("6ixQ");n.exports=function(n,e){var t,l=a(n),s=0,c=[];for(t in l)!r(i,t)&&r(l,t)&&c.push(t);while(e.length>s)r(l,t=e[s++])&&(~o(c,t)||c.push(t));return c}},TMUv:function(n,e,t){var r=t("ukPv"),a=t("lz10");n.exports=function(n,e){try{a(r,n,e)}catch(t){r[n]=e}return e}},TOwV:function(n,e,t){"use strict";n.exports=t("qT12")},TSYQ:function(n,e,t){var r,a;(function(){"use strict";var t={}.hasOwnProperty;function o(){for(var n=[],e=0;e<arguments.length;e++){var r=arguments[e];if(r){var a=typeof r;if("string"===a||"number"===a)n.push(r);else if(Array.isArray(r)&&r.length){var i=o.apply(null,r);i&&n.push(i)}else if("object"===a)for(var l in r)t.call(r,l)&&r[l]&&n.push(l)}}return n.join(" ")}n.exports?(o["default"]=o,n.exports=o):(r=[],a=function(){return o}.apply(e,r),void 0===a||(n.exports=a))})()},TcWi:function(n,e,t){},Tfd0:function(n,e){n.exports="\t\n\v\f\r \xa0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff"},Ty5D:function(n,e,t){"use strict";t.d(e,"a",(function(){return E})),t.d(e,"b",(function(){return I})),t.d(e,"c",(function(){return z})),t.d(e,"d",(function(){return K})),t.d(e,"e",(function(){return T})),t.d(e,"f",(function(){return Z})),t.d(e,"g",(function(){return Q})),t.d(e,"h",(function(){return S})),t.d(e,"i",(function(){return M})),t.d(e,"j",(function(){return U})),t.d(e,"k",(function(){return en})),t.d(e,"l",(function(){return tn})),t.d(e,"m",(function(){return rn})),t.d(e,"n",(function(){return an})),t.d(e,"o",(function(){return J}));var r=t("dI71"),a=t("q1tI"),o=t.n(a),i=t("17x9"),l=t.n(i),s=t("YS25"),c=t("VbXa"),p=t.n(c),u=t("fZtv"),d=t.n(u),m=1073741823;function f(n,e){return n===e?0!==n||1/n===1/e:n!==n&&e!==e}function h(n){var e=[];return{on:function(n){e.push(n)},off:function(n){e=e.filter((function(e){return e!==n}))},get:function(){return n},set:function(t,r){n=t,e.forEach((function(e){return e(n,r)}))}}}function x(n){return Array.isArray(n)?n[0]:n}function g(n,e){var t,r,o="__create-react-context-"+d()()+"__",i=function(n){function t(){var e;return e=n.apply(this,arguments)||this,e.emitter=h(e.props.value),e}p()(t,n);var r=t.prototype;return r.getChildContext=function(){var n;return n={},n[o]=this.emitter,n},r.componentWillReceiveProps=function(n){if(this.props.value!==n.value){var t,r=this.props.value,a=n.value;f(r,a)?t=0:(t="function"===typeof e?e(r,a):m,t|=0,0!==t&&this.emitter.set(n.value,t))}},r.render=function(){return this.props.children},t}(a["Component"]);i.childContextTypes=(t={},t[o]=l.a.object.isRequired,t);var s=function(e){function t(){var n;return n=e.apply(this,arguments)||this,n.state={value:n.getValue()},n.onUpdate=function(e,t){var r=0|n.observedBits;0!==(r&t)&&n.setState({value:n.getValue()})},n}p()(t,e);var r=t.prototype;return r.componentWillReceiveProps=function(n){var e=n.observedBits;this.observedBits=void 0===e||null===e?m:e},r.componentDidMount=function(){this.context[o]&&this.context[o].on(this.onUpdate);var n=this.props.observedBits;this.observedBits=void 0===n||null===n?m:n},r.componentWillUnmount=function(){this.context[o]&&this.context[o].off(this.onUpdate)},r.getValue=function(){return this.context[o]?this.context[o].get():n},r.render=function(){return x(this.props.children)(this.state.value)},t}(a["Component"]);return s.contextTypes=(r={},r[o]=l.a.object,r),{Provider:i,Consumer:s}}var y=o.a.createContext||g,C=y,w=t("9R94"),v=t("wx14"),b=t("vRGJ"),k=t.n(b),V=(t("TOwV"),t("zLVn")),P=t("2mql"),N=t.n(P),R=function(n){var e=C();return e.displayName=n,e},S=R("Router"),T=function(n){function e(e){var t;return t=n.call(this,e)||this,t.state={location:e.history.location},t._isMounted=!1,t._pendingLocation=null,e.staticContext||(t.unlisten=e.history.listen((function(n){t._isMounted?t.setState({location:n}):t._pendingLocation=n}))),t}Object(r["a"])(e,n),e.computeRootMatch=function(n){return{path:"/",url:"/",params:{},isExact:"/"===n}};var t=e.prototype;return t.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},t.componentWillUnmount=function(){this.unlisten&&this.unlisten()},t.render=function(){return o.a.createElement(S.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:e.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},e}(o.a.Component);var E=function(n){function e(){for(var e,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return e=n.call.apply(n,[this].concat(r))||this,e.history=Object(s["d"])(e.props),e}Object(r["a"])(e,n);var t=e.prototype;return t.render=function(){return o.a.createElement(T,{history:this.history,children:this.props.children})},e}(o.a.Component);var $=function(n){function e(){return n.apply(this,arguments)||this}Object(r["a"])(e,n);var t=e.prototype;return t.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},t.componentDidUpdate=function(n){this.props.onUpdate&&this.props.onUpdate.call(this,this,n)},t.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},t.render=function(){return null},e}(o.a.Component);function I(n){var e=n.message,t=n.when,r=void 0===t||t;return o.a.createElement(S.Consumer,null,(function(n){if(n||Object(w["a"])(!1),!r||n.staticContext)return null;var t=n.history.block;return o.a.createElement($,{onMount:function(n){n.release=t(e)},onUpdate:function(n,r){r.message!==e&&(n.release(),n.release=t(e))},onUnmount:function(n){n.release()},message:e})}))}var _={},F=1e4,O=0;function A(n){if(_[n])return _[n];var e=k.a.compile(n);return O<F&&(_[n]=e,O++),e}function M(n,e){return void 0===n&&(n="/"),void 0===e&&(e={}),"/"===n?n:A(n)(e,{pretty:!0})}function z(n){var e=n.computedMatch,t=n.to,r=n.push,a=void 0!==r&&r;return o.a.createElement(S.Consumer,null,(function(n){n||Object(w["a"])(!1);var r=n.history,i=n.staticContext,l=a?r.push:r.replace,c=Object(s["c"])(e?"string"===typeof t?M(t,e.params):Object(v["a"])({},t,{pathname:M(t.pathname,e.params)}):t);return i?(l(c),null):o.a.createElement($,{onMount:function(){l(c)},onUpdate:function(n,e){var t=Object(s["c"])(e.to);Object(s["f"])(t,Object(v["a"])({},c,{key:t.key}))||l(c)},to:t})}))}var j={},B=1e4,D=0;function L(n,e){var t=""+e.end+e.strict+e.sensitive,r=j[t]||(j[t]={});if(r[n])return r[n];var a=[],o=k()(n,a,e),i={regexp:o,keys:a};return D<B&&(r[n]=i,D++),i}function U(n,e){void 0===e&&(e={}),("string"===typeof e||Array.isArray(e))&&(e={path:e});var t=e,r=t.path,a=t.exact,o=void 0!==a&&a,i=t.strict,l=void 0!==i&&i,s=t.sensitive,c=void 0!==s&&s,p=[].concat(r);return p.reduce((function(e,t){if(!t&&""!==t)return null;if(e)return e;var r=L(t,{end:o,strict:l,sensitive:c}),a=r.regexp,i=r.keys,s=a.exec(n);if(!s)return null;var p=s[0],u=s.slice(1),d=n===p;return o&&!d?null:{path:t,url:"/"===t&&""===p?"/":p,isExact:d,params:i.reduce((function(n,e,t){return n[e.name]=u[t],n}),{})}}),null)}var K=function(n){function e(){return n.apply(this,arguments)||this}Object(r["a"])(e,n);var t=e.prototype;return t.render=function(){var n=this;return o.a.createElement(S.Consumer,null,(function(e){e||Object(w["a"])(!1);var t=n.props.location||e.location,r=n.props.computedMatch?n.props.computedMatch:n.props.path?U(t.pathname,n.props):e.match,a=Object(v["a"])({},e,{location:t,match:r}),i=n.props,l=i.children,s=i.component,c=i.render;return Array.isArray(l)&&0===l.length&&(l=null),o.a.createElement(S.Provider,{value:a},a.match?l?"function"===typeof l?l(a):l:s?o.a.createElement(s,a):c?c(a):null:"function"===typeof l?l(a):null)}))},e}(o.a.Component);function q(n){return"/"===n.charAt(0)?n:"/"+n}function W(n,e){return n?Object(v["a"])({},e,{pathname:q(n)+e.pathname}):e}function H(n,e){if(!n)return e;var t=q(n);return 0!==e.pathname.indexOf(t)?e:Object(v["a"])({},e,{pathname:e.pathname.substr(t.length)})}function G(n){return"string"===typeof n?n:Object(s["e"])(n)}function X(n){return function(){Object(w["a"])(!1)}}function Y(){}var Z=function(n){function e(){for(var e,t=arguments.length,r=new Array(t),a=0;a<t;a++)r[a]=arguments[a];return e=n.call.apply(n,[this].concat(r))||this,e.handlePush=function(n){return e.navigateTo(n,"PUSH")},e.handleReplace=function(n){return e.navigateTo(n,"REPLACE")},e.handleListen=function(){return Y},e.handleBlock=function(){return Y},e}Object(r["a"])(e,n);var t=e.prototype;return t.navigateTo=function(n,e){var t=this.props,r=t.basename,a=void 0===r?"":r,o=t.context,i=void 0===o?{}:o;i.action=e,i.location=W(a,Object(s["c"])(n)),i.url=G(i.location)},t.render=function(){var n=this.props,e=n.basename,t=void 0===e?"":e,r=n.context,a=void 0===r?{}:r,i=n.location,l=void 0===i?"/":i,c=Object(V["a"])(n,["basename","context","location"]),p={createHref:function(n){return q(t+G(n))},action:"POP",location:H(t,Object(s["c"])(l)),push:this.handlePush,replace:this.handleReplace,go:X("go"),goBack:X("goBack"),goForward:X("goForward"),listen:this.handleListen,block:this.handleBlock};return o.a.createElement(T,Object(v["a"])({},c,{history:p,staticContext:a}))},e}(o.a.Component);var Q=function(n){function e(){return n.apply(this,arguments)||this}Object(r["a"])(e,n);var t=e.prototype;return t.render=function(){var n=this;return o.a.createElement(S.Consumer,null,(function(e){e||Object(w["a"])(!1);var t,r,a=n.props.location||e.location;return o.a.Children.forEach(n.props.children,(function(n){if(null==r&&o.a.isValidElement(n)){t=n;var i=n.props.path||n.props.from;r=i?U(a.pathname,Object(v["a"])({},n.props,{path:i})):e.match}})),r?o.a.cloneElement(t,{location:a,computedMatch:r}):null}))},e}(o.a.Component);function J(n){var e="withRouter("+(n.displayName||n.name)+")",t=function(e){var t=e.wrappedComponentRef,r=Object(V["a"])(e,["wrappedComponentRef"]);return o.a.createElement(S.Consumer,null,(function(e){return e||Object(w["a"])(!1),o.a.createElement(n,Object(v["a"])({},r,e,{ref:t}))}))};return t.displayName=e,t.WrappedComponent=n,N()(t,n)}var nn=o.a.useContext;function en(){return nn(S).history}function tn(){return nn(S).location}function rn(){var n=nn(S).match;return n?n.params:{}}function an(n){return n?U(tn().pathname,n):nn(S).match}},Tz1E:function(n,e,t){var r=t("MMxC"),a=t("IVUx"),o=t("29mP"),i=t("u+7+"),l=function(){var n=o("Object","freeze");return n?n(i(null)):i(null)};r({global:!0},{compositeKey:function(){return a.apply(Object,arguments).get("object",l)}})},"U8/t":function(n,e,t){var r=t("f1E4"),a=t("tSXo"),o=t("LUyE");n.exports=function(n,e){if(r(n),a(e)&&e.constructor===n)return e;var t=o.f(n),i=t.resolve;return i(e),t.promise}},U9fH:function(n,e,t){var r=t("MMxC"),a=t("IVUx"),o=t("29mP");r({global:!0},{compositeSymbol:function(){return 1===arguments.length&&"string"===typeof arguments[0]?o("Symbol")["for"](arguments[0]):a.apply(null,arguments).get("symbol",o("Symbol"))}})},UBgR:function(n,e,t){},UClF:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r={"&lt":"<","&gt":">","&quot":'"',"&apos":"'","&amp":"&","&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},a={60:"lt",62:"gt",34:"quot",39:"apos",38:"amp"},o={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"},i=function(){function n(){}return n.prototype.encode=function(n){return n&&n.length?n.replace(/[<>"'&]/g,(function(n){return o[n]})):""},n.encode=function(e){return(new n).encode(e)},n.prototype.decode=function(n){return n&&n.length?n.replace(/&#?[0-9a-zA-Z]+;?/g,(function(n){if("#"===n.charAt(1)){var e="x"===n.charAt(2).toLowerCase()?parseInt(n.substr(3),16):parseInt(n.substr(2));return isNaN(e)||e<-32768||e>65535?"":String.fromCharCode(e)}return r[n]||n})):""},n.decode=function(e){return(new n).decode(e)},n.prototype.encodeNonUTF=function(n){if(!n||!n.length)return"";var e=n.length,t="",r=0;while(r<e){var o=n.charCodeAt(r),i=a[o];i?(t+="&"+i+";",r++):(t+=o<32||o>126?"&#"+o+";":n.charAt(r),r++)}return t},n.encodeNonUTF=function(e){return(new n).encodeNonUTF(e)},n.prototype.encodeNonASCII=function(n){if(!n||!n.length)return"";var e=n.length,t="",r=0;while(r<e){var a=n.charCodeAt(r);a<=255?t+=n[r++]:(t+="&#"+a+";",r++)}return t},n.encodeNonASCII=function(e){return(new n).encodeNonASCII(e)},n}();e.XmlEntities=i},UHn5:function(n,e,t){"use strict";var r,a=t("ukPv"),o=t("ujhg"),i=t("a5mf"),l=t("/gva"),s=t("uz3g"),c=t("tSXo"),p=t("1aI8").enforce,u=t("ZkJ9"),d=!a.ActiveXObject&&"ActiveXObject"in a,m=Object.isExtensible,f=function(n){return function(){return n(this,arguments.length?arguments[0]:void 0)}},h=n.exports=l("WeakMap",f,s);if(u&&d){r=s.getConstructor(f,"WeakMap",!0),i.REQUIRED=!0;var x=h.prototype,g=x["delete"],y=x.has,C=x.get,w=x.set;o(x,{delete:function(n){if(c(n)&&!m(n)){var e=p(this);return e.frozen||(e.frozen=new r),g.call(this,n)||e.frozen["delete"](n)}return g.call(this,n)},has:function(n){if(c(n)&&!m(n)){var e=p(this);return e.frozen||(e.frozen=new r),y.call(this,n)||e.frozen.has(n)}return y.call(this,n)},get:function(n){if(c(n)&&!m(n)){var e=p(this);return e.frozen||(e.frozen=new r),y.call(this,n)?C.call(this,n):e.frozen.get(n)}return C.call(this,n)},set:function(n,e){if(c(n)&&!m(n)){var t=p(this);t.frozen||(t.frozen=new r),y.call(this,n)?w.call(this,n,e):t.frozen.set(n,e)}else w.call(this,n,e);return this}})}},UIoa:function(n,e,t){var r=t("MMxC"),a=t("f1E4"),o=t("8Cw2"),i=t("uoF6"),l=t("1aI8"),s="Seeded Random",c=s+" Generator",p=l.set,u=l.getterFor(c),d='Math.seededPRNG() argument should have a "seed" field with a finite value.',m=i((function(n){p(this,{type:c,seed:n%2147483647})}),s,(function(){var n=u(this),e=n.seed=(1103515245*n.seed+12345)%2147483647;return{value:(1073741823&e)/1073741823,done:!1}}));r({target:"Math",stat:!0,forced:!0},{seededPRNG:function(n){var e=a(n).seed;if(!o(e))throw TypeError(d);return new m(e)}})},UPML:function(n,e){n.exports=Object.is||function(n,e){return n===e?0!==n||1/n===1/e:n!=n&&e!=e}},URK0:function(n,e,t){var r=t("Mi8B");r("Uint32",(function(n){return function(e,t,r){return n(this,e,t,r)}}))},UXQe:function(n,e,t){var r=t("MMxC"),a=t("ukPv");r({global:!0},{globalThis:a})},Uc1W:function(n,e,t){var r=t("Mi8B");r("Uint8",(function(n){return function(e,t,r){return n(this,e,t,r)}}))},"Un+d":function(n,e,t){var r=t("UwrT");n.exports=Array.isArray||function(n){return"Array"==r(n)}},Up4g:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("F6Mq")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"loading"},o.a.createElement("a",{"aria-hidden":"true",href:"#loading"},o.a.createElement("span",{className:"icon icon-link"})),"Loading"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { View } from \'remax/one\';\nimport { Loading } from \'anna-remax-ui\';\nimport { Block, Frame, Grid, GridItem } from \'../../common\';\nimport styles from \'./index.module.scss\';\n\nexport default () => {\n  return (\n    <Frame grayBg>\n      <Block title="Basic">\n        <Grid>\n          <GridItem>\n            <Loading />\n          </GridItem>\n        </Grid>\n      </Block>\n      <Block title="Type">\n        <Grid>\n          <GridItem name="anna">\n            <View className={styles.main} style={{ transform: \'translate(16px, 34px)\' }}>\n              <Loading type="anna" />\n            </View>\n          </GridItem>\n          <GridItem name="wave">\n            <View className={styles.main}>\n              <Loading type="wave" />\n            </View>\n          </GridItem>\n          <GridItem name="default">\n            <View className={styles.main}>\n              <Loading />\n            </View>\n          </GridItem>\n        </Grid>\n      </Block>\n      <Block title="Color">\n        <Grid>\n          <GridItem name="#FF9999">\n            <View className={styles.main} style={{ transform: \'translate(16px, 34px)\' }}>\n              <Loading type="anna" color="#FF9999" />\n            </View>\n          </GridItem>\n          <GridItem name="#000000">\n            <View className={styles.main}>\n              <Loading type="wave" color="#000000" />\n            </View>\n          </GridItem>\n          <GridItem name="#1890FF">\n            <View className={styles.main}>\n              <Loading color="#1890FF" />\n            </View>\n          </GridItem>\n        </Grid>\n      </Block>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Loading } from 'anna-remax-ui';\nimport { Block, Frame, Grid, GridItem } from '../../common';\nimport styles from './index.module.scss';\n\nexport default () =>\n  /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(\n        Grid,\n        null,\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          null,\n          /* #__PURE__ */ React.createElement(Loading, null),\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Type',\n      },\n      /* #__PURE__ */ React.createElement(\n        Grid,\n        null,\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'anna',\n          },\n          /* #__PURE__ */ React.createElement(\n            View,\n            {\n              className: styles.main,\n              style: {\n                transform: 'translate(16px, 34px)',\n              },\n            },\n            /* #__PURE__ */ React.createElement(Loading, {\n              type: 'anna',\n            }),\n          ),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'wave',\n          },\n          /* #__PURE__ */ React.createElement(\n            View,\n            {\n              className: styles.main,\n            },\n            /* #__PURE__ */ React.createElement(Loading, {\n              type: 'wave',\n            }),\n          ),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: 'default',\n          },\n          /* #__PURE__ */ React.createElement(\n            View,\n            {\n              className: styles.main,\n            },\n            /* #__PURE__ */ React.createElement(Loading, null),\n          ),\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Color',\n      },\n      /* #__PURE__ */ React.createElement(\n        Grid,\n        null,\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: '#FF9999',\n          },\n          /* #__PURE__ */ React.createElement(\n            View,\n            {\n              className: styles.main,\n              style: {\n                transform: 'translate(16px, 34px)',\n              },\n            },\n            /* #__PURE__ */ React.createElement(Loading, {\n              type: 'anna',\n              color: '#FF9999',\n            }),\n          ),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: '#000000',\n          },\n          /* #__PURE__ */ React.createElement(\n            View,\n            {\n              className: styles.main,\n            },\n            /* #__PURE__ */ React.createElement(Loading, {\n              type: 'wave',\n              color: '#000000',\n            }),\n          ),\n        ),\n        /* #__PURE__ */ React.createElement(\n          GridItem,\n          {\n            name: '#1890FF',\n          },\n          /* #__PURE__ */ React.createElement(\n            View,\n            {\n              className: styles.main,\n            },\n            /* #__PURE__ */ React.createElement(Loading, {\n              color: '#1890FF',\n            }),\n          ),\n        ),\n      ),\n    ),\n  );\n"}},{path:"/_demos/index-14",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"index.module.scss":{path:"./index.module.scss",content:"\n.main{\n  height: 60px;\n}\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"loading-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#loading-1"},o.a.createElement("span",{className:"icon icon-link"})),"Loading"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"type"),o.a.createElement("td",null,"\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a ",o.a.createElement("code",null,"anna")," ",o.a.createElement("code",null,"wave")),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"color"),o.a.createElement("td",null,"\u989c\u8272"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-"))))))}},Uq4z:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("cT1L"),l=t("jbR1"),s=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{reduce:function(n){var e=o(this),t=l(e),r=arguments.length<2,a=r?void 0:arguments[1];if(i(n),s(t,(function(t){r?(r=!1,a=t):a=n(a,t,t,e)}),void 0,!1,!0),r)throw TypeError("Reduce of empty set with no initial value");return a}})},Uuu5:function(n,e,t){},UvYY:function(n,e,t){var r=t("MMxC"),a=t("ls1J"),o=t("f1E4"),i=t("Acmb"),l=a.has,s=a.toKey,c=function(n,e,t){var r=l(n,e,t);if(r)return!0;var a=i(e);return null!==a&&c(n,a,t)};r({target:"Reflect",stat:!0},{hasMetadata:function(n,e){var t=arguments.length<3?void 0:s(arguments[2]);return c(n,o(e),t)}})},UwrT:function(n,e){var t={}.toString;n.exports=function(n){return t.call(n).slice(8,-1)}},"V/vL":function(n,e,t){"use strict";t.r(e),t.d(e,"matchRoutes",(function(){return l})),t.d(e,"renderRoutes",(function(){return s}));var r=t("Ty5D"),a=t("wx14"),o=t("q1tI"),i=t.n(o);function l(n,e,t){return void 0===t&&(t=[]),n.some((function(n){var a=n.path?Object(r["j"])(e,n):t.length?t[t.length-1].match:r["e"].computeRootMatch(e);return a&&(t.push({route:n,match:a}),n.routes&&l(n.routes,e,t)),a})),t}function s(n,e,t){return void 0===e&&(e={}),void 0===t&&(t={}),n?i.a.createElement(r["g"],t,n.map((function(n,t){return i.a.createElement(r["d"],{key:n.key||t,path:n.path,exact:n.exact,strict:n.strict,render:function(t){return n.render?n.render(Object(a["a"])({},t,{},e,{route:n})):i.a.createElement(n.component,Object(a["a"])({},t,e,{route:n}))}})}))):null}},V0Bj:function(n,e,t){var r=t("I65O");r("observable")},V93i:function(n,e,t){"use strict";n.exports=function(n){return encodeURIComponent(n).replace(/[!'()*]/g,(function(n){return"%".concat(n.charCodeAt(0).toString(16).toUpperCase())}))}},VCU9:function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));var r=t("LtsZ"),a=new r["Plugin"]({validKeys:["patchRoutes","rootContainer","render","onRouteChange"]})},VGuW:function(n,e,t){},VQRL:function(n,e,t){var r=t("I65O");r("replace")},VSU6:function(n,e,t){"use strict";var r=t("cTDu"),a=t("bIKR"),o=t("oa35");n.exports=function(n){var e=r(this),t=o(e.length),i=arguments.length,l=a(i>1?arguments[1]:void 0,t),s=i>2?arguments[2]:void 0,c=void 0===s?t:a(s,t);while(c>l)e[l++]=n;return e}},VUky:function(n,e,t){var r=t("MMxC"),a=t("qA1w");r({target:"Map",stat:!0},{of:a})},VXy1:function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t("f4X2"),i=t("IOv4");e["default"]=()=>{var n=a["useState"](""),e=Object(r["a"])(n,2),t=e[0],l=e[1],s=a["useState"](""),c=Object(r["a"])(s,2),p=c[0],u=c[1],d=a["useState"](""),m=Object(r["a"])(d,2),f=m[0],h=m[1];return a["createElement"](i["b"],{padding:!0},a["createElement"](i["a"],{noTitlePadding:!0,title:"Basic"},a["createElement"](o["p"],{placeholder:"\u641c\u7d22",value:t,onInput:n=>l(n),onClear:()=>l("")})),a["createElement"](i["a"],{noTitlePadding:!0,title:"Show action button"},a["createElement"](o["p"],{placeholder:"\u641c\u7d22",keepShowActionButton:!0,value:p,onInput:n=>u(n),onClear:()=>u("")})),a["createElement"](i["a"],{noTitlePadding:!0,title:"Custom action text"},a["createElement"](o["p"],{placeholder:"\u641c\u7d22",actionName:"\u641c\u7d22",value:f,onInput:n=>h(n),onClear:()=>h(""),onSubmit:()=>{},onActionClick:()=>console.log("action")})),a["createElement"](i["a"],{noTitlePadding:!0,title:"Size"},a["createElement"](o["p"],{size:"large",placeholder:"large",style:{marginBottom:"0.94rem"}}),a["createElement"](o["p"],{placeholder:"default",style:{marginBottom:"0.94rem"}}),a["createElement"](o["p"],{size:"small",placeholder:"small"})),a["createElement"](i["a"],{noTitlePadding:!0,title:"Custom input style"},a["createElement"](o["p"],{placeholder:"\u641c\u7d22",inputStyle:{backgroundColor:"#333"}})))}},VbXa:function(n,e){function t(n,e){n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.__proto__=e}n.exports=t},Vou3:function(n,e,t){(function(e,r){n.exports=r(t("sxGJ"),t("17x9"),t("q1tI"),t("i8i4"))})(0,(function(n,e,t,r){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return n[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(r,a,function(e){return n[e]}.bind(null,a));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="./index.js")}({"./index.js":function(n,e,t){"use strict";t.r(e);var r=t("react"),a=t.n(r),o=t("react-dom"),i=t.n(o),l=t("prop-types"),s=t.n(l);function c(n){return c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},c(n)}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},r=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})))),r.forEach((function(e){C(n,e,t[e])}))}return n}function u(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function d(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function m(n,e,t){return e&&d(n.prototype,e),t&&d(n,t),n}function f(n,e){return!e||"object"!==c(e)&&"function"!==typeof e?h(n):e}function h(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function x(n){return x=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)},x(n)}function g(n,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&y(n,e)}function y(n,e){return y=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n},y(n,e)}function C(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var w=function(n){function e(){return u(this,e),f(this,x(e).apply(this,arguments))}return g(e,n),m(e,[{key:"propsWith",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t={};return Object.keys(this.props).forEach((function(r){if(-1!==r.search(n)){var a=e?r.replace(n,""):r;t[a]=this.props[r]}}),this),t}},{key:"componentWillUnmount",value:function(){this.clipboard&&this.clipboard.destroy()}},{key:"componentDidMount",value:function(){var n=this.props.options||this.propsWith(/^option-/,!0),e=i.a.findDOMNode(this.element);if(e){var r=t("clipboard");this.clipboard=new r(e,n);var a=this.propsWith(/^on/,!0);Object.keys(a).forEach((function(n){this.clipboard.on(n.toLowerCase(),this.props["on"+n])}),this)}}},{key:"render",value:function(){var n=this,e=p({title:this.props.title||"",type:this.getType(),className:this.props.className||"",style:this.props.style||{},ref:function(e){return n.element=e},onClick:this.props.onClick},this.propsWith(/^data-/),this.propsWith(/^button-/,!0)),r=t("clipboard");return this.props.isVisibleWhenUnsupported||r.isSupported()?a.a.createElement(this.getComponent(),e,this.props.children):null}},{key:"getType",value:function(){return"button"===this.getComponent()||"input"===this.getComponent()?this.props.type||"button":void 0}},{key:"getComponent",value:function(){return this.props.component||"button"}}]),e}(a.a.Component);C(w,"propTypes",{options:function(n,e,t){var r=n[e];if(r&&"object"!==c(r)||Array.isArray(r))return new Error("Invalid props '".concat(e,"' supplied to '").concat(t,"'. ")+"'".concat(e,"' is not an object."));if(void 0!==n["option-text"]){var a=n["option-text"];if("function"!==typeof a)return new Error("Invalid props 'option-text' supplied to '".concat(t,"'. ")+"'option-text' is not a function.")}},title:s.a.string,type:s.a.string,className:s.a.string,style:s.a.object,component:s.a.any,children:s.a.any}),C(w,"defaultProps",{isVisibleWhenUnsupported:!0,onClick:function(){}}),e["default"]=w},clipboard:function(e,t){e.exports=n},"prop-types":function(n,t){n.exports=e},react:function(n,e){n.exports=t},"react-dom":function(n,e){n.exports=r}})}))},VqQD:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t("YCKM"),o=t("f4X2"),i=t("IOv4"),l=t("LQzi"),s=t.n(l);e["default"]=()=>r["createElement"](i["b"],{grayBg:!0,padding:!0},r["createElement"](i["a"],{title:"Basic"},r["createElement"](o["b"],null,r["createElement"](a["d"],{className:s.a.row},"Card content"),r["createElement"](a["d"],{className:s.a.row},"Card content"),r["createElement"](a["d"],{className:s.a.row},"Card content"))),r["createElement"](i["a"],{title:"With Title"},r["createElement"](o["b"],{title:"title"},r["createElement"](a["d"],{className:s.a.row},"Card content"),r["createElement"](a["d"],{className:s.a.row},"Card content"),r["createElement"](a["d"],{className:s.a.row},"Card content"))),r["createElement"](i["a"],{title:"With Extra"},r["createElement"](o["b"],{title:"title",extra:r["createElement"](a["d"],{className:s.a.extra},"status")},r["createElement"](a["d"],{className:s.a.row},"Card content"),r["createElement"](a["d"],{className:s.a.row},"Card content"),r["createElement"](a["d"],{className:s.a.row},"Card content"))))},VuYY:function(n,e,t){"use strict";var r=t("MMxC"),a=t("tny8"),o=t("ssJt"),i=t("cT1L"),l=t("f1E4"),s=t("tSXo"),c=t("igoe"),p=t("YfKC").f,u=t("lz10"),d=t("ujhg"),m=t("qcmB"),f=t("IuhT"),h=t("dnEI"),x=t("2kyd"),g=t("1aI8"),y=x("observable"),C=g.get,w=g.set,v=function(n){return null==n?void 0:i(n)},b=function(n){var e=n.cleanup;if(e){n.cleanup=void 0;try{e()}catch(t){h(t)}}},k=function(n){return void 0===n.observer},V=function(n,e){if(!a){n.closed=!0;var t=e.subscriptionObserver;t&&(t.closed=!0)}e.observer=void 0},P=function(n,e){var t,r=w(this,{cleanup:void 0,observer:l(n),subscriptionObserver:void 0});a||(this.closed=!1);try{(t=v(n.start))&&t.call(n,this)}catch(p){h(p)}if(!k(r)){var o=r.subscriptionObserver=new N(this);try{var s=e(o),c=s;null!=s&&(r.cleanup="function"===typeof s.unsubscribe?function(){c.unsubscribe()}:i(s))}catch(p){return void o.error(p)}k(r)&&b(r)}};P.prototype=d({},{unsubscribe:function(){var n=C(this);k(n)||(V(this,n),b(n))}}),a&&p(P.prototype,"closed",{configurable:!0,get:function(){return k(C(this))}});var N=function(n){w(this,{subscription:n}),a||(this.closed=!1)};N.prototype=d({},{next:function(n){var e=C(C(this).subscription);if(!k(e)){var t=e.observer;try{var r=v(t.next);r&&r.call(t,n)}catch(a){h(a)}}},error:function(n){var e=C(this).subscription,t=C(e);if(!k(t)){var r=t.observer;V(e,t);try{var a=v(r.error);a?a.call(r,n):h(n)}catch(o){h(o)}b(t)}},complete:function(){var n=C(this).subscription,e=C(n);if(!k(e)){var t=e.observer;V(n,e);try{var r=v(t.complete);r&&r.call(t)}catch(a){h(a)}b(e)}}}),a&&p(N.prototype,"closed",{configurable:!0,get:function(){return k(C(C(this).subscription))}});var R=function(n){c(this,R,"Observable"),w(this,{subscriber:i(n)})};d(R.prototype,{subscribe:function(n){var e=arguments.length;return new P("function"===typeof n?{next:n,error:e>1?arguments[1]:void 0,complete:e>2?arguments[2]:void 0}:s(n)?n:{},C(this).subscriber)}}),d(R,{from:function(n){var e="function"===typeof this?this:R,t=v(l(n)[y]);if(t){var r=l(t.call(n));return r.constructor===e?r:new e((function(n){return r.subscribe(n)}))}var a=m(n);return new e((function(n){f(a,(function(e){if(n.next(e),n.closed)return f.stop()}),void 0,!1,!0),n.complete()}))},of:function(){var n="function"===typeof this?this:R,e=arguments.length,t=new Array(e),r=0;while(r<e)t[r]=arguments[r++];return new n((function(n){for(var r=0;r<e;r++)if(n.next(t[r]),n.closed)return;n.complete()}))}}),u(R.prototype,y,(function(){return this})),r({global:!0},{Observable:R}),o("Observable")},VvX1:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("7BAe"),c=t("/dTS"),p=t("PPXv"),u=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{mapKeys:function(n){var e=i(this),t=p(e),r=s(n,arguments.length>1?arguments[1]:void 0,3),a=new(c(e,o("Map"))),d=l(a.set);return u(t,(function(n,t){d.call(a,r(t,n,e),t)}),void 0,!0,!0),a}})},W5nr:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("zfr2")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"popup"},o.a.createElement("a",{"aria-hidden":"true",href:"#popup"},o.a.createElement("span",{className:"icon icon-link"})),"Popup"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { View } from \'remax/one\';\nimport { Popup, Button } from \'anna-remax-ui\';\nimport { Block, Frame } from \'../../common\';\n\nexport default () => {\n  const [show, setShow] = React.useState(false);\n  const [show1, setShow1] = React.useState(false);\n  const [show2, setShow2] = React.useState(false);\n  const [show3, setShow3] = React.useState(false);\n  const [show4, setShow4] = React.useState(false);\n\n  return (\n    <Frame padding style={{ overflow: \'hidden\' }}>\n      <Block title="Basic">\n        <Button type="primary" size="large" block onTap={() => setShow(true)}>\n          Click here\n        </Button>\n      </Block>\n      <Block title="With Title">\n        <Button type="primary" size="large" block onTap={() => setShow1(true)}>\n          Click here\n        </Button>\n      </Block>\n      <Block title="Closeable">\n        <Button type="primary" size="large" block onTap={() => setShow2(true)}>\n          Click here\n        </Button>\n      </Block>\n      <Block title="Position">\n        <Button type="primary" size="large" block onTap={() => setShow3(true)}>\n          Left\n        </Button>\n      </Block>\n      <Block title="Curve">\n        <Button type="primary" size="large" block onTap={() => setShow4(true)}>\n          Click here\n        </Button>\n      </Block>\n      <Popup\n        open={show}\n        onClose={() => {\n          setShow(false);\n        }}\n      >\n        <View\n          style={{\n            height: \'400px\',\n            padding: \'30px 24px\',\n          }}\n        >\n          content\n        </View>\n      </Popup>\n      <Popup\n        title="title"\n        open={show1}\n        onClose={() => {\n          setShow1(false);\n        }}\n      >\n        <View\n          style={{\n            height: \'400px\',\n            padding: \'0 24px\',\n          }}\n        >\n          content\n        </View>\n      </Popup>\n      <Popup\n        title="title"\n        closeable\n        open={show2}\n        onClose={() => {\n          setShow2(false);\n        }}\n      >\n        <View\n          style={{\n            height: \'400px\',\n            padding: \'0 24px\',\n          }}\n        >\n          content\n        </View>\n      </Popup>\n      <Popup\n        position="left"\n        title="title"\n        open={show3}\n        onClose={() => {\n          setShow3(false);\n        }}\n      >\n        <View\n          style={{\n            width: \'400px\',\n            padding: \'0 24px\',\n          }}\n        ></View>\n      </Popup>\n      <Popup\n        position="top"\n        title="title"\n        open={show4}\n        onClose={() => {\n          setShow4(false);\n        }}\n      >\n        <View\n          style={{\n            height: \'400px\',\n            padding: \'0 24px\',\n          }}\n        >\n          content\n        </View>\n      </Popup>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Popup, Button } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nexport default () => {\n  const [show, setShow] = React.useState(false);\n  const [show1, setShow1] = React.useState(false);\n  const [show2, setShow2] = React.useState(false);\n  const [show3, setShow3] = React.useState(false);\n  const [show4, setShow4] = React.useState(false);\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      padding: true,\n      style: {\n        overflow: 'hidden',\n      },\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(\n        Button,\n        {\n          type: 'primary',\n          size: 'large',\n          block: true,\n          onTap: () => setShow(true),\n        },\n        'Click here',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Title',\n      },\n      /* #__PURE__ */ React.createElement(\n        Button,\n        {\n          type: 'primary',\n          size: 'large',\n          block: true,\n          onTap: () => setShow1(true),\n        },\n        'Click here',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Closeable',\n      },\n      /* #__PURE__ */ React.createElement(\n        Button,\n        {\n          type: 'primary',\n          size: 'large',\n          block: true,\n          onTap: () => setShow2(true),\n        },\n        'Click here',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Position',\n      },\n      /* #__PURE__ */ React.createElement(\n        Button,\n        {\n          type: 'primary',\n          size: 'large',\n          block: true,\n          onTap: () => setShow3(true),\n        },\n        'Left',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Curve',\n      },\n      /* #__PURE__ */ React.createElement(\n        Button,\n        {\n          type: 'primary',\n          size: 'large',\n          block: true,\n          onTap: () => setShow4(true),\n        },\n        'Click here',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Popup,\n      {\n        open: show,\n        onClose: () => {\n          setShow(false);\n        },\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          style: {\n            height: '400px',\n            padding: '30px 24px',\n          },\n        },\n        'content',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Popup,\n      {\n        title: 'title',\n        open: show1,\n        onClose: () => {\n          setShow1(false);\n        },\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          style: {\n            height: '400px',\n            padding: '0 24px',\n          },\n        },\n        'content',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Popup,\n      {\n        title: 'title',\n        closeable: true,\n        open: show2,\n        onClose: () => {\n          setShow2(false);\n        },\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          style: {\n            height: '400px',\n            padding: '0 24px',\n          },\n        },\n        'content',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Popup,\n      {\n        position: 'left',\n        title: 'title',\n        open: show3,\n        onClose: () => {\n          setShow3(false);\n        },\n      },\n      /* #__PURE__ */ React.createElement(View, {\n        style: {\n          width: '400px',\n          padding: '0 24px',\n        },\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Popup,\n      {\n        position: 'top',\n        title: 'title',\n        open: show4,\n        onClose: () => {\n          setShow4(false);\n        },\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          style: {\n            height: '400px',\n            padding: '0 24px',\n          },\n        },\n        'content',\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-15",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"popup-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#popup-1"},o.a.createElement("span",{className:"icon icon-link"})),"Popup"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"open"),o.a.createElement("td",null,"\u662f\u5426\u6253\u5f00\u5f39\u51fa\u5c42"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"title"),o.a.createElement("td",null,"\u5f39\u51fa\u5c42\u6807\u9898"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"closeable"),o.a.createElement("td",null,"\u662f\u5426\u663e\u793a\u5173\u95ed\u56fe\u6807"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"position"),o.a.createElement("td",null,"\u5f39\u51fa\u4f4d\u7f6e\uff0c\u53ef\u9009\u503c\u4e3a ",o.a.createElement("code",null,"top")," ",o.a.createElement("code",null,"bottom")," ",o.a.createElement("code",null,"right")," ",o.a.createElement("code",null,"left")),o.a.createElement("td",null,"string"),o.a.createElement("td",null,o.a.createElement("code",null,"bottom"))),o.a.createElement("tr",null,o.a.createElement("td",null,"mask"),o.a.createElement("td",null,"\u662f\u5426\u663e\u793a\u906e\u7f69\u5c42"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"true"))),o.a.createElement("tr",null,o.a.createElement("td",null,"square"),o.a.createElement("td",null,"\u662f\u5426\u53bb\u9664\u5706\u89d2"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"curve"),o.a.createElement("td",null,"\u52a8\u753b\u66f2\u7ebf\uff0c\u53ef\u9009\u503c\u4e3a ",o.a.createElement("code",null,"ease")),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u8bbe\u7f6e\u5f39\u51fa\u5c42\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onClose"),o.a.createElement("td",null,"\u5173\u95ed\u5f39\u51fa\u5c42\u65f6\u89e6\u53d1"),o.a.createElement("td",null,"() => void"),o.a.createElement("td",null,"-"))))))}},WDra:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("ousD")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"input"},o.a.createElement("a",{"aria-hidden":"true",href:"#input"},o.a.createElement("span",{className:"icon icon-link"})),"Input"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { Input } from \'anna-remax-ui\';\nimport { Block, Frame } from \'../../common\';\n\nexport default () => {\n  return (\n    <Frame grayBg>\n      <Block title="Basic">\n        <Input placeholder="Please enter" border={false} />\n      </Block>\n      <Block title="With Label">\n        <Input label="Text" placeholder="Please enter" border={false} />\n      </Block>\n      <Block title="inputAlign">\n        <Input label="Text" placeholder="Please enter" border={false} inputAlign="right" />\n      </Block>\n      <Block title="Type">\n        <Input label="Number" placeholder="Please enter" border={false} type="number" />\n      </Block>\n      <Block title="Disabled">\n        <Input label="Text" disabled placeholder="Please enter" value="read only" />\n        <Input label="Text" disabled placeholder="Has been disabled" border={false} />\n      </Block>\n      <Block title="With Required">\n        <Input label="Phone" placeholder="Please enter" border={false} required />\n      </Block>\n      <Block title="With Icon">\n        <Input label="location" placeholder="Please enter" border={false} icon="location" />\n      </Block>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { Input } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nexport default () =>\n  /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(Input, {\n        placeholder: 'Please enter',\n        border: false,\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Label',\n      },\n      /* #__PURE__ */ React.createElement(Input, {\n        label: 'Text',\n        placeholder: 'Please enter',\n        border: false,\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'inputAlign',\n      },\n      /* #__PURE__ */ React.createElement(Input, {\n        label: 'Text',\n        placeholder: 'Please enter',\n        border: false,\n        inputAlign: 'right',\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Type',\n      },\n      /* #__PURE__ */ React.createElement(Input, {\n        label: 'Number',\n        placeholder: 'Please enter',\n        border: false,\n        type: 'number',\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Disabled',\n      },\n      /* #__PURE__ */ React.createElement(Input, {\n        label: 'Text',\n        disabled: true,\n        placeholder: 'Please enter',\n        value: 'read only',\n      }),\n      /* #__PURE__ */ React.createElement(Input, {\n        label: 'Text',\n        disabled: true,\n        placeholder: 'Has been disabled',\n        border: false,\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Required',\n      },\n      /* #__PURE__ */ React.createElement(Input, {\n        label: 'Phone',\n        placeholder: 'Please enter',\n        border: false,\n        required: true,\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Icon',\n      },\n      /* #__PURE__ */ React.createElement(Input, {\n        label: 'location',\n        placeholder: 'Please enter',\n        border: false,\n        icon: 'location',\n      }),\n    ),\n  );\n"}},{path:"/_demos/index-6",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u8f93\u5165\u6846\u5185\u5bb9"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"type"),o.a.createElement("td",null,"\u8f93\u5165\u6846\u7c7b\u578b"),o.a.createElement("td",null,o.a.createElement("code",null,"text")," | ",o.a.createElement("code",null,"number")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"className"),o.a.createElement("td",null,"\u8f93\u5165\u6846\u7c7b\u540d"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"placeholder"),o.a.createElement("td",null,"\u5360\u4f4d\u63d0\u793a\u6587\u5b57"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"disabled"),o.a.createElement("td",null,"\u662f\u5426\u7981\u7528"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"inputAlign"),o.a.createElement("td",null,"\u8f93\u5165\u6846\u5185\u5bb9\u5bf9\u9f50\u65b9\u5f0f"),o.a.createElement("td",null,o.a.createElement("code",null,"center")," | ",o.a.createElement("code",null,"right")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"label"),o.a.createElement("td",null,"\u5de6\u4fa7\u6807\u7b7e"),o.a.createElement("td",null,o.a.createElement("code",null,"string")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"icon"),o.a.createElement("td",null,"\u5de6\u4fa7\u56fe\u6807\u540d\u79f0"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"required"),o.a.createElement("td",null,"\u662f\u5426\u663e\u793a\u8868\u5355\u5fc5\u586b\u661f\u53f7"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"border"),o.a.createElement("td",null,"\u662f\u5426\u663e\u793a\u5185\u8fb9\u6846"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"true"))),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"value \u6539\u53d8\u65f6\u89e6\u53d1 change \u4e8b\u4ef6"),o.a.createElement("td",null,"(v) => void"),o.a.createElement("td",null,"-"))))))}},WJ3H:function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(e){return{error:!0,value:e}}}},WOAq:function(n,e,t){"use strict";(function(n){var r=t("Ju5/"),a=t("L3Qv"),o="object"==typeof exports&&exports&&!exports.nodeType&&exports,i=o&&"object"==typeof n&&n&&!n.nodeType&&n,l=i&&i.exports===o,s=l?r["a"].Buffer:void 0,c=s?s.isBuffer:void 0,p=c||a["a"];e["a"]=p}).call(this,t("dAyf")(n))},WQuA:function(n,e,t){"use strict";var r=t("MMxC"),a=t("tny8"),o=t("i7kj"),i=t("cTDu"),l=t("gFfw"),s=t("Acmb"),c=t("g8rt").f;a&&r({target:"Object",proto:!0,forced:o},{__lookupSetter__:function(n){var e,t=i(this),r=l(n,!0);do{if(e=c(t,r))return e.set}while(t=s(t))}})},WbBG:function(n,e,t){"use strict";var r="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";n.exports=r},WmNS:function(n,e,t){n.exports=t("ls82")},X5kU:function(n,e,t){"use strict";var r=t("tSXo"),a=t("YfKC"),o=t("Acmb"),i=t("2kyd"),l=i("hasInstance"),s=Function.prototype;l in s||a.f(s,l,{value:function(n){if("function"!=typeof this||!r(n))return!1;if(!r(this.prototype))return n instanceof this;while(n=o(n))if(this.prototype===n)return!0;return!1}})},X6vt:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Un+d"),o=[].reverse,i=[1,2];r({target:"Array",proto:!0,forced:String(i)===String(i.reverse())},{reverse:function(){return a(this)&&(this.length=this.length),o.call(this)}})},XWE6:function(n,e){function t(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}n.exports=t},XX5T:function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},Xn8V:function(n,e,t){"use strict";var r=t("MMxC"),a=t("ukPv"),o=t("29mP"),i=t("Zcjx"),l=t("tny8"),s=t("Fs9M"),c=t("wgKq"),p=t("MVys"),u=t("jtLI"),d=t("Un+d"),m=t("tSXo"),f=t("f1E4"),h=t("cTDu"),x=t("0qr0"),g=t("gFfw"),y=t("HhvW"),C=t("u+7+"),w=t("P0e2"),v=t("uGHk"),b=t("IGnA"),k=t("kyO0"),V=t("g8rt"),P=t("YfKC"),N=t("e3V2"),R=t("lz10"),S=t("NMFW"),T=t("xxaU"),E=t("CjUg"),$=t("6ixQ"),I=t("evbn"),_=t("2kyd"),F=t("IjB0"),O=t("I65O"),A=t("kiNa"),M=t("1aI8"),z=t("zv1X").forEach,j=E("hidden"),B="Symbol",D="prototype",L=_("toPrimitive"),U=M.set,K=M.getterFor(B),q=Object[D],W=a.Symbol,H=o("JSON","stringify"),G=V.f,X=P.f,Y=b.f,Z=N.f,Q=T("symbols"),J=T("op-symbols"),nn=T("string-to-symbol-registry"),en=T("symbol-to-string-registry"),tn=T("wks"),rn=a.QObject,an=!rn||!rn[D]||!rn[D].findChild,on=l&&p((function(){return 7!=C(X({},"a",{get:function(){return X(this,"a",{value:7}).a}})).a}))?function(n,e,t){var r=G(q,e);r&&delete q[e],X(n,e,t),r&&n!==q&&X(q,e,r)}:X,ln=function(n,e){var t=Q[n]=C(W[D]);return U(t,{type:B,tag:n,description:e}),l||(t.description=e),t},sn=c?function(n){return"symbol"==typeof n}:function(n){return Object(n)instanceof W},cn=function(n,e,t){n===q&&cn(J,e,t),f(n);var r=g(e,!0);return f(t),u(Q,r)?(t.enumerable?(u(n,j)&&n[j][r]&&(n[j][r]=!1),t=C(t,{enumerable:y(0,!1)})):(u(n,j)||X(n,j,y(1,{})),n[j][r]=!0),on(n,r,t)):X(n,r,t)},pn=function(n,e){f(n);var t=x(e),r=w(t).concat(hn(t));return z(r,(function(e){l&&!dn.call(t,e)||cn(n,e,t[e])})),n},un=function(n,e){return void 0===e?C(n):pn(C(n),e)},dn=function(n){var e=g(n,!0),t=Z.call(this,e);return!(this===q&&u(Q,e)&&!u(J,e))&&(!(t||!u(this,e)||!u(Q,e)||u(this,j)&&this[j][e])||t)},mn=function(n,e){var t=x(n),r=g(e,!0);if(t!==q||!u(Q,r)||u(J,r)){var a=G(t,r);return!a||!u(Q,r)||u(t,j)&&t[j][r]||(a.enumerable=!0),a}},fn=function(n){var e=Y(x(n)),t=[];return z(e,(function(n){u(Q,n)||u($,n)||t.push(n)})),t},hn=function(n){var e=n===q,t=Y(e?J:x(n)),r=[];return z(t,(function(n){!u(Q,n)||e&&!u(q,n)||r.push(Q[n])})),r};if(s||(W=function(){if(this instanceof W)throw TypeError("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=I(n),t=function(n){this===q&&t.call(J,n),u(this,j)&&u(this[j],e)&&(this[j][e]=!1),on(this,e,y(1,n))};return l&&an&&on(q,e,{configurable:!0,set:t}),ln(e,n)},S(W[D],"toString",(function(){return K(this).tag})),S(W,"withoutSetter",(function(n){return ln(I(n),n)})),N.f=dn,P.f=cn,V.f=mn,v.f=b.f=fn,k.f=hn,F.f=function(n){return ln(_(n),n)},l&&(X(W[D],"description",{configurable:!0,get:function(){return K(this).description}}),i||S(q,"propertyIsEnumerable",dn,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!s,sham:!s},{Symbol:W}),z(w(tn),(function(n){O(n)})),r({target:B,stat:!0,forced:!s},{for:function(n){var e=String(n);if(u(nn,e))return nn[e];var t=W(e);return nn[e]=t,en[t]=e,t},keyFor:function(n){if(!sn(n))throw TypeError(n+" is not a symbol");if(u(en,n))return en[n]},useSetter:function(){an=!0},useSimple:function(){an=!1}}),r({target:"Object",stat:!0,forced:!s,sham:!l},{create:un,defineProperty:cn,defineProperties:pn,getOwnPropertyDescriptor:mn}),r({target:"Object",stat:!0,forced:!s},{getOwnPropertyNames:fn,getOwnPropertySymbols:hn}),r({target:"Object",stat:!0,forced:p((function(){k.f(1)}))},{getOwnPropertySymbols:function(n){return k.f(h(n))}}),H){var xn=!s||p((function(){var n=W();return"[null]"!=H([n])||"{}"!=H({a:n})||"{}"!=H(Object(n))}));r({target:"JSON",stat:!0,forced:xn},{stringify:function(n,e,t){var r,a=[n],o=1;while(arguments.length>o)a.push(arguments[o++]);if(r=e,(m(e)||void 0!==n)&&!sn(n))return d(e)||(e=function(n,e){if("function"==typeof r&&(e=r.call(this,n,e)),!sn(e))return e}),a[1]=e,H.apply(null,a)}})}W[D][L]||R(W[D],L,W[D].valueOf),A(W,B),$[j]=!0},XqMk:function(n,e,t){"use strict";(function(n){var t="object"==typeof n&&n&&n.Object===Object&&n;e["a"]=t}).call(this,t("Zeyf"))},"Xxk+":function(n,e,t){var r=t("MMxC"),a=t("aF2d");r({target:"WeakSet",stat:!0},{from:a})},Y2Fy:function(n,e,t){"use strict";function r(n){return r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var a=p(t("q1tI")),o=t("ArA+"),i=s(t("iZJ2")),l=s(t("+t3K"));function s(n){return n&&n.__esModule?n:{default:n}}function c(){if("function"!==typeof WeakMap)return null;var n=new WeakMap;return c=function(){return n},n}function p(n){if(n&&n.__esModule)return n;if(null===n||"object"!==r(n)&&"function"!==typeof n)return{default:n};var e=c();if(e&&e.has(n))return e.get(n);var t={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in n)if(Object.prototype.hasOwnProperty.call(n,o)){var i=a?Object.getOwnPropertyDescriptor(n,o):null;i&&(i.get||i.set)?Object.defineProperty(t,o,i):t[o]=n[o]}return t["default"]=n,e&&e.set(n,t),t}t("Mz97");var u=function(n){var e=n.onMobileMenuClick,t=n.navPrefix,r=(0,a.useContext)(l["default"]),s=(r.locale,r.rootPath),c=r.mode,p=r.title,u=r.logo,d=(r.locales,r.navs);return a["default"].createElement("div",{className:"__dumi-default-navbar","data-mode":c},a["default"].createElement("button",{className:"__dumi-default-navbar-toggle",onClick:e}),a["default"].createElement(o.Link,{className:"__dumi-default-navbar-logo",style:{backgroundImage:u&&"url('".concat(u,"')")},to:s},p),a["default"].createElement("nav",null,t,d.map((function(n){return/^\/[\w-]/.test(n.path)?a["default"].createElement(o.NavLink,{to:n.path,key:n.path},n.title):a["default"].createElement("a",{target:"_blank",href:n.path,key:n.path},n.title,a["default"].createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},a["default"].createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),a["default"].createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})))})),a["default"].createElement(i["default"],null)))},d=u;e["default"]=d},Y3g6:function(n,e,t){var r=t("f1E4");n.exports=function(n,e,t,a){try{return a?e(r(t)[0],t[1]):e(t)}catch(i){var o=n["return"];throw void 0!==o&&r(o.call(n)),i}}},YCKM:function(n,e,t){"use strict";t.d(e,"a",(function(){return B})),t.d(e,"b",(function(){return K})),t.d(e,"c",(function(){return Z})),t.d(e,"d",(function(){return tn}));var r=t("q1tI");function a(n){var e,t,r="";if(n)if("object"===typeof n)if(Array.isArray(n))for(e=0;e<n.length;e++)n[e]&&(t=a(n[e]))&&(r&&(r+=" "),r+=t);else for(e in n)n[e]&&(t=a(e))&&(r&&(r+=" "),r+=t);else"boolean"===typeof n||n.call||(r&&(r+=" "),r+=n);return r}var o=function(){var n,e=0,t="";while(e<arguments.length)(n=a(arguments[e++]))&&(t&&(t+=" "),t+=n);return t},i=function(n){return n.match(/^(ali|wechat|toutiao)-/)},l=function(n){return n.replace(/^web-/,"")};function s(n){return Object.keys(n).reduce((function(e,t){var r=t;return"web"==={NODE_ENV:'"production"',REMAX_PLATFORM:'"web"'}.REMAX_PLATFORM&&(r=l(t)),i(r)||(e[r]=n[t]),e}),{})}var c=350,p=function(n,e){var t="function"===typeof Symbol&&n[Symbol.iterator];if(!t)return n;var r,a,o=t.call(n),i=[];try{while((void 0===e||e-- >0)&&!(r=o.next()).done)i.push(r.value)}catch(l){a={error:l}}finally{try{r&&!r.done&&(t=o["return"])&&t.call(o)}finally{if(a)throw a.error}}return i};function u(n){var e=n.hoverDuration,t=n.hoverDelay,a=n.onLongTap,o=n.onTouchCancel,i=n.onTouchEnd,l=n.onTouchMove,s=n.onTouchStart,u=p(r["useState"](!1),2),d=u[0],m=u[1],f=r["useRef"](!1),h=r["useRef"]([]);function x(n,e){var t=setTimeout((function(){n(),h.current.filter((function(n){return n!==t}))}),e);h.current.push(t)}function g(n){if(f.current=!0,x((function(){f.current&&m(!0)}),t),x((function(){f.current&&"function"===typeof a&&a(n)}),c),"function"===typeof s)return s(n)}function y(n){if(f.current=!1,x((function(){d&&m(!1)}),e),"function"===typeof l)return l(n)}function C(n){if(f.current=!1,x((function(){d&&m(!1)}),e),"function"===typeof i)return i(n)}function w(n){if(f.current=!1,x((function(){d&&m(!1)}),e),"function"===typeof o)return o(n)}return r["useEffect"]((function(){return function(){h.current.forEach((function(n){return clearTimeout(n)}))}}),[]),[d,g,y,C,w]}var d=u,m=function(){return m=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var a in e=arguments[t],e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n},m.apply(this,arguments)},f=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t},h=function(n,e){var t="function"===typeof Symbol&&n[Symbol.iterator];if(!t)return n;var r,a,o=t.call(n),i=[];try{while((void 0===e||e-- >0)&&!(r=o.next()).done)i.push(r.value)}catch(l){a={error:l}}finally{try{r&&!r.done&&(t=o["return"])&&t.call(o)}finally{if(a)throw a.error}}return i},x=function(n){var e,t=s(n),a=t.hoverClassName,i=t.hoverStartTime,l=t.hoverStayTime,c=t.className,p=t.onTouchStart,u=t.onTouchMove,x=t.onTouchEnd,g=t.onTouchCancel,y=t.onTap,C=t.onLongTap,w=f(t,["hoverClassName","hoverStartTime","hoverStayTime","className","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onTap","onLongTap"]),v=h(d({hoverDelay:i,hoverDuration:l,onLongTap:C,onTouchStart:p,onTouchMove:u,onTouchEnd:x,onTouchCancel:g}),5),b=v[0],k=v[1],V=v[2],P=v[3],N=v[4];return r["createElement"]("button",m({},w,{onTouchStart:k,onTouchMove:V,onTouchEnd:P,onTouchCancel:N,className:o("remax-button",c,(e={},e[a||""]=b,e)),onClick:y}))};x.defaultProps={hoverStayTime:400,hoverStartTime:50};var g={scaleToFill:{backgroundSize:"100% 100%"},aspectFit:{backgroundSize:"contain",backgroundPosition:"center"},widthFix:{backgroundSize:"100% 100%",height:"auto",lineHeight:0},aspectFill:{backgroundSize:"cover",backgroundPosition:"center"},top:{backgroundPosition:"top"},bottom:{backgroundPosition:"bottom"},center:{backgroundPosition:"center"},left:{backgroundPosition:"center left"},right:{backgroundPosition:"center right"},"top left":{backgroundPosition:"top left"},"top right":{backgroundPosition:"top right"},"bottom left":{backgroundPosition:"bottom left"},"bottom right":{backgroundPosition:"bottom right"}},y=function(){return y=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var a in e=arguments[t],e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n},y.apply(this,arguments)},C=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t},w=function(n){var e=s(n),t=e.className,a=e.src,i=e.style,l=e.mode,c=e.onTap,p=e.onLoad,u=e.onError,d=C(e,["className","src","style","mode","onTap","onLoad","onError"]),m="widthFix"===l;return r["createElement"]("div",y({},d,{onClick:c,className:o("remax-image",t),style:y(y(y({},g[l||"scaleToFill"]),{backgroundImage:"url("+a+")"}),i)}),r["createElement"]("img",{src:a,style:{visibility:"hidden",width:m?"100%":void 0,height:m?"auto":"1px"},onLoad:p,onError:u}))};w.defaultProps={mode:"scaleToFill"};var v={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0};function b(n,e){return n+e.charAt(0).toUpperCase()+e.substring(1)}var k=["Webkit","ms","Moz","O"],V=function(n){k.forEach((function(e){v[b(e,n)]=v[n]}))};for(var P in v)V(P);var N=function(n,e){var t="function"===typeof Symbol&&n[Symbol.iterator];if(!t)return n;var r,a,o=t.call(n),i=[];try{while((void 0===e||e-- >0)&&!(r=o.next()).done)i.push(r.value)}catch(l){a={error:l}}finally{try{r&&!r.done&&(t=o["return"])&&t.call(o)}finally{if(a)throw a.error}}return i},R=function(){for(var n=[],e=0;e<arguments.length;e++)n=n.concat(N(arguments[e]));return n},S=["webkit","moz","ms","o"],T=function(n){if(null===n||void 0===n?void 0:n.startsWith("--"))return n;var e=n.replace(/\.?([A-Z]+)/g,(function(n,e){return"-"+e.toLowerCase()}));if(null===e||void 0===e?void 0:e.startsWith("-")){var t=e.split("-").filter((function(n){return n}))[0];e=e.replace(/^-/,""),S.find((function(n){return n===t}))&&(e="-"+e)}return e},E=function(n){return"string"!==typeof n?n:n.replace(/\b(\d+(\.\d+)?)px\b/g,(function(n,e){var t="rem",r=Number(e/100);return r%1===0?r+t:r.toFixed(2)+t}))},$=function(n){return n?Object.keys(n).reduce((function(e,t){var r=n[t];return Number.isNaN(Number(r))||v[t]||(r+="rpx"),R(e,[T(t)+":"+(__REMAX_PX2RPX__?E(r):r)+";"])}),[]).join("\n"):""},I=$,_=0,F=function(){return"remax-placeholder-style-"+_++};function O(n){var e=r["useRef"](F());return r["useEffect"]((function(){var t="."+e.current+"::placeholder {\n    "+I(n)+"\n  }",r=window.document.createElement("style");r.type="text/css",r.appendChild(document.createTextNode(t));var a=window.document.head||window.document.getElementsByTagName("head")[0];return a.appendChild(r),function(){a.removeChild(r)}}),[n]),[e.current]}var A=function(){return A=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var a in e=arguments[t],e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n},A.apply(this,arguments)},M=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t},z=function(n,e){var t="function"===typeof Symbol&&n[Symbol.iterator];if(!t)return n;var r,a,o=t.call(n),i=[];try{while((void 0===e||e-- >0)&&!(r=o.next()).done)i.push(r.value)}catch(l){a={error:l}}finally{try{r&&!r.done&&(t=o["return"])&&t.call(o)}finally{if(a)throw a.error}}return i},j=function(n){var e=s(n),t=e.password,a=e.type,i=e.onConfirm,l=e.onKeyPress,c=e.placeholderStyle,p=e.className,u=M(e,["password","type","onConfirm","onKeyPress","placeholderStyle","className"]),d=z(O(c),1),m=d[0],f=t?"password":a;function h(n){"Enter"===n.key&&"function"===typeof i&&i(n),"function"===typeof l&&l(n)}return r["createElement"]("input",A({},u,{type:f,onKeyPress:h,className:o("remax-input",p,m)}))},B=j;j.defaultProps={onChange:function(){}};var D=function(){return D=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var a in e=arguments[t],e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n},D.apply(this,arguments)},L=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t},U=function(n){var e=s(n),t=e.onTap,a=e.onTouchStart,i=e.onTouchMove,l=e.onTouchEnd,c=e.onTouchCancel,p=e.className,u=e.selectable,d=L(e,["onTap","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","className","selectable"]),m=r["useRef"](!1);function f(n){if(m.current=!0,"function"===typeof a)return a(n)}function h(n){if(m.current=!1,"function"===typeof i)return i(n)}function x(n){if(m.current=!1,"function"===typeof l)return l(n)}function g(n){if(m.current=!1,"function"===typeof c)return c(n)}return r["createElement"]("span",D({},d,{className:o(p,{"remax-text-selectable":u}),onClick:t,onTouchStart:f,onTouchMove:h,onTouchEnd:x,onTouchCancel:g}))},K=U,q=t("O6Fj"),W=t.n(q),H=function(){return H=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var a in e=arguments[t],e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n},H.apply(this,arguments)},G=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t},X=function(n,e){var t="function"===typeof Symbol&&n[Symbol.iterator];if(!t)return n;var r,a,o=t.call(n),i=[];try{while((void 0===e||e-- >0)&&!(r=o.next()).done)i.push(r.value)}catch(l){a={error:l}}finally{try{r&&!r.done&&(t=o["return"])&&t.call(o)}finally{if(a)throw a.error}}return i},Y=function(n){var e=s(n),t=e.onConfirm,a=e.onKeyPress,i=e.autoHeight,l=e.className,c=e.placeholderStyle,p=G(e,["onConfirm","onKeyPress","autoHeight","className","placeholderStyle"]),u=X(O(c),1),d=u[0];function m(n){"Enter"===n.key&&"function"===typeof t&&t(n),"function"===typeof a&&a(n)}var f=o("remax-textarea",l,d);return i?r["createElement"](W.a,H({},p,{className:f,onKeyPress:m})):r["createElement"]("textarea",H({},p,{className:f,onKeyPress:m}))},Z=Y;Y.defaultProps={onChange:function(){}};var Q=function(){return Q=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var a in e=arguments[t],e)Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n},Q.apply(this,arguments)},J=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t},nn=function(n,e){var t="function"===typeof Symbol&&n[Symbol.iterator];if(!t)return n;var r,a,o=t.call(n),i=[];try{while((void 0===e||e-- >0)&&!(r=o.next()).done)i.push(r.value)}catch(l){a={error:l}}finally{try{r&&!r.done&&(t=o["return"])&&t.call(o)}finally{if(a)throw a.error}}return i},en=function(n){var e,t=s(n),a=t.hoverClassName,i=t.hoverStartTime,l=t.hoverStayTime,c=t.className,p=t.onTouchStart,u=t.onTouchMove,m=t.onTouchEnd,f=t.onTouchCancel,h=t.onTap,x=t.onLongTap,g=J(t,["hoverClassName","hoverStartTime","hoverStayTime","className","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onTap","onLongTap"]),y=nn(d({hoverDelay:i,hoverDuration:l,onLongTap:x,onTouchStart:p,onTouchMove:u,onTouchEnd:m,onTouchCancel:f}),5),C=y[0],w=y[1],v=y[2],b=y[3],k=y[4];return r["createElement"]("div",Q({},g,{onTouchStart:w,onTouchMove:v,onTouchEnd:b,onTouchCancel:k,className:o(c,(e={},e[a||""]=C,e)),onClick:h}))};en.defaultProps={hoverStayTime:400,hoverStartTime:50};var tn=en,rn=t("YS25");t("3mVh"),Object(rn["b"])()},YJ9l:function(n,e,t){"use strict";var r=t("5wUe"),a=t("bfL6"),o=t("R5yR"),i=t("V93i"),l=t("8jRI"),s=t("8yz6"),c=function(n){return null===n||void 0===n};function p(n){switch(n.arrayFormat){case"index":return function(e){return function(t,r){var a=t.length;return void 0===r||n.skipNull&&null===r||n.skipEmptyString&&""===r?t:[].concat(o(t),null===r?[[m(e,n),"[",a,"]"].join("")]:[[m(e,n),"[",m(a,n),"]=",m(r,n)].join("")])}};case"bracket":return function(e){return function(t,r){return void 0===r||n.skipNull&&null===r||n.skipEmptyString&&""===r?t:[].concat(o(t),null===r?[[m(e,n),"[]"].join("")]:[[m(e,n),"[]=",m(r,n)].join("")])}};case"comma":case"separator":return function(e){return function(t,r){return null===r||void 0===r||0===r.length?t:0===t.length?[[m(e,n),"=",m(r,n)].join("")]:[[t,m(r,n)].join(n.arrayFormatSeparator)]}};default:return function(e){return function(t,r){return void 0===r||n.skipNull&&null===r||n.skipEmptyString&&""===r?t:[].concat(o(t),null===r?[m(e,n)]:[[m(e,n),"=",m(r,n)].join("")])}}}}function u(n){var e;switch(n.arrayFormat){case"index":return function(n,t,r){e=/\[(\d*)\]$/.exec(n),n=n.replace(/\[\d*\]$/,""),e?(void 0===r[n]&&(r[n]={}),r[n][e[1]]=t):r[n]=t};case"bracket":return function(n,t,r){e=/(\[\])$/.exec(n),n=n.replace(/\[\]$/,""),e?void 0!==r[n]?r[n]=[].concat(r[n],t):r[n]=[t]:r[n]=t};case"comma":case"separator":return function(e,t,r){var a="string"===typeof t&&t.split("").indexOf(n.arrayFormatSeparator)>-1,o=a?t.split(n.arrayFormatSeparator).map((function(e){return f(e,n)})):null===t?t:f(t,n);r[e]=o};default:return function(n,e,t){void 0!==t[n]?t[n]=[].concat(t[n],e):t[n]=e}}}function d(n){if("string"!==typeof n||1!==n.length)throw new TypeError("arrayFormatSeparator must be single character string")}function m(n,e){return e.encode?e.strict?i(n):encodeURIComponent(n):n}function f(n,e){return e.decode?l(n):n}function h(n){return Array.isArray(n)?n.sort():"object"===typeof n?h(Object.keys(n)).sort((function(n,e){return Number(n)-Number(e)})).map((function(e){return n[e]})):n}function x(n){var e=n.indexOf("#");return-1!==e&&(n=n.slice(0,e)),n}function g(n){var e="",t=n.indexOf("#");return-1!==t&&(e=n.slice(t)),e}function y(n){n=x(n);var e=n.indexOf("?");return-1===e?"":n.slice(e+1)}function C(n,e){return e.parseNumbers&&!Number.isNaN(Number(n))&&"string"===typeof n&&""!==n.trim()?n=Number(n):!e.parseBooleans||null===n||"true"!==n.toLowerCase()&&"false"!==n.toLowerCase()||(n="true"===n.toLowerCase()),n}function w(n,e){e=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},e),d(e.arrayFormatSeparator);var t=u(e),o=Object.create(null);if("string"!==typeof n)return o;if(n=n.trim().replace(/^[?#&]/,""),!n)return o;var i,l=a(n.split("&"));try{for(l.s();!(i=l.n()).done;){var c=i.value,p=s(e.decode?c.replace(/\+/g," "):c,"="),m=r(p,2),x=m[0],g=m[1];g=void 0===g?null:["comma","separator"].includes(e.arrayFormat)?g:f(g,e),t(f(x,e),g,o)}}catch(N){l.e(N)}finally{l.f()}for(var y=0,w=Object.keys(o);y<w.length;y++){var v=w[y],b=o[v];if("object"===typeof b&&null!==b)for(var k=0,V=Object.keys(b);k<V.length;k++){var P=V[k];b[P]=C(b[P],e)}else o[v]=C(b,e)}return!1===e.sort?o:(!0===e.sort?Object.keys(o).sort():Object.keys(o).sort(e.sort)).reduce((function(n,e){var t=o[e];return Boolean(t)&&"object"===typeof t&&!Array.isArray(t)?n[e]=h(t):n[e]=t,n}),Object.create(null))}e.extract=y,e.parse=w,e.stringify=function(n,e){if(!n)return"";e=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},e),d(e.arrayFormatSeparator);for(var t=function(t){return e.skipNull&&c(n[t])||e.skipEmptyString&&""===n[t]},r=p(e),a={},o=0,i=Object.keys(n);o<i.length;o++){var l=i[o];t(l)||(a[l]=n[l])}var s=Object.keys(a);return!1!==e.sort&&s.sort(e.sort),s.map((function(t){var a=n[t];return void 0===a?"":null===a?m(t,e):Array.isArray(a)?a.reduce(r(t),[]).join("&"):m(t,e)+"="+m(a,e)})).filter((function(n){return n.length>0})).join("&")},e.parseUrl=function(n,e){return{url:x(n).split("?")[0]||"",query:w(y(n),e)}},e.stringifyUrl=function(n,t){var r=x(n.url).split("?")[0]||"",a=e.extract(n.url),o=e.parse(a),i=g(n.url),l=Object.assign(o,n.query),s=e.stringify(l,t);return s&&(s="?".concat(s)),"".concat(r).concat(s).concat(i)}},YJpY:function(n,e,t){"use strict";var r=t("MMxC"),a=t("hKmx"),o=t("cTDu"),i=t("oa35"),l=t("cT1L"),s=t("nMuc");r({target:"Array",proto:!0},{flatMap:function(n){var e,t=o(this),r=i(t.length);return l(n),e=s(t,0),e.length=a(e,t,t,r,0,1,n,arguments.length>1?arguments[1]:void 0),e}})},YMoz:function(n,e){n.exports=Math.scale||function(n,e,t,r,a){return 0===arguments.length||n!=n||e!=e||t!=t||r!=r||a!=a?NaN:n===1/0||n===-1/0?n:(n-e)*(a-r)/(t-e)+r}},YON3:function(n,e,t){var r=t("tSXo"),a=t("UwrT"),o=t("2kyd"),i=o("match");n.exports=function(n){var e;return r(n)&&(void 0!==(e=n[i])?!!e:"RegExp"==a(n))}},YS25:function(n,e,t){"use strict";t.d(e,"a",(function(){return _})),t.d(e,"b",(function(){return B})),t.d(e,"d",(function(){return L})),t.d(e,"c",(function(){return v})),t.d(e,"f",(function(){return b})),t.d(e,"e",(function(){return w}));var r=t("wx14");function a(n){return"/"===n.charAt(0)}function o(n,e){for(var t=e,r=t+1,a=n.length;r<a;t+=1,r+=1)n[t]=n[r];n.pop()}function i(n,e){void 0===e&&(e="");var t,r=n&&n.split("/")||[],i=e&&e.split("/")||[],l=n&&a(n),s=e&&a(e),c=l||s;if(n&&a(n)?i=r:r.length&&(i.pop(),i=i.concat(r)),!i.length)return"/";if(i.length){var p=i[i.length-1];t="."===p||".."===p||""===p}else t=!1;for(var u=0,d=i.length;d>=0;d--){var m=i[d];"."===m?o(i,d):".."===m?(o(i,d),u++):u&&(o(i,d),u--)}if(!c)for(;u--;u)i.unshift("..");!c||""===i[0]||i[0]&&a(i[0])||i.unshift("");var f=i.join("/");return t&&"/"!==f.substr(-1)&&(f+="/"),f}var l=i;function s(n){return n.valueOf?n.valueOf():Object.prototype.valueOf.call(n)}function c(n,e){if(n===e)return!0;if(null==n||null==e)return!1;if(Array.isArray(n))return Array.isArray(e)&&n.length===e.length&&n.every((function(n,t){return c(n,e[t])}));if("object"===typeof n||"object"===typeof e){var t=s(n),r=s(e);return t!==n||r!==e?c(t,r):Object.keys(Object.assign({},n,e)).every((function(t){return c(n[t],e[t])}))}return!1}var p=c,u=t("YJ9l"),d=t.n(u),m=t("9R94");function f(n){return"/"===n.charAt(0)?n:"/"+n}function h(n){return"/"===n.charAt(0)?n.substr(1):n}function x(n,e){return 0===n.toLowerCase().indexOf(e.toLowerCase())&&-1!=="/?#".indexOf(n.charAt(e.length))}function g(n,e){return x(n,e)?n.substr(e.length):n}function y(n){return"/"===n.charAt(n.length-1)?n.slice(0,-1):n}function C(n){var e=n||"/",t="",r="",a=e.indexOf("#");-1!==a&&(r=e.substr(a),e=e.substr(0,a));var o=e.indexOf("?");return-1!==o&&(t=e.substr(o),e=e.substr(0,o)),{pathname:e,search:"?"===t?"":t,hash:"#"===r?"":r}}function w(n){var e=n.pathname,t=n.search,r=n.hash,a=e||"/";return t&&"?"!==t&&(a+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function v(n,e,t,a){var o;"string"===typeof n?(o=C(n),o.query=o.search?d.a.parse(o.search):{},o.state=e):(o=Object(r["a"])({},n),void 0===o.pathname&&(o.pathname=""),o.search?("?"!==o.search.charAt(0)&&(o.search="?"+o.search),o.query=d.a.parse(o.search)):(o.search=o.query?d.a.stringify(o.query):"",o.query=o.query||{}),o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==e&&void 0===o.state&&(o.state=e));try{o.pathname=decodeURI(o.pathname)}catch(i){throw i instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):i}return t&&(o.key=t),a?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=l(o.pathname,a.pathname)):o.pathname=a.pathname:o.pathname||(o.pathname="/"),o}function b(n,e){return n.pathname===e.pathname&&n.search===e.search&&n.hash===e.hash&&n.key===e.key&&p(n.state,e.state)}function k(){var n=null;function e(e){return n=e,function(){n===e&&(n=null)}}function t(e,t,r,a){if(null!=n){var o="function"===typeof n?n(e,t):n;"string"===typeof o?"function"===typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)}var r=[];function a(n){var e=!0;function t(){e&&n.apply(void 0,arguments)}return r.push(t),function(){e=!1,r=r.filter((function(n){return n!==t}))}}function o(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];r.forEach((function(n){return n.apply(void 0,e)}))}return{setPrompt:e,confirmTransitionTo:t,appendListener:a,notifyListeners:o}}var V=!("undefined"===typeof window||!window.document||!window.document.createElement);function P(n,e){e(window.confirm(n))}function N(){var n=window.navigator.userAgent;return(-1===n.indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&(window.history&&"pushState"in window.history)}function R(){return-1===window.navigator.userAgent.indexOf("Trident")}function S(){return-1===window.navigator.userAgent.indexOf("Firefox")}function T(n){return void 0===n.state&&-1===navigator.userAgent.indexOf("CriOS")}var E="popstate",$="hashchange";function I(){try{return window.history.state||{}}catch(n){return{}}}function _(n){void 0===n&&(n={}),V||Object(m["a"])(!1);var e=window.history,t=N(),a=!R(),o=n,i=o.forceRefresh,l=void 0!==i&&i,s=o.getUserConfirmation,c=void 0===s?P:s,p=o.keyLength,u=void 0===p?6:p,d=n.basename?y(f(n.basename)):"";function h(n){var e=n||{},t=e.key,r=e.state,a=window.location,o=a.pathname,i=a.search,l=a.hash,s=o+i+l;return d&&(s=g(s,d)),v(s,r,t)}function x(){return Math.random().toString(36).substr(2,u)}var C=k();function b(n){Object(r["a"])(Y,n),Y.length=e.length,C.notifyListeners(Y.location,Y.action)}function S(n){T(n)||O(h(n.state))}function _(){O(h(I()))}var F=!1;function O(n){if(F)F=!1,b();else{var e="POP";C.confirmTransitionTo(n,e,c,(function(t){t?b({action:e,location:n}):A(n)}))}}function A(n){var e=Y.location,t=z.indexOf(e.key);-1===t&&(t=0);var r=z.indexOf(n.key);-1===r&&(r=0);var a=t-r;a&&(F=!0,L(a))}var M=h(I()),z=[M.key];function j(n){return d+w(n)}function B(n,r){var a="PUSH",o=v(n,r,x(),Y.location);C.confirmTransitionTo(o,a,c,(function(n){if(n){var r=j(o),i=o.key,s=o.state;if(t)if(e.pushState({key:i,state:s},null,r),l)window.location.href=r;else{var c=z.indexOf(Y.location.key),p=z.slice(0,c+1);p.push(o.key),z=p,b({action:a,location:o})}else window.location.href=r}}))}function D(n,r){var a="REPLACE",o=v(n,r,x(),Y.location);C.confirmTransitionTo(o,a,c,(function(n){if(n){var r=j(o),i=o.key,s=o.state;if(t)if(e.replaceState({key:i,state:s},null,r),l)window.location.replace(r);else{var c=z.indexOf(Y.location.key);-1!==c&&(z[c]=o.key),b({action:a,location:o})}else window.location.replace(r)}}))}function L(n){e.go(n)}function U(){L(-1)}function K(){L(1)}var q=0;function W(n){q+=n,1===q&&1===n?(window.addEventListener(E,S),a&&window.addEventListener($,_)):0===q&&(window.removeEventListener(E,S),a&&window.removeEventListener($,_))}var H=!1;function G(n){void 0===n&&(n=!1);var e=C.setPrompt(n);return H||(W(1),H=!0),function(){return H&&(H=!1,W(-1)),e()}}function X(n){var e=C.appendListener(n);return W(1),function(){W(-1),e()}}var Y={length:e.length,action:"POP",location:M,createHref:j,push:B,replace:D,go:L,goBack:U,goForward:K,block:G,listen:X};return Y}var F="hashchange",O={hashbang:{encodePath:function(n){return"!"===n.charAt(0)?n:"!/"+h(n)},decodePath:function(n){return"!"===n.charAt(0)?n.substr(1):n}},noslash:{encodePath:h,decodePath:f},slash:{encodePath:f,decodePath:f}};function A(n){var e=n.indexOf("#");return-1===e?n:n.slice(0,e)}function M(){var n=window.location.href,e=n.indexOf("#");return-1===e?"":n.substring(e+1)}function z(n){window.location.hash=n}function j(n){window.location.replace(A(window.location.href)+"#"+n)}function B(n){void 0===n&&(n={}),V||Object(m["a"])(!1);var e=window.history,t=(S(),n),a=t.getUserConfirmation,o=void 0===a?P:a,i=t.hashType,l=void 0===i?"slash":i,s=n.basename?y(f(n.basename)):"",c=O[l],p=c.encodePath,u=c.decodePath;function d(){var n=u(M());return s&&(n=g(n,s)),v(n)}var h=k();function x(n){Object(r["a"])(Q,n),Q.length=e.length,h.notifyListeners(Q.location,Q.action)}var C=!1,b=null;function N(n,e){return n.pathname===e.pathname&&n.search===e.search&&n.hash===e.hash}function R(){var n=M(),e=p(n);if(n!==e)j(e);else{var t=d(),r=Q.location;if(!C&&N(r,t))return;if(b===w(t))return;b=null,T(t)}}function T(n){if(C)C=!1,x();else{var e="POP";h.confirmTransitionTo(n,e,o,(function(t){t?x({action:e,location:n}):E(n)}))}}function E(n){var e=Q.location,t=B.lastIndexOf(w(e));-1===t&&(t=0);var r=B.lastIndexOf(w(n));-1===r&&(r=0);var a=t-r;a&&(C=!0,K(a))}var $=M(),I=p($);$!==I&&j(I);var _=d(),B=[w(_)];function D(n){var e=document.querySelector("base"),t="";return e&&e.getAttribute("href")&&(t=A(window.location.href)),t+"#"+p(s+w(n))}function L(n,e){var t="PUSH",r=v(n,void 0,void 0,Q.location);h.confirmTransitionTo(r,t,o,(function(n){if(n){var e=w(r),a=p(s+e),o=M()!==a;if(o){b=e,z(a);var i=B.lastIndexOf(w(Q.location)),l=B.slice(0,i+1);l.push(e),B=l,x({action:t,location:r})}else x()}}))}function U(n,e){var t="REPLACE",r=v(n,void 0,void 0,Q.location);h.confirmTransitionTo(r,t,o,(function(n){if(n){var e=w(r),a=p(s+e),o=M()!==a;o&&(b=e,j(a));var i=B.indexOf(w(Q.location));-1!==i&&(B[i]=e),x({action:t,location:r})}}))}function K(n){e.go(n)}function q(){K(-1)}function W(){K(1)}var H=0;function G(n){H+=n,1===H&&1===n?window.addEventListener(F,R):0===H&&window.removeEventListener(F,R)}var X=!1;function Y(n){void 0===n&&(n=!1);var e=h.setPrompt(n);return X||(G(1),X=!0),function(){return X&&(X=!1,G(-1)),e()}}function Z(n){var e=h.appendListener(n);return G(1),function(){G(-1),e()}}var Q={length:e.length,action:"POP",location:_,createHref:D,push:L,replace:U,go:K,goBack:q,goForward:W,block:Y,listen:Z};return Q}function D(n,e,t){return Math.min(Math.max(n,e),t)}function L(n){void 0===n&&(n={});var e=n,t=e.getUserConfirmation,a=e.initialEntries,o=void 0===a?["/"]:a,i=e.initialIndex,l=void 0===i?0:i,s=e.keyLength,c=void 0===s?6:s,p=k();function u(n){Object(r["a"])(R,n),R.length=R.entries.length,p.notifyListeners(R.location,R.action)}function d(){return Math.random().toString(36).substr(2,c)}var m=D(l,0,o.length-1),f=o.map((function(n){return v(n,void 0,"string"===typeof n?d():n.key||d())})),h=w;function x(n,e){var r="PUSH",a=v(n,e,d(),R.location);p.confirmTransitionTo(a,r,t,(function(n){if(n){var e=R.index,t=e+1,o=R.entries.slice(0);o.length>t?o.splice(t,o.length-t,a):o.push(a),u({action:r,location:a,index:t,entries:o})}}))}function g(n,e){var r="REPLACE",a=v(n,e,d(),R.location);p.confirmTransitionTo(a,r,t,(function(n){n&&(R.entries[R.index]=a,u({action:r,location:a}))}))}function y(n){var e=D(R.index+n,0,R.entries.length-1),r="POP",a=R.entries[e];p.confirmTransitionTo(a,r,t,(function(n){n?u({action:r,location:a,index:e}):u()}))}function C(){y(-1)}function b(){y(1)}function V(n){var e=R.index+n;return e>=0&&e<R.entries.length}function P(n){return void 0===n&&(n=!1),p.setPrompt(n)}function N(n){return p.appendListener(n)}var R={length:f.length,action:"POP",location:f[m],index:m,entries:f,createHref:h,push:x,replace:g,go:y,goBack:C,goForward:b,canGo:V,block:P,listen:N};return R}},YXCA:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var r=o(t("q1tI")),a=o(t("+t3K"));function o(n){return n&&n.__esModule?n:{default:n}}function i(n,e){return u(n)||p(n,e)||s(n,e)||l()}function l(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(n,e){if(n){if("string"===typeof n)return c(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?c(n,e):void 0}}function c(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function p(n,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done);r=!0)if(t.push(i.value),e&&t.length===e)break}catch(s){a=!0,o=s}finally{try{r||null==l["return"]||l["return"]()}finally{if(a)throw o}}return t}}function u(n){if(Array.isArray(n))return n}function d(n){return(n.match(/^(.+)\.([^.]+)$/)||[]).slice(1)}var m=function(n){return function(e){return r["default"].createElement(a["default"].Consumer,null,(function(t){var a=t.locale,o={};return a?Object.keys(e).forEach((function(n){var t=d(n),r=i(t,2),l=r[0],s=r[1];s&&s!==a||(o[l||n]=e[n])})):o=e,r["default"].createElement(n,o)}))}};e["default"]=m},YceZ:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("jbR1"),l=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{join:function(n){var e=o(this),t=i(e),r=void 0===n?",":String(n),a=[];return l(t,a.push,a,!1,!0),a.join(r)}})},YfKC:function(n,e,t){var r=t("tny8"),a=t("/yC2"),o=t("f1E4"),i=t("gFfw"),l=Object.defineProperty;e.f=r?l:function(n,e,t){if(o(n),e=i(e,!0),o(t),a)try{return l(n,e,t)}catch(r){}if("get"in t||"set"in t)throw TypeError("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},YjZU:function(n,e,t){var r=t("MMxC"),a=t("29mP"),o=t("cT1L"),i=t("f1E4"),l=t("tSXo"),s=t("u+7+"),c=t("+SQA"),p=t("MVys"),u=a("Reflect","construct"),d=p((function(){function n(){}return!(u((function(){}),[],n)instanceof n)})),m=!p((function(){u((function(){}))})),f=d||m;r({target:"Reflect",stat:!0,forced:f,sham:f},{construct:function(n,e){o(n),i(e);var t=arguments.length<3?n:o(arguments[2]);if(m&&!d)return u(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var r=[null];return r.push.apply(r,e),new(c.apply(n,r))}var a=t.prototype,p=s(l(a)?a:Object.prototype),f=Function.apply.call(n,p,e);return l(f)?f:p}})},"Z+8a":function(n,e,t){"use strict";var r=t("f1E4"),a=t("cT1L");n.exports=function(){for(var n=r(this),e=a(n.add),t=0,o=arguments.length;t<o;t++)e.call(n,arguments[t]);return n}},ZASa:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("bSvb")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"rate"},o.a.createElement("a",{"aria-hidden":"true",href:"#rate"},o.a.createElement("span",{className:"icon icon-link"})),"Rate"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { View } from \'remax/one\';\nimport { Rate } from \'anna-remax-ui\';\nimport { Block, Frame } from \'../../common\';\n\nexport default () => {\n  const [value, setValue] = React.useState(0);\n  const [value1, setValue1] = React.useState(0);\n  const [value2, setValue2] = React.useState(0);\n  const [value3, setValue3] = React.useState(4);\n  const [value4, setValue4] = React.useState(3);\n  const [value5, setValue5] = React.useState(2);\n  const [value6, setValue6] = React.useState(2);\n  const [value7, setValue7] = React.useState(2);\n\n  return (\n    <Frame padding>\n      <Block noTitlePadding title="Basic">\n        <Rate value={value} onChange={v => setValue(v)} />\n      </Block>\n      <Block noTitlePadding title="Custome Icon">\n        <Rate\n          icon="evaluate"\n          iconFill="evaluate_fill"\n          value={value5}\n          onChange={v => setValue5(v)}\n        />\n      </Block>\n      <Block noTitlePadding title="Color">\n        <Rate\n          color="#FF9999"\n          icon="appreciate"\n          iconFill="appreciatefill"\n          value={value6}\n          onChange={v => setValue6(v)}\n        />\n      </Block>\n      <Block noTitlePadding title="Size">\n        <Rate size="60px" value={value7} onChange={v => setValue7(v)} />\n      </Block>\n      <Block noTitlePadding title="Count">\n        <Rate count={6} value={value3} onChange={v => setValue3(v)} />\n      </Block>\n      <Block noTitlePadding title="ReadOnly">\n        <Rate readOnly value={value4} onChange={v => setValue4(v)} />\n      </Block>\n      <Block noTitlePadding title="With Label">\n        <View style={{ marginBottom: \'20px\' }}>\n          <Rate label="\u7269\u6d41\u670d\u52a1" value={value1} onChange={v => setValue1(v)} />\n        </View>\n        <View>\n          <Rate label="\u670d\u52a1\u6001\u5ea6" value={value2} onChange={v => setValue2(v)} />\n        </View>\n      </Block>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Rate } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nexport default () => {\n  const [value, setValue] = React.useState(0);\n  const [value1, setValue1] = React.useState(0);\n  const [value2, setValue2] = React.useState(0);\n  const [value3, setValue3] = React.useState(4);\n  const [value4, setValue4] = React.useState(3);\n  const [value5, setValue5] = React.useState(2);\n  const [value6, setValue6] = React.useState(2);\n  const [value7, setValue7] = React.useState(2);\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      padding: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(Rate, {\n        value,\n        onChange: v => setValue(v),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Custome Icon',\n      },\n      /* #__PURE__ */ React.createElement(Rate, {\n        icon: 'evaluate',\n        iconFill: 'evaluate_fill',\n        value: value5,\n        onChange: v => setValue5(v),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Color',\n      },\n      /* #__PURE__ */ React.createElement(Rate, {\n        color: '#FF9999',\n        icon: 'appreciate',\n        iconFill: 'appreciatefill',\n        value: value6,\n        onChange: v => setValue6(v),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Size',\n      },\n      /* #__PURE__ */ React.createElement(Rate, {\n        size: '60px',\n        value: value7,\n        onChange: v => setValue7(v),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Count',\n      },\n      /* #__PURE__ */ React.createElement(Rate, {\n        count: 6,\n        value: value3,\n        onChange: v => setValue3(v),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'ReadOnly',\n      },\n      /* #__PURE__ */ React.createElement(Rate, {\n        readOnly: true,\n        value: value4,\n        onChange: v => setValue4(v),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'With Label',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          style: {\n            marginBottom: '20px',\n          },\n        },\n        /* #__PURE__ */ React.createElement(Rate, {\n          label: '\\u7269\\u6D41\\u670D\\u52A1',\n          value: value1,\n          onChange: v => setValue1(v),\n        }),\n      ),\n      /* #__PURE__ */ React.createElement(\n        View,\n        null,\n        /* #__PURE__ */ React.createElement(Rate, {\n          label: '\\u670D\\u52A1\\u6001\\u5EA6',\n          value: value2,\n          onChange: v => setValue2(v),\n        }),\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-9",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"rate-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#rate-1"},o.a.createElement("span",{className:"icon icon-link"})),"Rate"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"count"),o.a.createElement("td",null,"star \u603b\u6570"),o.a.createElement("td",null,"number"),o.a.createElement("td",null,o.a.createElement("code",null,"5"))),o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u5f53\u524d\u6570\uff0c\u53d7\u63a7\u503c"),o.a.createElement("td",null,"number"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"color"),o.a.createElement("td",null,"\u9009\u4e2d\u65f6\u7684\u989c\u8272"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"size"),o.a.createElement("td",null,"\u5927\u5c0f"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"readOnly"),o.a.createElement("td",null,"\u662f\u5426\u4e3a\u53ea\u8bfb\u72b6\u6001"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"label"),o.a.createElement("td",null,"\u5de6\u4fa7\u6807\u7b7e"),o.a.createElement("td",null,"ReactNode"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"icon"),o.a.createElement("td",null,"\u9009\u4e2d\u65f6\u7684\u56fe\u6807\u540d\u79f0"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"iconFill"),o.a.createElement("td",null,"\u672a\u9009\u4e2d\u65f6\u7684\u56fe\u6807\u540d\u79f0"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"\u9009\u62e9\u65f6\u7684\u56de\u8c03"),o.a.createElement("td",null,"(e: any) => void"),o.a.createElement("td",null,"-"))))))}},ZDb2:function(n,e,t){"use strict";var r=t("ENif"),a=t("YON3"),o=t("f1E4"),i=t("FCfD"),l=t("/dTS"),s=t("xH5X"),c=t("oa35"),p=t("dagG"),u=t("NcLc"),d=t("MVys"),m=[].push,f=Math.min,h=4294967295,x=!d((function(){return!RegExp(h,"y")}));r("split",2,(function(n,e,t){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(n,t){var r=String(i(this)),o=void 0===t?h:t>>>0;if(0===o)return[];if(void 0===n)return[r];if(!a(n))return e.call(r,n,o);var l,s,c,p=[],d=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),f=0,x=new RegExp(n.source,d+"g");while(l=u.call(x,r)){if(s=x.lastIndex,s>f&&(p.push(r.slice(f,l.index)),l.length>1&&l.index<r.length&&m.apply(p,l.slice(1)),c=l[0].length,f=s,p.length>=o))break;x.lastIndex===l.index&&x.lastIndex++}return f===r.length?!c&&x.test("")||p.push(""):p.push(r.slice(f)),p.length>o?p.slice(0,o):p}:"0".split(void 0,0).length?function(n,t){return void 0===n&&0===t?[]:e.call(this,n,t)}:e,[function(e,t){var a=i(this),o=void 0==e?void 0:e[n];return void 0!==o?o.call(e,a,t):r.call(String(a),e,t)},function(n,a){var i=t(r,n,this,a,r!==e);if(i.done)return i.value;var u=o(n),d=String(this),m=l(u,RegExp),g=u.unicode,y=(u.ignoreCase?"i":"")+(u.multiline?"m":"")+(u.unicode?"u":"")+(x?"y":"g"),C=new m(x?u:"^(?:"+u.source+")",y),w=void 0===a?h:a>>>0;if(0===w)return[];if(0===d.length)return null===p(C,d)?[d]:[];var v=0,b=0,k=[];while(b<d.length){C.lastIndex=x?b:0;var V,P=p(C,x?d:d.slice(b));if(null===P||(V=f(c(C.lastIndex+(x?0:b)),d.length))===v)b=s(d,b,g);else{if(k.push(d.slice(v,b)),k.length===w)return k;for(var N=1;N<=P.length-1;N++)if(k.push(P[N]),k.length===w)return k;b=v=V}}return k.push(d.slice(v)),k}]}),!x)},ZIKC:function(n,e,t){},ZLBb:function(n,e,t){n.exports={custom:"custom___j8U34",tags:"tags___2AAfG",tag:"tag___oL6Gs",title:"title___pSQnM",action:"action___sZflx",btn:"btn___1TRcm",reset:"reset___2wYeC",complete:"complete___26zmH"}},ZSfd:function(n,e,t){n.exports={app:"app___h_tKt",group:"group___3Gt-1"}},ZSlt:function(n,e,t){"use strict";var r=t("ukPv"),a=t("tny8"),o=t("GNqc"),i=t("lz10"),l=t("ujhg"),s=t("MVys"),c=t("igoe"),p=t("m0kY"),u=t("oa35"),d=t("J+Da"),m=t("Cq6t"),f=t("Acmb"),h=t("g1ZG"),x=t("uGHk").f,g=t("YfKC").f,y=t("VSU6"),C=t("kiNa"),w=t("1aI8"),v=w.get,b=w.set,k="ArrayBuffer",V="DataView",P="prototype",N="Wrong length",R="Wrong index",S=r[k],T=S,E=r[V],$=E&&E[P],I=Object.prototype,_=r.RangeError,F=m.pack,O=m.unpack,A=function(n){return[255&n]},M=function(n){return[255&n,n>>8&255]},z=function(n){return[255&n,n>>8&255,n>>16&255,n>>24&255]},j=function(n){return n[3]<<24|n[2]<<16|n[1]<<8|n[0]},B=function(n){return F(n,23,4)},D=function(n){return F(n,52,8)},L=function(n,e){g(n[P],e,{get:function(){return v(this)[e]}})},U=function(n,e,t,r){var a=d(t),o=v(n);if(a+e>o.byteLength)throw _(R);var i=v(o.buffer).bytes,l=a+o.byteOffset,s=i.slice(l,l+e);return r?s:s.reverse()},K=function(n,e,t,r,a,o){var i=d(t),l=v(n);if(i+e>l.byteLength)throw _(R);for(var s=v(l.buffer).bytes,c=i+l.byteOffset,p=r(+a),u=0;u<e;u++)s[c+u]=p[o?u:e-u-1]};if(o){if(!s((function(){S(1)}))||!s((function(){new S(-1)}))||s((function(){return new S,new S(1.5),new S(NaN),S.name!=k}))){T=function(n){return c(this,T),new S(d(n))};for(var q,W=T[P]=S[P],H=x(S),G=0;H.length>G;)(q=H[G++])in T||i(T,q,S[q]);W.constructor=T}h&&f($)!==I&&h($,I);var X=new E(new T(2)),Y=$.setInt8;X.setInt8(0,2147483648),X.setInt8(1,2147483649),!X.getInt8(0)&&X.getInt8(1)||l($,{setInt8:function(n,e){Y.call(this,n,e<<24>>24)},setUint8:function(n,e){Y.call(this,n,e<<24>>24)}},{unsafe:!0})}else T=function(n){c(this,T,k);var e=d(n);b(this,{bytes:y.call(new Array(e),0),byteLength:e}),a||(this.byteLength=e)},E=function(n,e,t){c(this,E,V),c(n,T,V);var r=v(n).byteLength,o=p(e);if(o<0||o>r)throw _("Wrong offset");if(t=void 0===t?r-o:u(t),o+t>r)throw _(N);b(this,{buffer:n,byteLength:t,byteOffset:o}),a||(this.buffer=n,this.byteLength=t,this.byteOffset=o)},a&&(L(T,"byteLength"),L(E,"buffer"),L(E,"byteLength"),L(E,"byteOffset")),l(E[P],{getInt8:function(n){return U(this,1,n)[0]<<24>>24},getUint8:function(n){return U(this,1,n)[0]},getInt16:function(n){var e=U(this,2,n,arguments.length>1?arguments[1]:void 0);return(e[1]<<8|e[0])<<16>>16},getUint16:function(n){var e=U(this,2,n,arguments.length>1?arguments[1]:void 0);return e[1]<<8|e[0]},getInt32:function(n){return j(U(this,4,n,arguments.length>1?arguments[1]:void 0))},getUint32:function(n){return j(U(this,4,n,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(n){return O(U(this,4,n,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(n){return O(U(this,8,n,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(n,e){K(this,1,n,A,e)},setUint8:function(n,e){K(this,1,n,A,e)},setInt16:function(n,e){K(this,2,n,M,e,arguments.length>2?arguments[2]:void 0)},setUint16:function(n,e){K(this,2,n,M,e,arguments.length>2?arguments[2]:void 0)},setInt32:function(n,e){K(this,4,n,z,e,arguments.length>2?arguments[2]:void 0)},setUint32:function(n,e){K(this,4,n,z,e,arguments.length>2?arguments[2]:void 0)},setFloat32:function(n,e){K(this,4,n,B,e,arguments.length>2?arguments[2]:void 0)},setFloat64:function(n,e){K(this,8,n,D,e,arguments.length>2?arguments[2]:void 0)}});C(T,k),C(E,V),n.exports={ArrayBuffer:T,DataView:E}},ZahQ:function(n,e,t){"use strict";var r=t("MMxC"),a=t("tny8"),o=t("i7kj"),i=t("cTDu"),l=t("cT1L"),s=t("YfKC");a&&r({target:"Object",proto:!0,forced:o},{__defineGetter__:function(n,e){s.f(i(this),n,{get:l(e),enumerable:!0,configurable:!0})}})},Zcjx:function(n,e){n.exports=!1},Ze4s:function(n,e,t){var r=t("ukPv"),a=t("mTKU").trim,o=t("Tfd0"),i=r.parseInt,l=/^[+-]?0[Xx]/,s=8!==i(o+"08")||22!==i(o+"0x16");n.exports=s?function(n,e){var t=a(String(n));return i(t,e>>>0||(l.test(t)?16:10))}:i},Zeyf:function(n,e){var t;t=function(){return this}();try{t=t||new Function("return this")()}catch(r){"object"===typeof window&&(t=window)}n.exports=t},ZkJ9:function(n,e,t){var r=t("ukPv"),a=t("J3Yn"),o=r.WeakMap;n.exports="function"===typeof o&&/native code/.test(a(o))},a1nA:function(n,e,t){},a5mf:function(n,e,t){var r=t("6ixQ"),a=t("tSXo"),o=t("jtLI"),i=t("YfKC").f,l=t("evbn"),s=t("R/Zn"),c=l("meta"),p=0,u=Object.isExtensible||function(){return!0},d=function(n){i(n,c,{value:{objectID:"O"+ ++p,weakData:{}}})},m=function(n,e){if(!a(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!o(n,c)){if(!u(n))return"F";if(!e)return"E";d(n)}return n[c].objectID},f=function(n,e){if(!o(n,c)){if(!u(n))return!0;if(!e)return!1;d(n)}return n[c].weakData},h=function(n){return s&&x.REQUIRED&&u(n)&&!o(n,c)&&d(n),n},x=n.exports={REQUIRED:!1,fastKey:m,getWeakData:f,onFreeze:h};r[c]=!0},aF2d:function(n,e,t){"use strict";var r=t("cT1L"),a=t("7BAe"),o=t("IuhT");n.exports=function(n){var e,t,i,l,s=arguments.length,c=s>1?arguments[1]:void 0;return r(this),e=void 0!==c,e&&r(c),void 0==n?new this:(t=[],e?(i=0,l=a(c,s>2?arguments[2]:void 0,2),o(n,(function(n){t.push(l(n,i++))}))):o(n,t.push,t),new this(t))}},aHGi:function(n,e,t){var r=t("I65O");r("toStringTag")},aKVN:function(n,e,t){"use strict";var r=t("f1E4"),a=t("gFfw");n.exports=function(n){if("string"!==n&&"number"!==n&&"default"!==n)throw TypeError("Incorrect hint");return a(r(this),"number"!==n)}},aKtI:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("cT1L"),l=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{merge:function(n){var e=o(this),t=i(e.set),r=0;while(r<arguments.length)l(arguments[r++],t,e,!0);return e}})},aLaE:function(n,e,t){var r=t("MMxC"),a=t("ls1J"),o=t("f1E4"),i=a.toKey,l=a.set;r({target:"Reflect",stat:!0},{metadata:function(n,e){return function(t,r){l(n,e,o(t),i(r))}}})},aNdP:function(n,e,t){var r=t("MMxC"),a=t("YMoz");r({target:"Math",stat:!0},{scale:a})},aRU8:function(n,e,t){var r=t("MMxC"),a=t("ukPv"),o=t("C3pJ"),i=!a.setImmediate||!a.clearImmediate;r({global:!0,bind:!0,enumerable:!0,forced:i},{setImmediate:o.set,clearImmediate:o.clear})},arQb:function(n,e,t){"use strict";var r=t("gFfw"),a=t("YfKC"),o=t("HhvW");n.exports=function(n,e,t){var i=r(e);i in n?a.f(n,i,o(0,t)):n[i]=t}},b6st:function(n,e,t){var r=t("ukPv");n.exports=r.Promise},"bF+Q":function(n,e,t){var r=t("2kyd"),a=t("5yw/"),o=r("iterator"),i=Array.prototype;n.exports=function(n){return void 0!==n&&(a.Array===n||i[o]===n)}},bIKR:function(n,e,t){var r=t("m0kY"),a=Math.max,o=Math.min;n.exports=function(n,e){var t=r(n);return t<0?a(t+e,0):o(t,e)}},bPAU:function(n,e,t){"use strict";var r=t("MMxC"),a=t("uoF6"),o=t("FCfD"),i=t("oa35"),l=t("cT1L"),s=t("f1E4"),c=t("UwrT"),p=t("YON3"),u=t("k/J9"),d=t("lz10"),m=t("MVys"),f=t("2kyd"),h=t("/dTS"),x=t("xH5X"),g=t("1aI8"),y=t("Zcjx"),C=f("matchAll"),w="RegExp String",v=w+" Iterator",b=g.set,k=g.getterFor(v),V=RegExp.prototype,P=V.exec,N="".matchAll,R=!!N&&!m((function(){"a".matchAll(/./)})),S=function(n,e){var t,r=n.exec;if("function"==typeof r){if(t=r.call(n,e),"object"!=typeof t)throw TypeError("Incorrect exec result");return t}return P.call(n,e)},T=a((function(n,e,t,r){b(this,{type:v,regexp:n,string:e,global:t,unicode:r,done:!1})}),w,(function(){var n=k(this);if(n.done)return{value:void 0,done:!0};var e=n.regexp,t=n.string,r=S(e,t);return null===r?{value:void 0,done:n.done=!0}:n.global?(""==String(r[0])&&(e.lastIndex=x(t,i(e.lastIndex),n.unicode)),{value:r,done:!1}):(n.done=!0,{value:r,done:!1})})),E=function(n){var e,t,r,a,o,l,c=s(this),p=String(n);return e=h(c,RegExp),t=c.flags,void 0===t&&c instanceof RegExp&&!("flags"in V)&&(t=u.call(c)),r=void 0===t?"":String(t),a=new e(e===RegExp?c.source:c,r),o=!!~r.indexOf("g"),l=!!~r.indexOf("u"),a.lastIndex=i(c.lastIndex),new T(a,p,o,l)};r({target:"String",proto:!0,forced:R},{matchAll:function(n){var e,t,r,a,i=o(this);if(null!=n){if(p(n)&&(e=String(o("flags"in V?n.flags:u.call(n))),!~e.indexOf("g")))throw TypeError("`.matchAll` does not allow non-global regexes");if(R)return N.apply(i,arguments);if(r=n[C],void 0===r&&y&&"RegExp"==c(n)&&(r=E),null!=r)return l(r).call(n,i)}else if(R)return N.apply(i,arguments);return t=String(i),a=new RegExp(n,"g"),y?E.call(a,t):a[C](t)}}),y||C in V||d(V,C,E)},bSvb:function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t("YCKM"),i=t("f4X2"),l=t("IOv4");e["default"]=()=>{var n=a["useState"](0),e=Object(r["a"])(n,2),t=e[0],s=e[1],c=a["useState"](0),p=Object(r["a"])(c,2),u=p[0],d=p[1],m=a["useState"](0),f=Object(r["a"])(m,2),h=f[0],x=f[1],g=a["useState"](4),y=Object(r["a"])(g,2),C=y[0],w=y[1],v=a["useState"](3),b=Object(r["a"])(v,2),k=b[0],V=b[1],P=a["useState"](2),N=Object(r["a"])(P,2),R=N[0],S=N[1],T=a["useState"](2),E=Object(r["a"])(T,2),$=E[0],I=E[1],_=a["useState"](2),F=Object(r["a"])(_,2),O=F[0],A=F[1];return a["createElement"](l["b"],{padding:!0},a["createElement"](l["a"],{noTitlePadding:!0,title:"Basic"},a["createElement"](i["n"],{value:t,onChange:n=>s(n)})),a["createElement"](l["a"],{noTitlePadding:!0,title:"Custome Icon"},a["createElement"](i["n"],{icon:"evaluate",iconFill:"evaluate_fill",value:R,onChange:n=>S(n)})),a["createElement"](l["a"],{noTitlePadding:!0,title:"Color"},a["createElement"](i["n"],{color:"#FF9999",icon:"appreciate",iconFill:"appreciatefill",value:$,onChange:n=>I(n)})),a["createElement"](l["a"],{noTitlePadding:!0,title:"Size"},a["createElement"](i["n"],{size:"1.88rem",value:O,onChange:n=>A(n)})),a["createElement"](l["a"],{noTitlePadding:!0,title:"Count"},a["createElement"](i["n"],{count:6,value:C,onChange:n=>w(n)})),a["createElement"](l["a"],{noTitlePadding:!0,title:"ReadOnly"},a["createElement"](i["n"],{readOnly:!0,value:k,onChange:n=>V(n)})),a["createElement"](l["a"],{noTitlePadding:!0,title:"With Label"},a["createElement"](o["d"],{style:{marginBottom:"0.63rem"}},a["createElement"](i["n"],{label:"\u7269\u6d41\u670d\u52a1",value:u,onChange:n=>d(n)})),a["createElement"](o["d"],null,a["createElement"](i["n"],{label:"\u670d\u52a1\u6001\u5ea6",value:h,onChange:n=>x(n)}))))}},bcvT:function(n,e,t){var r=t("ukPv"),a=t("XX5T"),o=t("PHrn"),i=t("lz10");for(var l in a){var s=r[l],c=s&&s.prototype;if(c&&c.forEach!==o)try{i(c,"forEach",o)}catch(p){c.forEach=o}}},beyn:function(n,e,t){"use strict";var r=t("MMxC"),a=t("mTKU").end,o=t("HKQd"),i=o("trimEnd"),l=i?function(){return a(this)}:"".trimEnd;r({target:"String",proto:!0,forced:i},{trimEnd:l,trimRight:l})},bfL6:function(n,e,t){var r=t("mGKP");function a(n){if("undefined"===typeof Symbol||null==n[Symbol.iterator]){if(Array.isArray(n)||(n=r(n))){var e=0,t=function(){};return{s:t,n:function(){return e>=n.length?{done:!0}:{done:!1,value:n[e++]}},e:function(n){throw n},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o,i=!0,l=!1;return{s:function(){a=n[Symbol.iterator]()},n:function(){var n=a.next();return i=n.done,n},e:function(n){l=!0,o=n},f:function(){try{i||null==a["return"]||a["return"]()}finally{if(l)throw o}}}}n.exports=a},bv5U:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("QDMV")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"switch"},o.a.createElement("a",{"aria-hidden":"true",href:"#switch"},o.a.createElement("span",{className:"icon icon-link"})),"Switch"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Switch, Cell } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nexport default () => {\n  const [checked, setChecked] = React.useState(true);\n  const [checked1, setChecked1] = React.useState(true);\n  const [value, setValue] = React.useState(false);\n\n  return (\n    <Frame grayBg className={styles.app}>\n      <Block title=\"Basic\">\n        <View className={styles.container}>\n          <Switch checked={checked} onChange={v => setChecked(v)} />\n        </View>\n      </Block>\n      <Block title=\"Small\">\n        <View className={styles.container}>\n          <Switch small checked={checked1} onChange={v => setChecked1(v)} />\n        </View>\n      </Block>\n      <Block title=\"Disabled\">\n        <View className={styles.container}>\n          <Switch disabled checked={false} />\n          <View style={{ display: 'inline-block', width: '30px', height: '24px' }} />\n          <Switch disabled checked />\n        </View>\n      </Block>\n      <Block title=\"With Cell\">\n        <Cell\n          label=\"\u8bbe\u4e3a\u9ed8\u8ba4\u5730\u5740\"\n          valueStyle={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <Switch checked={value} onChange={v => setValue(v)} />\n        </Cell>\n      </Block>\n    </Frame>\n  );\n};\n",jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Switch, Cell } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nexport default () => {\n  const [checked, setChecked] = React.useState(true);\n  const [checked1, setChecked1] = React.useState(true);\n  const [value, setValue] = React.useState(false);\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n      className: styles.app,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          className: styles.container,\n        },\n        /* #__PURE__ */ React.createElement(Switch, {\n          checked,\n          onChange: v => setChecked(v),\n        }),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Small',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          className: styles.container,\n        },\n        /* #__PURE__ */ React.createElement(Switch, {\n          small: true,\n          checked: checked1,\n          onChange: v => setChecked1(v),\n        }),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Disabled',\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          className: styles.container,\n        },\n        /* #__PURE__ */ React.createElement(Switch, {\n          disabled: true,\n          checked: false,\n        }),\n        /* #__PURE__ */ React.createElement(View, {\n          style: {\n            display: 'inline-block',\n            width: '30px',\n            height: '24px',\n          },\n        }),\n        /* #__PURE__ */ React.createElement(Switch, {\n          disabled: true,\n          checked: true,\n        }),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Cell',\n      },\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: '\\u8BBE\\u4E3A\\u9ED8\\u8BA4\\u5730\\u5740',\n          valueStyle: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n          },\n        },\n        /* #__PURE__ */ React.createElement(Switch, {\n          checked: value,\n          onChange: v => setValue(v),\n        }),\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-12",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"index.module.scss":{path:"./index.module.scss",content:".app {\n  padding: 30px 0;\n  .container{\n    padding: 0 24px;\n  }\n}\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"checked"),o.a.createElement("td",null,"\u6307\u5b9a\u5f53\u524d\u662f\u5426\u9009\u4e2d"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"disabled"),o.a.createElement("td",null,"\u662f\u5426\u7981\u7528"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"small"),o.a.createElement("td",null,"\u662f\u5426\u4e3a\u5c0f\u578bSwitch"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"Switch\u53d8\u5316\u65f6\u7684\u56de\u8c03\u51fd\u6570"),o.a.createElement("td",null,"(e: any) => void"),o.a.createElement("td",null,"-"))))))}},bwJD:function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},cC5k:function(n,e,t){var r=t("29mP"),a=t("uGHk"),o=t("kyO0"),i=t("f1E4");n.exports=r("Reflect","ownKeys")||function(n){var e=a.f(i(n)),t=o.f;return t?e.concat(t(n)):e}},cT1L:function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(String(n)+" is not a function");return n}},cTDu:function(n,e,t){var r=t("FCfD");n.exports=function(n){return Object(r(n))}},"d/5L":function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("+X1D");r({target:"WeakMap",proto:!0,real:!0,forced:a},{deleteAll:function(){return o.apply(this,arguments)}})},dAyf:function(n,e){n.exports=function(n){if(!n.webpackPolyfill){var e=Object.create(n);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},dI71:function(n,e,t){"use strict";function r(n,e){n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.__proto__=e}t.d(e,"a",(function(){return r}))},dLjG:function(n,e,t){var r=t("MMxC"),a=t("1H91"),o=t("GPrf"),i=!o((function(n){Array.from(n)}));r({target:"Array",stat:!0,forced:i},{from:a})},dagG:function(n,e,t){var r=t("UwrT"),a=t("NcLc");n.exports=function(n,e){var t=n.exec;if("function"===typeof t){var o=t.call(n,e);if("object"!==typeof o)throw TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==r(n))throw TypeError("RegExp#exec called on incompatible receiver");return a.call(n,e)}},dlg8:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("CB4/")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"radio"},o.a.createElement("a",{"aria-hidden":"true",href:"#radio"},o.a.createElement("span",{className:"icon icon-link"})),"Radio"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Radio } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nconst radioStyle = { paddingBottom: '30px' };\n\nexport default () => {\n  const [checked, setChecked] = React.useState(true);\n  const [checked1, setChecked1] = React.useState(false);\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <Frame padding>\n      <Block title=\"Basic\" noTitlePadding>\n        <Radio checked={checked} onChange={v => setChecked(v)}>\n          Radio\n        </Radio>\n      </Block>\n      {/* <Block title=\"Label\" noTitlePadding>\n        <Radio checked={checked1} onChange={() => setChecked1(v => !v)}>\n          Remax\n        </Radio>\n        <Radio checked={!checked1} onChange={() => setChecked1(v => !v)}>\n          Taro\n        </Radio>\n      </Block> */}\n      <Block title=\"Group\" noTitlePadding>\n        <Radio.Group value={value} onChange={(c, v) => setValue(v)}>\n          <Radio value={0}>Apple</Radio>\n          <Radio value={1}>Cherry</Radio>\n          <Radio value={2}>Watermelon</Radio>\n        </Radio.Group>\n      </Block>\n      <Block title=\"Direction & Extra\" noTitlePadding>\n        <Radio.Group value={value} onChange={(c, v) => setValue(v)} direction=\"column\">\n          <Radio value={0} style={radioStyle}>\n            Apple\n          </Radio>\n          <Radio value={1} style={radioStyle}>\n            Cherry\n          </Radio>\n          <Radio\n            value={2}\n            style={radioStyle}\n            extra={\n              <View style={{ paddingTop: '24px', color: '#999', fontSize: '26px' }}>\n                Watermelon over 50 yuan, get 10 yuan coupon\n              </View>\n            }\n          >\n            Watermelon\n          </Radio>\n        </Radio.Group>\n      </Block>\n    </Frame>\n  );\n};\n",jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Radio } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nconst radioStyle = {\n  paddingBottom: '30px',\n};\nexport default () => {\n  const [checked, setChecked] = React.useState(true);\n  const [checked1, setChecked1] = React.useState(false);\n  const [value, setValue] = React.useState(0);\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      padding: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n        noTitlePadding: true,\n      },\n      /* #__PURE__ */ React.createElement(\n        Radio,\n        {\n          checked,\n          onChange: v => setChecked(v),\n        },\n        'Radio',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Group',\n        noTitlePadding: true,\n      },\n      /* #__PURE__ */ React.createElement(\n        Radio.Group,\n        {\n          value,\n          onChange: (c, v) => setValue(v),\n        },\n        /* #__PURE__ */ React.createElement(\n          Radio,\n          {\n            value: 0,\n          },\n          'Apple',\n        ),\n        /* #__PURE__ */ React.createElement(\n          Radio,\n          {\n            value: 1,\n          },\n          'Cherry',\n        ),\n        /* #__PURE__ */ React.createElement(\n          Radio,\n          {\n            value: 2,\n          },\n          'Watermelon',\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Direction & Extra',\n        noTitlePadding: true,\n      },\n      /* #__PURE__ */ React.createElement(\n        Radio.Group,\n        {\n          value,\n          onChange: (c, v) => setValue(v),\n          direction: 'column',\n        },\n        /* #__PURE__ */ React.createElement(\n          Radio,\n          {\n            value: 0,\n            style: radioStyle,\n          },\n          'Apple',\n        ),\n        /* #__PURE__ */ React.createElement(\n          Radio,\n          {\n            value: 1,\n            style: radioStyle,\n          },\n          'Cherry',\n        ),\n        /* #__PURE__ */ React.createElement(\n          Radio,\n          {\n            value: 2,\n            style: radioStyle,\n            extra: /* #__PURE__ */ React.createElement(\n              View,\n              {\n                style: {\n                  paddingTop: '24px',\n                  color: '#999',\n                  fontSize: '26px',\n                },\n              },\n              'Watermelon over 50 yuan, get 10 yuan coupon',\n            ),\n          },\n          'Watermelon',\n        ),\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-8",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"radio-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#radio-1"},o.a.createElement("span",{className:"icon icon-link"})),"Radio"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"checked"),o.a.createElement("td",null,"\u6307\u5b9a\u5f53\u524d\u662f\u5426\u9009\u4e2d"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u6839\u636e value \u8fdb\u884c\u6bd4\u8f83\uff0c\u5224\u65ad\u662f\u5426\u9009\u4e2d"),o.a.createElement("td",null,"any"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"extra"),o.a.createElement("td",null,"Radio\u4e0b\u65b9\u6dfb\u52a0\u7684\u5176\u4ed6\u4fe1\u606f"),o.a.createElement("td",null,"ReactNode"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49Radio\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"Radio\u53d8\u5316\u65f6\u7684\u56de\u8c03\u51fd\u6570"),o.a.createElement("td",null,"(e: any, v: any) => void"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"radiogroup"},o.a.createElement("a",{"aria-hidden":"true",href:"#radiogroup"},o.a.createElement("span",{className:"icon icon-link"})),"Radio.Group"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u7528\u4e8e\u8bbe\u7f6e\u5f53\u524d\u9009\u4e2d\u7684\u503c"),o.a.createElement("td",null,"any"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"direction"),o.a.createElement("td",null,"Group\u91cc\u7684Radio\u7684\u6392\u5217\u65b9\u5411"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,o.a.createElement("code",null,"row"))),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49Group\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"\u9009\u9879\u53d8\u5316\u65f6\u7684\u56de\u8c03\u51fd\u6570"),o.a.createElement("td",null,"(e: any, v: any) => void"),o.a.createElement("td",null,"-"))))))}},dnEI:function(n,e,t){var r=t("ukPv");n.exports=function(n,e){var t=r.console;t&&t.error&&(1===arguments.length?t.error(n):t.error(n,e))}},dnZx:function(n,e,t){"use strict";t("KvPC");var r,a=t("MMxC"),o=t("tny8"),i=t("lgSf"),l=t("ukPv"),s=t("HctQ"),c=t("NMFW"),p=t("igoe"),u=t("jtLI"),d=t("qitQ"),m=t("1H91"),f=t("eYKs").codeAt,h=t("Di6M"),x=t("kiNa"),g=t("5JgN"),y=t("1aI8"),C=l.URL,w=g.URLSearchParams,v=g.getState,b=y.set,k=y.getterFor("URL"),V=Math.floor,P=Math.pow,N="Invalid authority",R="Invalid scheme",S="Invalid host",T="Invalid port",E=/[A-Za-z]/,$=/[\d+-.A-Za-z]/,I=/\d/,_=/^(0x|0X)/,F=/^[0-7]+$/,O=/^\d+$/,A=/^[\dA-Fa-f]+$/,M=/[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,z=/[\u0000\u0009\u000A\u000D #/:?@[\\]]/,j=/^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,B=/[\u0009\u000A\u000D]/g,D=function(n,e){var t,r,a;if("["==e.charAt(0)){if("]"!=e.charAt(e.length-1))return S;if(t=U(e.slice(1,-1)),!t)return S;n.host=t}else if(Q(n)){if(e=h(e),M.test(e))return S;if(t=L(e),null===t)return S;n.host=t}else{if(z.test(e))return S;for(t="",r=m(e),a=0;a<r.length;a++)t+=Y(r[a],W);n.host=t}},L=function(n){var e,t,r,a,o,i,l,s=n.split(".");if(s.length&&""==s[s.length-1]&&s.pop(),e=s.length,e>4)return n;for(t=[],r=0;r<e;r++){if(a=s[r],""==a)return n;if(o=10,a.length>1&&"0"==a.charAt(0)&&(o=_.test(a)?16:8,a=a.slice(8==o?1:2)),""===a)i=0;else{if(!(10==o?O:8==o?F:A).test(a))return n;i=parseInt(a,o)}t.push(i)}for(r=0;r<e;r++)if(i=t[r],r==e-1){if(i>=P(256,5-e))return null}else if(i>255)return null;for(l=t.pop(),r=0;r<t.length;r++)l+=t[r]*P(256,3-r);return l},U=function(n){var e,t,r,a,o,i,l,s=[0,0,0,0,0,0,0,0],c=0,p=null,u=0,d=function(){return n.charAt(u)};if(":"==d()){if(":"!=n.charAt(1))return;u+=2,c++,p=c}while(d()){if(8==c)return;if(":"!=d()){e=t=0;while(t<4&&A.test(d()))e=16*e+parseInt(d(),16),u++,t++;if("."==d()){if(0==t)return;if(u-=t,c>6)return;r=0;while(d()){if(a=null,r>0){if(!("."==d()&&r<4))return;u++}if(!I.test(d()))return;while(I.test(d())){if(o=parseInt(d(),10),null===a)a=o;else{if(0==a)return;a=10*a+o}if(a>255)return;u++}s[c]=256*s[c]+a,r++,2!=r&&4!=r||c++}if(4!=r)return;break}if(":"==d()){if(u++,!d())return}else if(d())return;s[c++]=e}else{if(null!==p)return;u++,c++,p=c}}if(null!==p){i=c-p,c=7;while(0!=c&&i>0)l=s[c],s[c--]=s[p+i-1],s[p+--i]=l}else if(8!=c)return;return s},K=function(n){for(var e=null,t=1,r=null,a=0,o=0;o<8;o++)0!==n[o]?(a>t&&(e=r,t=a),r=null,a=0):(null===r&&(r=o),++a);return a>t&&(e=r,t=a),e},q=function(n){var e,t,r,a;if("number"==typeof n){for(e=[],t=0;t<4;t++)e.unshift(n%256),n=V(n/256);return e.join(".")}if("object"==typeof n){for(e="",r=K(n),t=0;t<8;t++)a&&0===n[t]||(a&&(a=!1),r===t?(e+=t?":":"::",a=!0):(e+=n[t].toString(16),t<7&&(e+=":")));return"["+e+"]"}return n},W={},H=d({},W,{" ":1,'"':1,"<":1,">":1,"`":1}),G=d({},H,{"#":1,"?":1,"{":1,"}":1}),X=d({},G,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),Y=function(n,e){var t=f(n,0);return t>32&&t<127&&!u(e,n)?n:encodeURIComponent(n)},Z={ftp:21,file:null,http:80,https:443,ws:80,wss:443},Q=function(n){return u(Z,n.scheme)},J=function(n){return""!=n.username||""!=n.password},nn=function(n){return!n.host||n.cannotBeABaseURL||"file"==n.scheme},en=function(n,e){var t;return 2==n.length&&E.test(n.charAt(0))&&(":"==(t=n.charAt(1))||!e&&"|"==t)},tn=function(n){var e;return n.length>1&&en(n.slice(0,2))&&(2==n.length||"/"===(e=n.charAt(2))||"\\"===e||"?"===e||"#"===e)},rn=function(n){var e=n.path,t=e.length;!t||"file"==n.scheme&&1==t&&en(e[0],!0)||e.pop()},an=function(n){return"."===n||"%2e"===n.toLowerCase()},on=function(n){return n=n.toLowerCase(),".."===n||"%2e."===n||".%2e"===n||"%2e%2e"===n},ln={},sn={},cn={},pn={},un={},dn={},mn={},fn={},hn={},xn={},gn={},yn={},Cn={},wn={},vn={},bn={},kn={},Vn={},Pn={},Nn={},Rn={},Sn=function(n,e,t,a){var o,i,l,s,c=t||ln,p=0,d="",f=!1,h=!1,x=!1;t||(n.scheme="",n.username="",n.password="",n.host=null,n.port=null,n.path=[],n.query=null,n.fragment=null,n.cannotBeABaseURL=!1,e=e.replace(j,"")),e=e.replace(B,""),o=m(e);while(p<=o.length){switch(i=o[p],c){case ln:if(!i||!E.test(i)){if(t)return R;c=cn;continue}d+=i.toLowerCase(),c=sn;break;case sn:if(i&&($.test(i)||"+"==i||"-"==i||"."==i))d+=i.toLowerCase();else{if(":"!=i){if(t)return R;d="",c=cn,p=0;continue}if(t&&(Q(n)!=u(Z,d)||"file"==d&&(J(n)||null!==n.port)||"file"==n.scheme&&!n.host))return;if(n.scheme=d,t)return void(Q(n)&&Z[n.scheme]==n.port&&(n.port=null));d="","file"==n.scheme?c=wn:Q(n)&&a&&a.scheme==n.scheme?c=pn:Q(n)?c=fn:"/"==o[p+1]?(c=un,p++):(n.cannotBeABaseURL=!0,n.path.push(""),c=Pn)}break;case cn:if(!a||a.cannotBeABaseURL&&"#"!=i)return R;if(a.cannotBeABaseURL&&"#"==i){n.scheme=a.scheme,n.path=a.path.slice(),n.query=a.query,n.fragment="",n.cannotBeABaseURL=!0,c=Rn;break}c="file"==a.scheme?wn:dn;continue;case pn:if("/"!=i||"/"!=o[p+1]){c=dn;continue}c=hn,p++;break;case un:if("/"==i){c=xn;break}c=Vn;continue;case dn:if(n.scheme=a.scheme,i==r)n.username=a.username,n.password=a.password,n.host=a.host,n.port=a.port,n.path=a.path.slice(),n.query=a.query;else if("/"==i||"\\"==i&&Q(n))c=mn;else if("?"==i)n.username=a.username,n.password=a.password,n.host=a.host,n.port=a.port,n.path=a.path.slice(),n.query="",c=Nn;else{if("#"!=i){n.username=a.username,n.password=a.password,n.host=a.host,n.port=a.port,n.path=a.path.slice(),n.path.pop(),c=Vn;continue}n.username=a.username,n.password=a.password,n.host=a.host,n.port=a.port,n.path=a.path.slice(),n.query=a.query,n.fragment="",c=Rn}break;case mn:if(!Q(n)||"/"!=i&&"\\"!=i){if("/"!=i){n.username=a.username,n.password=a.password,n.host=a.host,n.port=a.port,c=Vn;continue}c=xn}else c=hn;break;case fn:if(c=hn,"/"!=i||"/"!=d.charAt(p+1))continue;p++;break;case hn:if("/"!=i&&"\\"!=i){c=xn;continue}break;case xn:if("@"==i){f&&(d="%40"+d),f=!0,l=m(d);for(var g=0;g<l.length;g++){var y=l[g];if(":"!=y||x){var C=Y(y,X);x?n.password+=C:n.username+=C}else x=!0}d=""}else if(i==r||"/"==i||"?"==i||"#"==i||"\\"==i&&Q(n)){if(f&&""==d)return N;p-=m(d).length+1,d="",c=gn}else d+=i;break;case gn:case yn:if(t&&"file"==n.scheme){c=bn;continue}if(":"!=i||h){if(i==r||"/"==i||"?"==i||"#"==i||"\\"==i&&Q(n)){if(Q(n)&&""==d)return S;if(t&&""==d&&(J(n)||null!==n.port))return;if(s=D(n,d),s)return s;if(d="",c=kn,t)return;continue}"["==i?h=!0:"]"==i&&(h=!1),d+=i}else{if(""==d)return S;if(s=D(n,d),s)return s;if(d="",c=Cn,t==yn)return}break;case Cn:if(!I.test(i)){if(i==r||"/"==i||"?"==i||"#"==i||"\\"==i&&Q(n)||t){if(""!=d){var w=parseInt(d,10);if(w>65535)return T;n.port=Q(n)&&w===Z[n.scheme]?null:w,d=""}if(t)return;c=kn;continue}return T}d+=i;break;case wn:if(n.scheme="file","/"==i||"\\"==i)c=vn;else{if(!a||"file"!=a.scheme){c=Vn;continue}if(i==r)n.host=a.host,n.path=a.path.slice(),n.query=a.query;else if("?"==i)n.host=a.host,n.path=a.path.slice(),n.query="",c=Nn;else{if("#"!=i){tn(o.slice(p).join(""))||(n.host=a.host,n.path=a.path.slice(),rn(n)),c=Vn;continue}n.host=a.host,n.path=a.path.slice(),n.query=a.query,n.fragment="",c=Rn}}break;case vn:if("/"==i||"\\"==i){c=bn;break}a&&"file"==a.scheme&&!tn(o.slice(p).join(""))&&(en(a.path[0],!0)?n.path.push(a.path[0]):n.host=a.host),c=Vn;continue;case bn:if(i==r||"/"==i||"\\"==i||"?"==i||"#"==i){if(!t&&en(d))c=Vn;else if(""==d){if(n.host="",t)return;c=kn}else{if(s=D(n,d),s)return s;if("localhost"==n.host&&(n.host=""),t)return;d="",c=kn}continue}d+=i;break;case kn:if(Q(n)){if(c=Vn,"/"!=i&&"\\"!=i)continue}else if(t||"?"!=i)if(t||"#"!=i){if(i!=r&&(c=Vn,"/"!=i))continue}else n.fragment="",c=Rn;else n.query="",c=Nn;break;case Vn:if(i==r||"/"==i||"\\"==i&&Q(n)||!t&&("?"==i||"#"==i)){if(on(d)?(rn(n),"/"==i||"\\"==i&&Q(n)||n.path.push("")):an(d)?"/"==i||"\\"==i&&Q(n)||n.path.push(""):("file"==n.scheme&&!n.path.length&&en(d)&&(n.host&&(n.host=""),d=d.charAt(0)+":"),n.path.push(d)),d="","file"==n.scheme&&(i==r||"?"==i||"#"==i))while(n.path.length>1&&""===n.path[0])n.path.shift();"?"==i?(n.query="",c=Nn):"#"==i&&(n.fragment="",c=Rn)}else d+=Y(i,G);break;case Pn:"?"==i?(n.query="",c=Nn):"#"==i?(n.fragment="",c=Rn):i!=r&&(n.path[0]+=Y(i,W));break;case Nn:t||"#"!=i?i!=r&&("'"==i&&Q(n)?n.query+="%27":n.query+="#"==i?"%23":Y(i,W)):(n.fragment="",c=Rn);break;case Rn:i!=r&&(n.fragment+=Y(i,H));break}p++}},Tn=function(n){var e,t,r=p(this,Tn,"URL"),a=arguments.length>1?arguments[1]:void 0,i=String(n),l=b(r,{type:"URL"});if(void 0!==a)if(a instanceof Tn)e=k(a);else if(t=Sn(e={},String(a)),t)throw TypeError(t);if(t=Sn(l,i,null,e),t)throw TypeError(t);var s=l.searchParams=new w,c=v(s);c.updateSearchParams(l.query),c.updateURL=function(){l.query=String(s)||null},o||(r.href=$n.call(r),r.origin=In.call(r),r.protocol=_n.call(r),r.username=Fn.call(r),r.password=On.call(r),r.host=An.call(r),r.hostname=Mn.call(r),r.port=zn.call(r),r.pathname=jn.call(r),r.search=Bn.call(r),r.searchParams=Dn.call(r),r.hash=Ln.call(r))},En=Tn.prototype,$n=function(){var n=k(this),e=n.scheme,t=n.username,r=n.password,a=n.host,o=n.port,i=n.path,l=n.query,s=n.fragment,c=e+":";return null!==a?(c+="//",J(n)&&(c+=t+(r?":"+r:"")+"@"),c+=q(a),null!==o&&(c+=":"+o)):"file"==e&&(c+="//"),c+=n.cannotBeABaseURL?i[0]:i.length?"/"+i.join("/"):"",null!==l&&(c+="?"+l),null!==s&&(c+="#"+s),c},In=function(){var n=k(this),e=n.scheme,t=n.port;if("blob"==e)try{return new URL(e.path[0]).origin}catch(r){return"null"}return"file"!=e&&Q(n)?e+"://"+q(n.host)+(null!==t?":"+t:""):"null"},_n=function(){return k(this).scheme+":"},Fn=function(){return k(this).username},On=function(){return k(this).password},An=function(){var n=k(this),e=n.host,t=n.port;return null===e?"":null===t?q(e):q(e)+":"+t},Mn=function(){var n=k(this).host;return null===n?"":q(n)},zn=function(){var n=k(this).port;return null===n?"":String(n)},jn=function(){var n=k(this),e=n.path;return n.cannotBeABaseURL?e[0]:e.length?"/"+e.join("/"):""},Bn=function(){var n=k(this).query;return n?"?"+n:""},Dn=function(){return k(this).searchParams},Ln=function(){var n=k(this).fragment;return n?"#"+n:""},Un=function(n,e){return{get:n,set:e,configurable:!0,enumerable:!0}};if(o&&s(En,{href:Un($n,(function(n){var e=k(this),t=String(n),r=Sn(e,t);if(r)throw TypeError(r);v(e.searchParams).updateSearchParams(e.query)})),origin:Un(In),protocol:Un(_n,(function(n){var e=k(this);Sn(e,String(n)+":",ln)})),username:Un(Fn,(function(n){var e=k(this),t=m(String(n));if(!nn(e)){e.username="";for(var r=0;r<t.length;r++)e.username+=Y(t[r],X)}})),password:Un(On,(function(n){var e=k(this),t=m(String(n));if(!nn(e)){e.password="";for(var r=0;r<t.length;r++)e.password+=Y(t[r],X)}})),host:Un(An,(function(n){var e=k(this);e.cannotBeABaseURL||Sn(e,String(n),gn)})),hostname:Un(Mn,(function(n){var e=k(this);e.cannotBeABaseURL||Sn(e,String(n),yn)})),port:Un(zn,(function(n){var e=k(this);nn(e)||(n=String(n),""==n?e.port=null:Sn(e,n,Cn))})),pathname:Un(jn,(function(n){var e=k(this);e.cannotBeABaseURL||(e.path=[],Sn(e,n+"",kn))})),search:Un(Bn,(function(n){var e=k(this);n=String(n),""==n?e.query=null:("?"==n.charAt(0)&&(n=n.slice(1)),e.query="",Sn(e,n,Nn)),v(e.searchParams).updateSearchParams(e.query)})),searchParams:Un(Dn),hash:Un(Ln,(function(n){var e=k(this);n=String(n),""!=n?("#"==n.charAt(0)&&(n=n.slice(1)),e.fragment="",Sn(e,n,Rn)):e.fragment=null}))}),c(En,"toJSON",(function(){return $n.call(this)}),{enumerable:!0}),c(En,"toString",(function(){return $n.call(this)}),{enumerable:!0}),C){var Kn=C.createObjectURL,qn=C.revokeObjectURL;Kn&&c(Tn,"createObjectURL",(function(n){return Kn.apply(C,arguments)})),qn&&c(Tn,"revokeObjectURL",(function(n){return qn.apply(C,arguments)}))}x(Tn,"URL"),a({global:!0,forced:!i,sham:!o},{URL:Tn})},e3V2:function(n,e,t){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,o=a&&!r.call({1:2},1);e.f=o?function(n){var e=a(this,n);return!!e&&e.enumerable}:r},eCow:function(n,e,t){var r=t("MMxC"),a=t("ls1J"),o=t("f1E4"),i=t("Acmb"),l=a.has,s=a.get,c=a.toKey,p=function(n,e,t){var r=l(n,e,t);if(r)return s(n,e,t);var a=i(e);return null!==a?p(n,a,t):void 0};r({target:"Reflect",stat:!0},{getMetadata:function(n,e){var t=arguments.length<3?void 0:c(arguments[2]);return p(n,o(e),t)}})},eLxY:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("97lQ")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"result"},o.a.createElement("a",{"aria-hidden":"true",href:"#result"},o.a.createElement("span",{className:"icon icon-link"})),"Result"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { View } from \'remax/one\';\nimport { Result, Button } from \'anna-remax-ui\';\nimport { Block, Frame } from \'../../common\';\nimport styles from \'./index.module.scss\';\n\nexport default () => {\n  return (\n    <Frame grayBg>\n      <Block title="Success">\n        <Result\n          height="1000px"\n          status="success"\n          title="\u63d0\u4ea4\u6210\u529f"\n          subTitle="\u60a8\u7684\u8be2\u4ef7\u9700\u6c42\u5df2\u7ecf\u63d0\u4ea4\u6210\u529f\uff0c\u6709\u62a5\u4ef7\u65f6\u7cfb\u7edf\u4f1a\u53ca\u65f6\u901a\u77e5\u60a8\u8fdb\u884c\u786e\u8ba4"\n          extra={\n            <View>\n              <Button type="primary" style={{ marginRight: \'24px\' }}>\n                \u67e5\u770b\u9700\u6c42\n              </Button>\n              <Button>\u8fd4\u56de\u770b\u677f</Button>\n            </View>\n          }\n        />\n      </Block>\n      <Block title="Info">\n        <Result\n          height="1000px"\n          status="info"\n          title="\u60a8\u5df2\u7ecf\u63d0\u4ea4\u8fc7\u4e86"\n          extra={\n            <View>\n              <Button>\u8fd4\u56de\u770b\u677f</Button>\n            </View>\n          }\n        />\n      </Block>\n      <Block title="Warning">\n        <Result height="1000px" status="warning" title="\u6743\u9650\u4e0d\u8db3" subTitle="\u62b1\u6b49\uff0c\u60a8\u65e0\u6743\u8bbf\u95ee\u6b64\u9875" />\n      </Block>\n      <Block title="Error">\n        <Result\n          height="1000px"\n          status="error"\n          title="\u63d0\u4ea4\u5931\u8d25"\n          subTitle="\u8bf7\u4ed4\u7ec6\u68c0\u67e5\u6838\u5bf9\u4fe1\u606f\u540e\u5728\u63d0\u4ea4"\n        >\n          <View className={styles.item}>1. \u8bf7\u6839\u636e\u56fe\u7247\u4fe1\u606f\u586b\u5199\u76f8\u5173\u4fe1\u606f\u3002</View>\n          <View className={styles.item}>2. \u5982\u679c\u60a8\u6709\u4efb\u4f55\u7591\u95ee\u8bf7\u53ca\u65f6\u8054\u7cfb\u5ba2\u670d\u3002</View>\n        </Result>\n      </Block>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { View } from 'remax/one';\nimport { Result, Button } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nexport default () =>\n  /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Success',\n      },\n      /* #__PURE__ */ React.createElement(Result, {\n        height: '1000px',\n        status: 'success',\n        title: '\\u63D0\\u4EA4\\u6210\\u529F',\n        subTitle:\n          '\\u60A8\\u7684\\u8BE2\\u4EF7\\u9700\\u6C42\\u5DF2\\u7ECF\\u63D0\\u4EA4\\u6210\\u529F\\uFF0C\\u6709\\u62A5\\u4EF7\\u65F6\\u7CFB\\u7EDF\\u4F1A\\u53CA\\u65F6\\u901A\\u77E5\\u60A8\\u8FDB\\u884C\\u786E\\u8BA4',\n        extra: /* #__PURE__ */ React.createElement(\n          View,\n          null,\n          /* #__PURE__ */ React.createElement(\n            Button,\n            {\n              type: 'primary',\n              style: {\n                marginRight: '24px',\n              },\n            },\n            '\\u67E5\\u770B\\u9700\\u6C42',\n          ),\n          /* #__PURE__ */ React.createElement(Button, null, '\\u8FD4\\u56DE\\u770B\\u677F'),\n        ),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Info',\n      },\n      /* #__PURE__ */ React.createElement(Result, {\n        height: '1000px',\n        status: 'info',\n        title: '\\u60A8\\u5DF2\\u7ECF\\u63D0\\u4EA4\\u8FC7\\u4E86',\n        extra: /* #__PURE__ */ React.createElement(\n          View,\n          null,\n          /* #__PURE__ */ React.createElement(Button, null, '\\u8FD4\\u56DE\\u770B\\u677F'),\n        ),\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Warning',\n      },\n      /* #__PURE__ */ React.createElement(Result, {\n        height: '1000px',\n        status: 'warning',\n        title: '\\u6743\\u9650\\u4E0D\\u8DB3',\n        subTitle: '\\u62B1\\u6B49\\uFF0C\\u60A8\\u65E0\\u6743\\u8BBF\\u95EE\\u6B64\\u9875',\n      }),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Error',\n      },\n      /* #__PURE__ */ React.createElement(\n        Result,\n        {\n          height: '1000px',\n          status: 'error',\n          title: '\\u63D0\\u4EA4\\u5931\\u8D25',\n          subTitle:\n            '\\u8BF7\\u4ED4\\u7EC6\\u68C0\\u67E5\\u6838\\u5BF9\\u4FE1\\u606F\\u540E\\u5728\\u63D0\\u4EA4',\n        },\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.item,\n          },\n          '1. \\u8BF7\\u6839\\u636E\\u56FE\\u7247\\u4FE1\\u606F\\u586B\\u5199\\u76F8\\u5173\\u4FE1\\u606F\\u3002',\n        ),\n        /* #__PURE__ */ React.createElement(\n          View,\n          {\n            className: styles.item,\n          },\n          '2. \\u5982\\u679C\\u60A8\\u6709\\u4EFB\\u4F55\\u7591\\u95EE\\u8BF7\\u53CA\\u65F6\\u8054\\u7CFB\\u5BA2\\u670D\\u3002',\n        ),\n      ),\n    ),\n  );\n"}},{path:"/_demos/index-16",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"index.module.scss":{path:"./index.module.scss",content:".item{\n  padding-bottom: 30px;\n  color: #666;\n  font-size: 28px;\n  &:nth-last-child(1){\n    padding-bottom: 0;\n  }\n}\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"result-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#result-1"},o.a.createElement("span",{className:"icon icon-link"})),"Result"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"title"),o.a.createElement("td",null,"\u6807\u9898"),o.a.createElement("td",null,o.a.createElement("code",null,"string")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"subTitle"),o.a.createElement("td",null,"\u526f\u6807\u9898"),o.a.createElement("td",null,o.a.createElement("code",null,"string")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"extra"),o.a.createElement("td",null,"\u64cd\u4f5c\u533a"),o.a.createElement("td",null,"ReactNode"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"status"),o.a.createElement("td",null,"\u72b6\u6001\u503c\uff0c\u51b3\u5b9a\u56fe\u6807\u548c\u989c\u8272\uff0c\u53ef\u9009\u503c\u6709 ",o.a.createElement("code",null,"info")," ",o.a.createElement("code",null,"success")," ",o.a.createElement("code",null,"warning")," ",o.a.createElement("code",null,"error")),o.a.createElement("td",null,"string"),o.a.createElement("td",null,o.a.createElement("code",null,"info"))),o.a.createElement("tr",null,o.a.createElement("td",null,"icon"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49 icon"),o.a.createElement("td",null,"React.ReactNode"),o.a.createElement("td",null,"IconProps")),o.a.createElement("tr",null,o.a.createElement("td",null,"height"),o.a.createElement("td",null,"\u7ed3\u679c\u9875\u7684\u9ad8\u5ea6"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,o.a.createElement("code",null,"100vh"))))),o.a.createElement("h4",{id:"iconprops"},o.a.createElement("a",{"aria-hidden":"true",href:"#iconprops"},o.a.createElement("span",{className:"icon icon-link"})),"IconProps"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"name"),o.a.createElement("td",null,"icon \u7684\u540d\u79f0"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"color"),o.a.createElement("td",null,"icon \u7684\u989c\u8272"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-"))))))}},eNh0:function(n,e,t){var r=t("2kyd"),a=t("u+7+"),o=t("YfKC"),i=r("unscopables"),l=Array.prototype;void 0==l[i]&&o.f(l,i,{configurable:!0,value:a(null)}),n.exports=function(n){l[i][n]=!0}},eP3D:function(n,e,t){var r=t("Mi8B");r("Float64",(function(n){return function(e,t,r){return n(this,e,t,r)}}))},eVs5:function(n,e,t){"use strict";function r(){var n=a(t("6xEa"));return r=function(){return n},n}function a(n){return n&&n.__esModule?n:{default:n}}function o(n){return r()["default"].compressToBase64(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function i(n){return o(JSON.stringify(n))}Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var l=i;e["default"]=l},eYKs:function(n,e,t){var r=t("m0kY"),a=t("FCfD"),o=function(n){return function(e,t){var o,i,l=String(a(e)),s=r(t),c=l.length;return s<0||s>=c?n?"":void 0:(o=l.charCodeAt(s),o<55296||o>56319||s+1===c||(i=l.charCodeAt(s+1))<56320||i>57343?n?l.charAt(s):o:n?l.slice(s,s+2):i-56320+(o-55296<<10)+65536)}};n.exports={codeAt:o(!1),charAt:o(!0)}},ecuC:function(n,e,t){"use strict";var r=t("MMxC"),a=t("uoF6"),o=t("FCfD"),i=t("1aI8"),l=t("eYKs"),s=l.codeAt,c=l.charAt,p="String Iterator",u=i.set,d=i.getterFor(p),m=a((function(n){u(this,{type:p,string:n,index:0})}),"String",(function(){var n,e=d(this),t=e.string,r=e.index;return r>=t.length?{value:void 0,done:!0}:(n=c(t,r),e.index+=n.length,{value:{codePoint:s(n,0),position:r},done:!1})}));r({target:"String",proto:!0},{codePoints:function(){return new m(String(o(this)))}})},"egz/":function(n,e){var t=Math.log;n.exports=Math.log1p||function(n){return(n=+n)>-1e-8&&n<1e-8?n-n*n/2:t(1+n)}},elpK:function(n,e,t){},evbn:function(n,e){var t=0,r=Math.random();n.exports=function(n){return"Symbol("+String(void 0===n?"":n)+")_"+(++t+r).toString(36)}},"f/k9":function(n,e,t){"use strict";var r=t("MgzW"),a=t("q1tI");e.useSubscription=function(n){var e=n.getCurrentValue,t=n.subscribe,o=a.useState((function(){return{getCurrentValue:e,subscribe:t,value:e()}}));n=o[0];var i=o[1];return o=n.value,n.getCurrentValue===e&&n.subscribe===t||(o=e(),i({getCurrentValue:e,subscribe:t,value:o})),a.useDebugValue(o),a.useEffect((function(){function n(){if(!a){var n=e();i((function(a){return a.getCurrentValue!==e||a.subscribe!==t||a.value===n?a:r({},a,{value:n})}))}}var a=!1,o=t(n);return n(),function(){a=!0,o()}}),[e,t]),o}},f1E4:function(n,e,t){var r=t("tSXo");n.exports=function(n){if(!r(n))throw TypeError(String(n)+" is not an object");return n}},f4X2:function(n,e,t){"use strict";t.d(e,"a",(function(){return g})),t.d(e,"e",(function(){return k})),t.d(e,"h",(function(){return w})),t.d(e,"i",(function(){return N})),t.d(e,"k",(function(){return Ti})),t.d(e,"m",(function(){return _i})),t.d(e,"f",(function(){return Mi})),t.d(e,"t",(function(){return Bi})),t.d(e,"w",(function(){return Ui})),t.d(e,"q",(function(){return Gi})),t.d(e,"r",(function(){return rl})),t.d(e,"g",(function(){return fl})),t.d(e,"l",(function(){return nl})),t.d(e,"c",(function(){return bl})),t.d(e,"n",(function(){return Pl})),t.d(e,"u",(function(){return Tl})),t.d(e,"s",(function(){return Il})),t.d(e,"v",(function(){return Ol})),t.d(e,"j",(function(){return f})),t.d(e,"o",(function(){return jl})),t.d(e,"b",(function(){return Ll})),t.d(e,"p",(function(){return Wl})),t.d(e,"d",(function(){return Xl}));var r=t("q1tI"),a=t.n(r),o=t("YCKM"),i=t("TSYQ"),l=t.n(i),s=t("k1fw"),c=function(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return e},p="anna",u=n=>"".concat(p,"-").concat(n),d=(t("/EW0"),u("loading")),m=n=>{var e=n.style,t=n.type,a=n.color,i=void 0===a?"#999":a,l=n.gapColor,c=void 0===l?"#FDFFFD":l,p=n.radius,u=void 0===p?"1.31rem":p;return"gap"===t?r["createElement"](o["d"],{className:"".concat(d,"-gap"),style:{height:u,width:u,border:"0.06rem solid ".concat(i)}},r["createElement"](o["d"],{className:"".concat(d,"-gap-fill"),style:{backgroundColor:c}})):"wave"===t?r["createElement"](o["d"],{className:"".concat(d,"-wave")},r["createElement"](o["d"],{style:{backgroundColor:i}}),r["createElement"](o["d"],{style:{backgroundColor:i}}),r["createElement"](o["d"],{style:{backgroundColor:i}}),r["createElement"](o["d"],{style:{backgroundColor:i}}),r["createElement"](o["d"],{style:{backgroundColor:i}})):"anna"===t?r["createElement"](o["d"],{className:"".concat(d,"-anna")},r["createElement"](o["d"],{style:{backgroundColor:i}}),r["createElement"](o["d"],{style:{backgroundColor:i}}),r["createElement"](o["d"],{style:{backgroundColor:i}})):r["createElement"](o["d"],{className:d,style:Object(s["a"])(Object(s["a"])({},e),{},{height:u,width:u,borderColor:"".concat(i," ").concat(i," transparent")})})},f=m,h=(t("VGuW"),u("button")),x=(c("default","primary","simple"),n=>{var e=n.type,t=n.size,a=n.style,i=n.children,s=n.onTap,c=n.disabled,p=n.danger,u=n.square,d=n.block,m=n.loading,x=n.loadingText,g=n.plain,y=()=>{c||m||null===s||void 0===s||s()};return r["createElement"](o["d"],{className:l()({[h]:!0,["".concat(h,"-square")]:u,["".concat(h,"-small")]:"small"===t,["".concat(h,"-large")]:"large"===t,["".concat(h,"-superlarge")]:"superlarge"===t,["".concat(h,"-primary")]:"primary"===e,["".concat(h,"-plain")]:g,["".concat(h,"-danger-default")]:p,["".concat(h,"-danger")]:"primary"===e&&p,["".concat(h,"-block")]:d,["".concat(h,"-loading")]:m,["".concat(h,"-disabled")]:c}),onTap:y,style:a},m?r["createElement"](o["d"],{className:"".concat(h,"-loading-icon")},r["createElement"](f,{color:"#FDFFFD",radius:"1.13rem",style:{verticalAlign:"text-top"}})):null,r["createElement"](o["b"],null,m&&x?x:i))}),g=x,y=(t("a1nA"),u("icon")),C=n=>{var e=n.type,t=n.color,a=n.size,i=n.style;return r["createElement"](o["b"],{className:l()({[y]:!0,iconfont:!0,["icon-".concat(e)]:!0}),style:Object(s["a"])(Object(s["a"])({},i),{},{color:t,fontSize:a||"0.88rem"})})},w=C,v=(t("2Nc+"),u("cell")),b=n=>{var e=n.label,t=n.style,a=n.labelStyle,i=n.valueStyle,s=n.children,c=n.description,p=n.verticality,u=n.icon,d=n.border,m=void 0===d||d,f=n.arrow,h=n.required,x=n.field,g=n.defaultNullValue,y=void 0===g?"":g,C=n.onTap;return p?r["createElement"](o["d"],{className:v,style:t,onTap:C},r["createElement"](o["d"],{className:"".concat(v,"-verticality")},e?r["createElement"](o["d"],{className:"".concat(v,"-verticality-label"),style:a},e):null,r["createElement"](o["d"],{className:"".concat(v,"-verticality-value"),style:i},s))):r["createElement"](o["d"],{className:v,style:t,onTap:C},r["createElement"](o["d"],{className:"".concat(v,"-container")},r["createElement"](o["d"],{className:"".concat(v,"-container-main")},r["createElement"](o["d"],{className:l()("".concat(v,"-container-main-left"),{["".concat(v,"-container-main-left-input")]:x})},r["createElement"](o["d"],{className:"".concat(v,"-container-main-left-label")},h?r["createElement"](o["b"],{className:"".concat(v,"-container-main-left-label-required")},"*"):null,u?r["createElement"](w,{type:u,size:"1rem",style:{marginRight:"0.31rem"},color:"#333"}):null,e?r["createElement"](o["b"],{className:"".concat(v,"-container-main-left-label-value"),style:a},e):null)),r["createElement"](o["d"],{className:"".concat(v,"-container-main-right")},r["createElement"](o["d"],{className:"".concat(v,"-container-main-right-value"),style:i},s||0===s?s:y),f?r["createElement"](w,{type:"right",style:{marginLeft:"0.31rem"},color:"#666"}):null)),c?r["createElement"](o["d"],{className:"".concat(v,"-container-description")},c):null),m?r["createElement"](o["d"],{className:"".concat(v,"-border")}):null)},k=b,V=(t("KC71"),u("input")),P=n=>{var e=n.label,t=n.name,a=n.type,i=n.value,s=n.className,c=void 0===s?"":s,p=n.inputAlign,u=n.placeholder,d=n.onChange,m=n.disabled,f=n.border,h=void 0===f||f,x=n.formatFunc,g=n.required,y=n.icon,C=n=>{var e=n.detail.value;x&&(e=x(n.detail.value)),null===d||void 0===d||d(e)};return r["createElement"](k,{label:e,labelStyle:{width:"5.63rem"},border:h,required:g,icon:y,field:!0},r["createElement"](o["a"],{className:l()({[V]:!0,["".concat(V,"-align-right")]:"right"===p,["".concat(V,"-align-center")]:"center"===p,[c]:!0}),name:t,type:a,value:i,placeholder:u,onInput:C,disabled:m}))},N=P,R=t("0Owb");function S(n){switch({NODE_ENV:'"production"',REMAX_PLATFORM:'"web"'}.REMAX_PLATFORM){case"web":return r["createElement"]("div",Object(R["a"])({},n,{style:Object(s["a"])(Object(s["a"])({},n.style),{},{overflow:"scroll"})}));default:return r["createElement"]("div",Object(R["a"])({},n,{style:Object(s["a"])(Object(s["a"])({},n.style),{},{overflow:"scroll"})}))}}function T(n){switch({NODE_ENV:'"production"',REMAX_PLATFORM:'"web"'}.REMAX_PLATFORM){default:return r["createElement"]("checkbox",n)}}function E(n){switch({NODE_ENV:'"production"',REMAX_PLATFORM:'"web"'}.REMAX_PLATFORM){default:return r["createElement"]("div",n)}}t("UBgR");var $=u("form-value"),I=n=>{var e=n.placeholder,t=n.style,a=n.children;return r["createElement"](o["d"],{className:$,style:t},a||0===a?a:r["createElement"](o["d"],{className:"".concat($,"-placeholder")},e))},_=I;function F(){this.__data__=[],this.size=0}var O=F;function A(n,e){return n===e||n!==n&&e!==e}var M=A;function z(n,e){var t=n.length;while(t--)if(M(n[t][0],e))return t;return-1}var j=z,B=Array.prototype,D=B.splice;function L(n){var e=this.__data__,t=j(e,n);if(t<0)return!1;var r=e.length-1;return t==r?e.pop():D.call(e,t,1),--this.size,!0}var U=L;function K(n){var e=this.__data__,t=j(e,n);return t<0?void 0:e[t][1]}var q=K;function W(n){return j(this.__data__,n)>-1}var H=W;function G(n,e){var t=this.__data__,r=j(t,n);return r<0?(++this.size,t.push([n,e])):t[r][1]=e,this}var X=G;function Y(n){var e=-1,t=null==n?0:n.length;this.clear();while(++e<t){var r=n[e];this.set(r[0],r[1])}}Y.prototype.clear=O,Y.prototype["delete"]=U,Y.prototype.get=q,Y.prototype.has=H,Y.prototype.set=X;var Z=Y;function Q(){this.__data__=new Z,this.size=0}var J=Q;function nn(n){var e=this.__data__,t=e["delete"](n);return this.size=e.size,t}var en=nn;function tn(n){return this.__data__.get(n)}var rn=tn;function an(n){return this.__data__.has(n)}var on=an,ln=t("Ju5/"),sn=ln["a"].Symbol,cn=sn,pn=Object.prototype,un=pn.hasOwnProperty,dn=pn.toString,mn=cn?cn.toStringTag:void 0;function fn(n){var e=un.call(n,mn),t=n[mn];try{n[mn]=void 0;var r=!0}catch(o){}var a=dn.call(n);return r&&(e?n[mn]=t:delete n[mn]),a}var hn=fn,xn=Object.prototype,gn=xn.toString;function yn(n){return gn.call(n)}var Cn=yn,wn="[object Null]",vn="[object Undefined]",bn=cn?cn.toStringTag:void 0;function kn(n){return null==n?void 0===n?vn:wn:bn&&bn in Object(n)?hn(n):Cn(n)}var Vn=kn;function Pn(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}var Nn=Pn,Rn="[object AsyncFunction]",Sn="[object Function]",Tn="[object GeneratorFunction]",En="[object Proxy]";function $n(n){if(!Nn(n))return!1;var e=Vn(n);return e==Sn||e==Tn||e==Rn||e==En}var In=$n,_n=ln["a"]["__core-js_shared__"],Fn=_n,On=function(){var n=/[^.]+$/.exec(Fn&&Fn.keys&&Fn.keys.IE_PROTO||"");return n?"Symbol(src)_1."+n:""}();function An(n){return!!On&&On in n}var Mn=An,zn=Function.prototype,jn=zn.toString;function Bn(n){if(null!=n){try{return jn.call(n)}catch(e){}try{return n+""}catch(e){}}return""}var Dn=Bn,Ln=/[\\^$.*+?()[\]{}|]/g,Un=/^\[object .+?Constructor\]$/,Kn=Function.prototype,qn=Object.prototype,Wn=Kn.toString,Hn=qn.hasOwnProperty,Gn=RegExp("^"+Wn.call(Hn).replace(Ln,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function Xn(n){if(!Nn(n)||Mn(n))return!1;var e=In(n)?Gn:Un;return e.test(Dn(n))}var Yn=Xn;function Zn(n,e){return null==n?void 0:n[e]}var Qn=Zn;function Jn(n,e){var t=Qn(n,e);return Yn(t)?t:void 0}var ne=Jn,ee=ne(ln["a"],"Map"),te=ee,re=ne(Object,"create"),ae=re;function oe(){this.__data__=ae?ae(null):{},this.size=0}var ie=oe;function le(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}var se=le,ce="__lodash_hash_undefined__",pe=Object.prototype,ue=pe.hasOwnProperty;function de(n){var e=this.__data__;if(ae){var t=e[n];return t===ce?void 0:t}return ue.call(e,n)?e[n]:void 0}var me=de,fe=Object.prototype,he=fe.hasOwnProperty;function xe(n){var e=this.__data__;return ae?void 0!==e[n]:he.call(e,n)}var ge=xe,ye="__lodash_hash_undefined__";function Ce(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=ae&&void 0===e?ye:e,this}var we=Ce;function ve(n){var e=-1,t=null==n?0:n.length;this.clear();while(++e<t){var r=n[e];this.set(r[0],r[1])}}ve.prototype.clear=ie,ve.prototype["delete"]=se,ve.prototype.get=me,ve.prototype.has=ge,ve.prototype.set=we;var be=ve;function ke(){this.size=0,this.__data__={hash:new be,map:new(te||Z),string:new be}}var Ve=ke;function Pe(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}var Ne=Pe;function Re(n,e){var t=n.__data__;return Ne(e)?t["string"==typeof e?"string":"hash"]:t.map}var Se=Re;function Te(n){var e=Se(this,n)["delete"](n);return this.size-=e?1:0,e}var Ee=Te;function $e(n){return Se(this,n).get(n)}var Ie=$e;function _e(n){return Se(this,n).has(n)}var Fe=_e;function Oe(n,e){var t=Se(this,n),r=t.size;return t.set(n,e),this.size+=t.size==r?0:1,this}var Ae=Oe;function Me(n){var e=-1,t=null==n?0:n.length;this.clear();while(++e<t){var r=n[e];this.set(r[0],r[1])}}Me.prototype.clear=Ve,Me.prototype["delete"]=Ee,Me.prototype.get=Ie,Me.prototype.has=Fe,Me.prototype.set=Ae;var ze=Me,je=200;function Be(n,e){var t=this.__data__;if(t instanceof Z){var r=t.__data__;if(!te||r.length<je-1)return r.push([n,e]),this.size=++t.size,this;t=this.__data__=new ze(r)}return t.set(n,e),this.size=t.size,this}var De=Be;function Le(n){var e=this.__data__=new Z(n);this.size=e.size}Le.prototype.clear=J,Le.prototype["delete"]=en,Le.prototype.get=rn,Le.prototype.has=on,Le.prototype.set=De;var Ue=Le,Ke="__lodash_hash_undefined__";function qe(n){return this.__data__.set(n,Ke),this}var We=qe;function He(n){return this.__data__.has(n)}var Ge=He;function Xe(n){var e=-1,t=null==n?0:n.length;this.__data__=new ze;while(++e<t)this.add(n[e])}Xe.prototype.add=Xe.prototype.push=We,Xe.prototype.has=Ge;var Ye=Xe;function Ze(n,e){var t=-1,r=null==n?0:n.length;while(++t<r)if(e(n[t],t,n))return!0;return!1}var Qe=Ze;function Je(n,e){return n.has(e)}var nt=Je,et=1,tt=2;function rt(n,e,t,r,a,o){var i=t&et,l=n.length,s=e.length;if(l!=s&&!(i&&s>l))return!1;var c=o.get(n);if(c&&o.get(e))return c==e;var p=-1,u=!0,d=t&tt?new Ye:void 0;o.set(n,e),o.set(e,n);while(++p<l){var m=n[p],f=e[p];if(r)var h=i?r(f,m,p,e,n,o):r(m,f,p,n,e,o);if(void 0!==h){if(h)continue;u=!1;break}if(d){if(!Qe(e,(function(n,e){if(!nt(d,e)&&(m===n||a(m,n,t,r,o)))return d.push(e)}))){u=!1;break}}else if(m!==f&&!a(m,f,t,r,o)){u=!1;break}}return o["delete"](n),o["delete"](e),u}var at=rt,ot=ln["a"].Uint8Array,it=ot;function lt(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}var st=lt;function ct(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}var pt=ct,ut=1,dt=2,mt="[object Boolean]",ft="[object Date]",ht="[object Error]",xt="[object Map]",gt="[object Number]",yt="[object RegExp]",Ct="[object Set]",wt="[object String]",vt="[object Symbol]",bt="[object ArrayBuffer]",kt="[object DataView]",Vt=cn?cn.prototype:void 0,Pt=Vt?Vt.valueOf:void 0;function Nt(n,e,t,r,a,o,i){switch(t){case kt:if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case bt:return!(n.byteLength!=e.byteLength||!o(new it(n),new it(e)));case mt:case ft:case gt:return M(+n,+e);case ht:return n.name==e.name&&n.message==e.message;case yt:case wt:return n==e+"";case xt:var l=st;case Ct:var s=r&ut;if(l||(l=pt),n.size!=e.size&&!s)return!1;var c=i.get(n);if(c)return c==e;r|=dt,i.set(n,e);var p=at(l(n),l(e),r,a,o,i);return i["delete"](n),p;case vt:if(Pt)return Pt.call(n)==Pt.call(e)}return!1}var Rt=Nt;function St(n,e){var t=-1,r=e.length,a=n.length;while(++t<r)n[a+t]=e[t];return n}var Tt=St,Et=Array.isArray,$t=Et;function It(n,e,t){var r=e(n);return $t(n)?r:Tt(r,t(n))}var _t=It;function Ft(n,e){var t=-1,r=null==n?0:n.length,a=0,o=[];while(++t<r){var i=n[t];e(i,t,n)&&(o[a++]=i)}return o}var Ot=Ft;function At(){return[]}var Mt=At,zt=Object.prototype,jt=zt.propertyIsEnumerable,Bt=Object.getOwnPropertySymbols,Dt=Bt?function(n){return null==n?[]:(n=Object(n),Ot(Bt(n),(function(e){return jt.call(n,e)})))}:Mt,Lt=Dt;function Ut(n,e){var t=-1,r=Array(n);while(++t<n)r[t]=e(t);return r}var Kt=Ut;function qt(n){return null!=n&&"object"==typeof n}var Wt=qt,Ht="[object Arguments]";function Gt(n){return Wt(n)&&Vn(n)==Ht}var Xt=Gt,Yt=Object.prototype,Zt=Yt.hasOwnProperty,Qt=Yt.propertyIsEnumerable,Jt=Xt(function(){return arguments}())?Xt:function(n){return Wt(n)&&Zt.call(n,"callee")&&!Qt.call(n,"callee")},nr=Jt,er=t("WOAq"),tr=9007199254740991,rr=/^(?:0|[1-9]\d*)$/;function ar(n,e){var t=typeof n;return e=null==e?tr:e,!!e&&("number"==t||"symbol"!=t&&rr.test(n))&&n>-1&&n%1==0&&n<e}var or=ar,ir=9007199254740991;function lr(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=ir}var sr=lr,cr="[object Arguments]",pr="[object Array]",ur="[object Boolean]",dr="[object Date]",mr="[object Error]",fr="[object Function]",hr="[object Map]",xr="[object Number]",gr="[object Object]",yr="[object RegExp]",Cr="[object Set]",wr="[object String]",vr="[object WeakMap]",br="[object ArrayBuffer]",kr="[object DataView]",Vr="[object Float32Array]",Pr="[object Float64Array]",Nr="[object Int8Array]",Rr="[object Int16Array]",Sr="[object Int32Array]",Tr="[object Uint8Array]",Er="[object Uint8ClampedArray]",$r="[object Uint16Array]",Ir="[object Uint32Array]",_r={};function Fr(n){return Wt(n)&&sr(n.length)&&!!_r[Vn(n)]}_r[Vr]=_r[Pr]=_r[Nr]=_r[Rr]=_r[Sr]=_r[Tr]=_r[Er]=_r[$r]=_r[Ir]=!0,_r[cr]=_r[pr]=_r[br]=_r[ur]=_r[kr]=_r[dr]=_r[mr]=_r[fr]=_r[hr]=_r[xr]=_r[gr]=_r[yr]=_r[Cr]=_r[wr]=_r[vr]=!1;var Or=Fr;function Ar(n){return function(e){return n(e)}}var Mr=Ar,zr=t("xutz"),jr=zr["a"]&&zr["a"].isTypedArray,Br=jr?Mr(jr):Or,Dr=Br,Lr=Object.prototype,Ur=Lr.hasOwnProperty;function Kr(n,e){var t=$t(n),r=!t&&nr(n),a=!t&&!r&&Object(er["a"])(n),o=!t&&!r&&!a&&Dr(n),i=t||r||a||o,l=i?Kt(n.length,String):[],s=l.length;for(var c in n)!e&&!Ur.call(n,c)||i&&("length"==c||a&&("offset"==c||"parent"==c)||o&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||or(c,s))||l.push(c);return l}var qr=Kr,Wr=Object.prototype;function Hr(n){var e=n&&n.constructor,t="function"==typeof e&&e.prototype||Wr;return n===t}var Gr=Hr;function Xr(n,e){return function(t){return n(e(t))}}var Yr=Xr,Zr=Yr(Object.keys,Object),Qr=Zr,Jr=Object.prototype,na=Jr.hasOwnProperty;function ea(n){if(!Gr(n))return Qr(n);var e=[];for(var t in Object(n))na.call(n,t)&&"constructor"!=t&&e.push(t);return e}var ta=ea;function ra(n){return null!=n&&sr(n.length)&&!In(n)}var aa=ra;function oa(n){return aa(n)?qr(n):ta(n)}var ia=oa;function la(n){return _t(n,ia,Lt)}var sa=la,ca=1,pa=Object.prototype,ua=pa.hasOwnProperty;function da(n,e,t,r,a,o){var i=t&ca,l=sa(n),s=l.length,c=sa(e),p=c.length;if(s!=p&&!i)return!1;var u=s;while(u--){var d=l[u];if(!(i?d in e:ua.call(e,d)))return!1}var m=o.get(n);if(m&&o.get(e))return m==e;var f=!0;o.set(n,e),o.set(e,n);var h=i;while(++u<s){d=l[u];var x=n[d],g=e[d];if(r)var y=i?r(g,x,d,e,n,o):r(x,g,d,n,e,o);if(!(void 0===y?x===g||a(x,g,t,r,o):y)){f=!1;break}h||(h="constructor"==d)}if(f&&!h){var C=n.constructor,w=e.constructor;C==w||!("constructor"in n)||!("constructor"in e)||"function"==typeof C&&C instanceof C&&"function"==typeof w&&w instanceof w||(f=!1)}return o["delete"](n),o["delete"](e),f}var ma=da,fa=ne(ln["a"],"DataView"),ha=fa,xa=ne(ln["a"],"Promise"),ga=xa,ya=ne(ln["a"],"Set"),Ca=ya,wa=ne(ln["a"],"WeakMap"),va=wa,ba="[object Map]",ka="[object Object]",Va="[object Promise]",Pa="[object Set]",Na="[object WeakMap]",Ra="[object DataView]",Sa=Dn(ha),Ta=Dn(te),Ea=Dn(ga),$a=Dn(Ca),Ia=Dn(va),_a=Vn;(ha&&_a(new ha(new ArrayBuffer(1)))!=Ra||te&&_a(new te)!=ba||ga&&_a(ga.resolve())!=Va||Ca&&_a(new Ca)!=Pa||va&&_a(new va)!=Na)&&(_a=function(n){var e=Vn(n),t=e==ka?n.constructor:void 0,r=t?Dn(t):"";if(r)switch(r){case Sa:return Ra;case Ta:return ba;case Ea:return Va;case $a:return Pa;case Ia:return Na}return e});var Fa=_a,Oa=1,Aa="[object Arguments]",Ma="[object Array]",za="[object Object]",ja=Object.prototype,Ba=ja.hasOwnProperty;function Da(n,e,t,r,a,o){var i=$t(n),l=$t(e),s=i?Ma:Fa(n),c=l?Ma:Fa(e);s=s==Aa?za:s,c=c==Aa?za:c;var p=s==za,u=c==za,d=s==c;if(d&&Object(er["a"])(n)){if(!Object(er["a"])(e))return!1;i=!0,p=!1}if(d&&!p)return o||(o=new Ue),i||Dr(n)?at(n,e,t,r,a,o):Rt(n,e,s,t,r,a,o);if(!(t&Oa)){var m=p&&Ba.call(n,"__wrapped__"),f=u&&Ba.call(e,"__wrapped__");if(m||f){var h=m?n.value():n,x=f?e.value():e;return o||(o=new Ue),a(h,x,t,r,o)}}return!!d&&(o||(o=new Ue),ma(n,e,t,r,a,o))}var La=Da;function Ua(n,e,t,r,a){return n===e||(null==n||null==e||!Wt(n)&&!Wt(e)?n!==n&&e!==e:La(n,e,t,r,Ua,a))}var Ka=Ua,qa=1,Wa=2;function Ha(n,e,t,r){var a=t.length,o=a,i=!r;if(null==n)return!o;n=Object(n);while(a--){var l=t[a];if(i&&l[2]?l[1]!==n[l[0]]:!(l[0]in n))return!1}while(++a<o){l=t[a];var s=l[0],c=n[s],p=l[1];if(i&&l[2]){if(void 0===c&&!(s in n))return!1}else{var u=new Ue;if(r)var d=r(c,p,s,n,e,u);if(!(void 0===d?Ka(p,c,qa|Wa,r,u):d))return!1}}return!0}var Ga=Ha;function Xa(n){return n===n&&!Nn(n)}var Ya=Xa;function Za(n){var e=ia(n),t=e.length;while(t--){var r=e[t],a=n[r];e[t]=[r,a,Ya(a)]}return e}var Qa=Za;function Ja(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}var no=Ja;function eo(n){var e=Qa(n);return 1==e.length&&e[0][2]?no(e[0][0],e[0][1]):function(t){return t===n||Ga(t,n,e)}}var to=eo,ro="[object Symbol]";function ao(n){return"symbol"==typeof n||Wt(n)&&Vn(n)==ro}var oo=ao,io=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,lo=/^\w*$/;function so(n,e){if($t(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!oo(n))||(lo.test(n)||!io.test(n)||null!=e&&n in Object(e))}var co=so,po="Expected a function";function uo(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError(po);var t=function t(){var r=arguments,a=e?e.apply(this,r):r[0],o=t.cache;if(o.has(a))return o.get(a);var i=n.apply(this,r);return t.cache=o.set(a,i)||o,i};return t.cache=new(uo.Cache||ze),t}uo.Cache=ze;var mo=uo,fo=500;function ho(n){var e=mo(n,(function(n){return t.size===fo&&t.clear(),n})),t=e.cache;return e}var xo=ho,go=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,yo=/\\(\\)?/g,Co=xo((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(go,(function(n,t,r,a){e.push(r?a.replace(yo,"$1"):t||n)})),e})),wo=Co;function vo(n,e){var t=-1,r=null==n?0:n.length,a=Array(r);while(++t<r)a[t]=e(n[t],t,n);return a}var bo=vo,ko=1/0,Vo=cn?cn.prototype:void 0,Po=Vo?Vo.toString:void 0;function No(n){if("string"==typeof n)return n;if($t(n))return bo(n,No)+"";if(oo(n))return Po?Po.call(n):"";var e=n+"";return"0"==e&&1/n==-ko?"-0":e}var Ro=No;function So(n){return null==n?"":Ro(n)}var To=So;function Eo(n,e){return $t(n)?n:co(n,e)?[n]:wo(To(n))}var $o=Eo,Io=1/0;function _o(n){if("string"==typeof n||oo(n))return n;var e=n+"";return"0"==e&&1/n==-Io?"-0":e}var Fo=_o;function Oo(n,e){e=$o(e,n);var t=0,r=e.length;while(null!=n&&t<r)n=n[Fo(e[t++])];return t&&t==r?n:void 0}var Ao=Oo;function Mo(n,e,t){var r=null==n?void 0:Ao(n,e);return void 0===r?t:r}var zo=Mo;function jo(n,e){return null!=n&&e in Object(n)}var Bo=jo;function Do(n,e,t){e=$o(e,n);var r=-1,a=e.length,o=!1;while(++r<a){var i=Fo(e[r]);if(!(o=null!=n&&t(n,i)))break;n=n[i]}return o||++r!=a?o:(a=null==n?0:n.length,!!a&&sr(a)&&or(i,a)&&($t(n)||nr(n)))}var Lo=Do;function Uo(n,e){return null!=n&&Lo(n,e,Bo)}var Ko=Uo,qo=1,Wo=2;function Ho(n,e){return co(n)&&Ya(e)?no(Fo(n),e):function(t){var r=zo(t,n);return void 0===r&&r===e?Ko(t,n):Ka(e,r,qo|Wo)}}var Go=Ho;function Xo(n){return n}var Yo=Xo;function Zo(n){return function(e){return null==e?void 0:e[n]}}var Qo=Zo;function Jo(n){return function(e){return Ao(e,n)}}var ni=Jo;function ei(n){return co(n)?Qo(Fo(n)):ni(n)}var ti=ei;function ri(n){return"function"==typeof n?n:null==n?Yo:"object"==typeof n?$t(n)?Go(n[0],n[1]):to(n):ti(n)}var ai=ri;function oi(n){return function(e,t,r){var a=Object(e);if(!aa(e)){var o=ai(t,3);e=ia(e),t=function(n){return o(a[n],n,a)}}var i=n(e,t,r);return i>-1?a[o?e[i]:i]:void 0}}var ii=oi;function li(n,e,t,r){var a=n.length,o=t+(r?1:-1);while(r?o--:++o<a)if(e(n[o],o,n))return o;return-1}var si=li,ci=NaN,pi=/^\s+|\s+$/g,ui=/^[-+]0x[0-9a-f]+$/i,di=/^0b[01]+$/i,mi=/^0o[0-7]+$/i,fi=parseInt;function hi(n){if("number"==typeof n)return n;if(oo(n))return ci;if(Nn(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=Nn(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(pi,"");var t=di.test(n);return t||mi.test(n)?fi(n.slice(2),t?2:8):ui.test(n)?ci:+n}var xi=hi,gi=1/0,yi=17976931348623157e292;function Ci(n){if(!n)return 0===n?n:0;if(n=xi(n),n===gi||n===-gi){var e=n<0?-1:1;return e*yi}return n===n?n:0}var wi=Ci;function vi(n){var e=wi(n),t=e%1;return e===e?t?e-t:e:0}var bi=vi,ki=Math.max;function Vi(n,e,t){var r=null==n?0:n.length;if(!r)return-1;var a=null==t?0:bi(t);return a<0&&(a=ki(r+a,0)),si(n,ai(e,3),a)}var Pi=Vi,Ni=ii(Pi),Ri=Ni,Si=n=>{var e=n.label,t=n.border,a=n.required,o=n.icon,i=n.pickerAlign,l=void 0===i?"left":i,s=n.options,c=n.value,p=n.onChange,u=n.placeholder,d=n.disabled,m=n=>{n.detail.value<0||null===p||void 0===p||p(null===s||void 0===s?void 0:s[n.detail.value])},f=(null===s||void 0===s?void 0:s.findIndex(n=>n["key"]===c))||0;return r["createElement"](k,{label:e,labelStyle:{width:"5.63rem"},border:t,required:a,icon:o,field:!0},r["createElement"](E,{range:s,"range-key":"value",disabled:d,value:f,onChange:m},r["createElement"](_,{placeholder:u,style:{textAlign:l}},zo(Ri(s,{key:c}),"value"))))},Ti=Si,Ei=(t("628M"),u("radio")),$i=n=>{var e=n.children,t=n.checked,a=n.value,i=n.extra,l=n.style,s=n.onChange,c=()=>{null===s||void 0===s||s(!t,a)};return r["createElement"](o["d"],{className:Ei,style:l},r["createElement"](o["d"],{className:"".concat(Ei,"-container"),onTap:c},t?r["createElement"](o["d"],{className:"".concat(Ei,"-container-checked")},r["createElement"](o["d"],{className:"".concat(Ei,"-container-checked-round_fill")})):r["createElement"](o["d"],{className:"".concat(Ei,"-container-not_checked")}),r["createElement"](o["d"],{className:"".concat(Ei,"-container-children")},e)),r["createElement"](o["d"],{className:"".concat(Ei,"-extra")},i))},Ii=(n,e,t)=>{var a=r["Children"].map(n,n=>{var a=n,o=!1;return a&&a.props?(o=!(!a.props.value&&0!==a.props.value&&!1!==a.props.value||a.props.value!==e),r["createElement"]($i,Object(R["a"])({},a.props,{checked:o,onChange:t}))):a});return a};$i.Group=n=>{var e=n.value,t=n.children,a=n.direction,i=void 0===a?"row":a,l=n.onChange,c=n.style,p=Ii(t,e,l);return r["createElement"](o["d"],{style:Object(s["a"])({display:"flex",flexDirection:i},c)},p)};var _i=$i,Fi=(t("f8EY"),u("checkbox")),Oi=n=>{var e=n.children,t=n.checked,a=n.value,i=n.extra,l=n.style,s=n.onChange,c=()=>{null===s||void 0===s||s(!t,a)};return r["createElement"](o["d"],{className:Fi,style:l},r["createElement"](o["d"],{className:"".concat(Fi,"-container"),onTap:c},t?r["createElement"](w,{type:"roundcheckfill",size:"1.5rem",color:"#1890FF"}):r["createElement"](w,{type:"round",size:"1.5rem",color:"#999"}),r["createElement"](o["d"],{className:"".concat(Fi,"-container-label")},e)),r["createElement"](o["d"],{className:"".concat(Fi,"-extra")},i))},Ai=(n,e,t)=>{var a=r["Children"].map(n,n=>{var a=n,o=!1;return a&&a.props?(o=!(!a.props.value&&0!==a.props.value||a.props.value!==e),r["createElement"](Oi,Object(R["a"])({},a.props,{checked:o,onChange:t}))):a});return a};Oi.Group=n=>{var e=n.value,t=n.children,a=n.direction,i=void 0===a?"row":a,l=n.onChange,s=Ai(t,e,l);return r["createElement"](o["d"],{style:{display:"flex",flexDirection:i}},s)};var Mi=Oi,zi=(t("187H"),u("switch")),ji=n=>{var e=n.checked,t=n.disabled,a=n.small,i=n.onChange,s=()=>{t||null===i||void 0===i||i(!e)};return r["createElement"](o["d"],{className:zi,onTap:s},r["createElement"](T,{className:l()({["".concat(zi,"-default")]:!0,["".concat(zi,"-checked")]:!a&&e,["".concat(zi,"-checked-small")]:a&&e,["".concat(zi,"-disabled")]:t}),value:e?"on":"off",checked:e}),r["createElement"](o["d"],{className:l()("".concat(zi,"-checkbox"),{["".concat(zi,"-checkbox-small")]:a,["".concat(zi,"-checkbox-disabled")]:t})}))},Bi=ji,Di=(t("J5tk"),u("textarea")),Li=n=>{var e=n.className,t=void 0===e?"":e,a=n.name,i=n.value,s=n.placeholder,c=n.disabled,p=n.maxlength,u=n.focus,d=n.autoHeight,m=n.showCount,f=n.rows,h=void 0===f?3:f,x=n.controlled,g=void 0!==x&&x,y=n.onChange,C=n.onFocus,w=n.onBlur,v=n.onConfirm,b=n=>{var e=n.detail.value;null===y||void 0===y||y(e)};return r["createElement"](o["d"],{className:Di},r["createElement"](o["c"],{className:l()({["".concat(Di,"-default")]:!0,[t]:!0}),placeholderClass:"".concat(Di,"-placeholder"),name:a,value:i,placeholder:s,disabled:c,maxlength:p,focus:u,autoHeight:d,showCount:m,controlled:g,onInput:b,onFocus:C,onBlur:w,onConfirm:v,rows:h}))},Ui=Li,Ki=t("tJVT"),qi=(t("OiS4"),u("selector")),Wi=null,Hi=n=>{var e=n.value,t=void 0===e?[]:e,a=n.options,i=void 0===a?[]:a,s=n.style,c=n.onChange,p=n.onChangeParentOption,u=Object(r["useState"])([]),d=Object(Ki["a"])(u,2),m=d[0],f=d[1],h=Object(r["useState"])([]),x=Object(Ki["a"])(h,2),g=x[0],y=x[1],C=Object(r["useState"])(""),w=Object(Ki["a"])(C,2),v=w[0],b=w[1];Object(r["useEffect"])(()=>{if(i.length>0){var n=i[0].children||[];Wi=i[0],b(Wi.key),f(i),y(n)}},[i]);var k=n=>{var e=n.children||[];Wi=n,y(e),b(n.key),null===p||void 0===p||p(n)},V=n=>{null===c||void 0===c||c([Wi.key,n.key],"".concat(Wi.value," ").concat(n.value))};return r["createElement"](o["d"],{className:qi,style:s},r["createElement"](o["d"],{className:"".concat(qi,"-parent")},null===m||void 0===m?void 0:m.map((n,e)=>r["createElement"](o["d"],{key:n.key,className:l()({["".concat(qi,"-option")]:!0,["".concat(qi,"-active")]:v===n.key}),onTap:()=>{k(n)}},n.value,v===n.key&&0!==e?r["createElement"](o["d"],{className:"".concat(qi,"-option-rounded_top")},r["createElement"](o["d"],{className:"".concat(qi,"-option-rounded_top-circle")})):null,v===n.key?r["createElement"](o["d"],{className:"".concat(qi,"-option-rounded_bottom")},r["createElement"](o["d"],{className:"".concat(qi,"-option-rounded_bottom-circle")})):null))),r["createElement"](o["d"],{className:"".concat(qi,"-children")},null===g||void 0===g?void 0:g.map(n=>r["createElement"](o["d"],{key:n.key,className:l()({["".concat(qi,"-option")]:!0,["".concat(qi,"-active")]:(null===t||void 0===t?void 0:t[1])===n.key}),onTap:()=>{V(n)}},n.value))))},Gi=Hi,Xi=(t("f5+V"),u("mask")),Yi=n=>{var e=n.show,t=n.onTap,a=n.zIndex,i=n.style,c=n.children,p=a||0===a?a:999;return r["createElement"](o["d"],{className:l()({[Xi]:!0,["".concat(Xi,"_active")]:e}),style:Object(s["a"])(Object(s["a"])({},i),{},{zIndex:p}),onTap:t},c)},Zi=Yi,Qi=(t("N14H"),u("popup")),Ji=n=>{var e=n.open,t=void 0!==e&&e,a=n.children,i=n.onClose,s=n.closeable,c=n.title,p=n.position,u=void 0===p?"bottom":p,d=n.style,m=n.mask,f=void 0===m||m,h=n.square,x=n.curve,g=()=>{null===i||void 0===i||i()};return r["createElement"](o["d"],{className:Qi},r["createElement"](o["d"],{className:l()({["".concat(Qi,"-container")]:!0,["".concat(Qi,"-container-bottom")]:"bottom"===u,["".concat(Qi,"-container-top")]:"top"===u,["".concat(Qi,"-container-left")]:"left"===u,["".concat(Qi,"-container-right")]:"right"===u,["".concat(Qi,"-container-ease")]:"ease"===x,["".concat(Qi,"-container-square")]:h,["".concat(Qi,"-container-active")]:t}),style:d},c?r["createElement"](o["d"],{className:"".concat(Qi,"-container-title")},c):null,a,s?r["createElement"](o["d"],{className:"".concat(Qi,"-container-close"),onTap:()=>{null===i||void 0===i||i()}},r["createElement"](w,{type:"close",size:"1.25rem",color:"#999"})):null),f?r["createElement"](Zi,{show:t,onTap:g}):null)},nl=Ji,el=(t("Q0jR"),u("selector-popup")),tl=n=>{var e=n.placeholder,t=n.children,a=n.title,i=n.onChange,l=Object(r["useState"])(!1),s=Object(Ki["a"])(l,2),c=s[0],p=s[1],u=()=>{p(!0)},d=()=>{p(!1)},m=(n,e)=>{null===i||void 0===i||i(n,e),d()};return r["createElement"](o["d"],{className:el},r["createElement"](o["d"],{className:"".concat(el,"-formitem"),onTap:u},r["createElement"](_,{placeholder:e},t)),r["createElement"](nl,{title:a,closeable:!0,open:c,onClose:d},r["createElement"](o["d"],{className:"".concat(el,"-container")},r["createElement"](Gi,Object(R["a"])({},n,{style:{height:"16.88rem"},onChange:m})))))},rl=tl,al=(t("ZIKC"),u("dropdown")),ol=n=>{var e=n.options,t=void 0===e?[]:e,a=n.value,i=n.activeColor,l=void 0===i?"#1890FF":i,s=n.onChange;return r["createElement"](o["d"],{className:al},r["createElement"](o["d"],{className:"".concat(al,"-content")},t.map(n=>r["createElement"](o["d"],{className:"".concat(al,"-content-option"),key:n.key,onTap:()=>null===s||void 0===s?void 0:s(n),style:n.key===a?{color:l,fontWeight:500}:void 0},n.value))))},il=ol,ll=(t("joE9"),u("filter-item")),sl=(n,e)=>{var t,i=n.title,s=n.onTap,c=n.children,p=n.onShowMask,u=n.value,d=n.options,m=void 0===d?[]:d,f=n.onChange,h=n.activeColor,x=n.disabled,g=Object(r["useState"])(!1),y=Object(Ki["a"])(g,2),C=y[0],w=y[1];Object(r["useImperativeHandle"])(e,()=>({toggle(){w(n=>(n?setTimeout(()=>{null===p||void 0===p||p(!1)}):setTimeout(()=>{null===p||void 0===p||p(!0)}),!n))},open(){w(!0)},close(){w(!1)}}),[]);var v=()=>{x||(w(n=>!n),null===s||void 0===s||s(!C))},b=n=>{null===f||void 0===f||f(n),w(!1),null===p||void 0===p||p(!1)};return a.a.createElement(o["d"],{className:ll},a.a.createElement(o["d"],{style:{backgroundColor:"#FDFFFD"}},a.a.createElement(o["d"],{className:l()({["".concat(ll,"-label")]:!0,["".concat(ll,"-label-disabled")]:x}),onTap:v},a.a.createElement(o["b"],{className:"".concat(ll,"-label-text")},(null===m||void 0===m||null===(t=m.find(n=>n.key===u))||void 0===t?void 0:t.value)||i),C?a.a.createElement(o["b"],{className:"".concat(ll,"-label-chevronUp")}):a.a.createElement(o["b"],{className:"".concat(ll,"-label-chevronDown")}))),a.a.createElement(nl,{square:!0,curve:"ease",mask:!1,open:C,style:{position:"absolute",zIndex:-1,transform:C?"translate3d(0, 100%, 0)":"translate3d(0, 0, 0)"}},a.a.createElement(S,{scrollY:!0,className:l()({["".concat(ll,"-value")]:!0})},c||a.a.createElement(il,{value:u,options:m,onChange:b,activeColor:h}))))},cl=a.a.forwardRef(sl),pl=(t("TcWi"),u("filter")),ul=n=>{var e=Object(r["useRef"])([]),t=n.style,i=n.zIndex,l=n.children,c=Object(r["useState"])(!1),p=Object(Ki["a"])(c,2),u=p[0],d=p[1],m=n=>{d(n)},f=(n,t,r)=>{e.current.forEach((n,e)=>{t!==e&&n.current.close()}),d(!!n),null===r||void 0===r||r()},h=()=>{e.current.forEach(n=>{n.current.close()}),d(!1)},x=a.a.Children.map(l,(n,t)=>{var o=Object(r["useRef"])();return e.current[t]=o,n.ref&&(e.current[t]=n.ref),a.a.createElement(cl,Object(R["a"])({},n.props,{ref:e.current[t],onTap:e=>{var r;return f(e,t,null===(r=n.props)||void 0===r?void 0:r.onTap)},onShowMask:m,id:t}))}),g=i||0===i,y=t;return g&&(y=Object(s["a"])(Object(s["a"])({},t),{},{zIndex:i})),a.a.createElement(o["d"],{className:pl,style:y},a.a.createElement(o["d"],{className:"".concat(pl,"-content"),style:{height:u?"100%":"3.13rem"}},a.a.createElement(o["d"],{className:"".concat(pl,"-items")},x)),a.a.createElement(Zi,{show:u,onTap:h,style:{top:"unset",bottom:"unset",height:"100%"},zIndex:0}))},dl=ul,ml=dl;ml.Item=cl;var fl=ml,hl=t("WmNS"),xl=t.n(hl);function gl(n,e,t,r,a,o,i){try{var l=n[o](i),s=l.value}catch(c){return void t(c)}l.done?e(s):Promise.resolve(s).then(r,a)}function yl(n){return function(){var e=this,t=arguments;return new Promise((function(r,a){var o=n.apply(e,t);function i(n){gl(o,r,a,i,l,"next",n)}function l(n){gl(o,r,a,i,l,"throw",n)}i(void 0)}))}}t("yelY");var Cl=u("cascade"),wl=!1,vl=n=>{var e=n.name,t=n.value,a=void 0===t?[]:t,i=n.options,s=void 0===i?[]:i,c=n.height,p=void 0===c?"80vh":c,u=n.className,d=void 0===u?"":u,m=n.prompt,f=n.onChange,h=n.onComplete,x=Object(r["useState"])(s),g=Object(Ki["a"])(x,2),y=g[0],C=g[1],v=Object(r["useState"])(!1),b=Object(Ki["a"])(v,2),k=b[0],V=b[1],P=Object(r["useState"])(0),N=Object(Ki["a"])(P,2),R=N[0],T=N[1];Object(r["useEffect"])(()=>{if(k&&a.length>0&&wl){V(!1),wl=!1;var n=a[a.length-1];null===h||void 0===h||h(a,{key:n.key,value:n.value})}},[a,k]);var E=function(){var n=yl(xl.a.mark((function n(e){var t,r;return xl.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:t=[],r={key:e.key,value:e.value,parentKey:e.parentKey},t=a.length>0&&a[a.length-1].parentKey===e.parentKey?[...a.slice(0,a.length-1),r]:[...a,r],f(t,r),T(n=>0===n?1:0),e.children&&C(e.children),e.children||(wl=!0,V(!0));case 7:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}(),$=(n,e)=>{for(var t=null,r=0;r<e.length;r++){var a=e[r];if(n===a.id?t=e:a.children&&(t=$(n,a.children)),t)return t}return null},I=(n,e)=>{f(a.slice(0,e+1)),C($(n.id,s)),T(n=>0===n?1:0)},_=a.length>1?90*a.length+40-30:130;return r["createElement"](o["d"],{className:l()({[Cl]:!0,[d]:!0}),style:{height:p}},r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options")},a.map((n,e)=>r["createElement"](o["d"],{key:n.key,className:"".concat(Cl,"-selected-options-step"),onTap:()=>{I(n,e)}},r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options-step-line")},e===a.length-1?null:r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options-step-line-dot_line_active")}),r["createElement"](o["b"],{className:"".concat(Cl,"-selected-options-step-line-dot"),style:{backgroundColor:"#1890FF"}})),r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options-step-container")},r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options-step-container-content")},r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options-step-container-content-main")},r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options-step-container-content-main-left")},n.value),r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options-step-container-content-main-right")},r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options-step-container-content-main-right-text")},null===m||void 0===m?void 0:m(e)),r["createElement"](o["d"],{className:"".concat(Cl,"-selected-options-step-container-content-main-right-arrow")},r["createElement"](w,{type:"right",size:"0.75rem",color:"#999"}))))))))),r["createElement"](o["d"],null,r["createElement"](S,{scrollY:!0,className:"".concat(Cl,"-showed-options"),scrollTop:R,style:{height:"calc(".concat(p," - ").concat(_+80,"px)")}},r["createElement"](o["d"],{className:"".concat(Cl,"-showed-options-title")},"\u9009\u62e9".concat(e)),y.map(n=>r["createElement"](o["d"],{key:n.key,className:"".concat(Cl,"-showed-options-category"),onTap:()=>{E(n)}},n.value)))))},bl=vl,kl=(t("3Mf4"),u("rate")),Vl=n=>{var e=n.count,t=void 0===e?5:e,a=n.label,i=n.value,l=void 0===i?0:i,s=n.onChange,c=n.readOnly,p=n.icon,u=void 0===p?"favor":p,d=n.iconFill,m=void 0===d?"favorfill":d,f=n.size,h=void 0===f?"1.5rem":f,x=n.color,g=void 0===x?"#FFD700":x,y=n=>{c||null===s||void 0===s||s(n+1)},C=Object(r["useMemo"])(()=>t?[...new Array(t).keys()]:[],[t]);return r["createElement"](o["d"],{className:kl},a?r["createElement"](o["d"],{className:"".concat(kl,"-label")},a):null,r["createElement"](o["d"],{className:"".concat(kl,"-value")},C.map((n,e)=>r["createElement"](o["d"],{key:e,className:"".concat(kl,"-value-star"),onTap:()=>{y(e)}},l>=e+1?r["createElement"](w,{type:m,size:h,color:g}):r["createElement"](w,{type:u,size:h,color:"#999"})))))},Pl=Vl,Nl=(t("hVWp"),u("tabs")),Rl=n=>{var e=n.type,t=n.tabs,a=void 0===t?[]:t,i=n.activeTab,c=n.fixed,p=n.onTabClick,u=n.headerContent,d=n.children,m=n.headerStyle,f=n.extra,h=n.titleWidth,x=n.titleSquare,g=()=>{var n=0;return a.forEach((e,t)=>{e.key===i&&(n=t)}),n},y=Object(r["useMemo"])(()=>g(),[i,a]),C=Object(r["useMemo"])(()=>c?{position:"fixed",top:0,left:0,right:0,zIndex:9}:null,[c]),w=n=>{null===p||void 0===p||p(n)};return r["createElement"](o["d"],{className:Nl},r["createElement"](o["d"],{className:"".concat(Nl,"-header"),style:Object(s["a"])(Object(s["a"])({},C),m)},"card"!==e&&"plain"!==e?r["createElement"](o["d"],{className:"".concat(Nl,"-header-titles")},r["createElement"](o["d"],{className:l()({["".concat(Nl,"-header-titles-bg")]:!0,["".concat(Nl,"-header-titles-bg-square")]:x})},r["createElement"](o["d"],{className:"".concat(Nl,"-header-titles-bg-container")},a.map(n=>r["createElement"](o["d"],{key:n.key,className:"".concat(Nl,"-header-titles-bg-container-title"),style:{fontWeight:i===n.key?500:400,width:h?"".concat(h,"px"):null},onTap:()=>{w(n)}},n.title)),r["createElement"](o["d"],{className:"".concat(Nl,"-header-titles-bg-container-active"),style:{width:"".concat(100/a.length,"%"),transform:"translateX(".concat(100*y,"%)")}}))),f):null,"plain"===e?r["createElement"](o["d"],{className:"".concat(Nl,"-header-titles-plain")},a.map(n=>r["createElement"](o["d"],{key:n.key,className:l()({["".concat(Nl,"-header-titles-plain-title")]:!0,["".concat(Nl,"-header-titles-plain-title-active")]:i===n.key}),onTap:()=>{w(n)}},n.title))):null,"card"===e?r["createElement"](o["d"],{className:"".concat(Nl,"-header-titles-card")},a.map(n=>r["createElement"](o["d"],{key:n.key,className:l()({["".concat(Nl,"-header-titles-card-title")]:!0,["".concat(Nl,"-header-titles-card-title-active")]:i===n.key}),onTap:()=>{w(n)}},n.title))):null,r["createElement"](o["d"],{className:"".concat(Nl,"-header-content")},u)),r["createElement"](o["d"],{className:"".concat(Nl,"-content")},d))},Sl=n=>{var e=n.tabId,t=n.activeTab,a=n.children;return t!==e?null:r["createElement"](o["d"],null,a)};Rl.TabContent=Sl;var Tl=Rl,El=(t("PqlB"),u("steps")),$l=n=>{var e=n.direction,t=void 0===e?"horizontal":e,a=n.current,i=void 0===a?0:a,s=n.steps,c=n.status,p="error"===c?"roundclosefill":"roundcheckfill",u="error"===c?"#f5222d":"#1890FF",d=(n,e)=>e===i&&"error"===c&&n.errorTitle||n.title;return"vertical"===t?r["createElement"](o["d"],{className:El},null===s||void 0===s?void 0:s.map((n,e)=>r["createElement"](o["d"],{key:e,className:"".concat(El,"-step")},0===e?r["createElement"](o["d"],{className:"".concat(El,"-circle_current")},r["createElement"](o["b"],{className:"".concat(El,"-circle_current-icon")},r["createElement"](w,{type:"roundcheckfill",size:"1.25rem",color:"#1890FF"}))):r["createElement"](o["d"],{className:"".concat(El,"-circle")}),r["createElement"](o["d"],{className:"".concat(El,"-line")}),r["createElement"](o["d"],{className:"".concat(El,"-step-header")},r["createElement"](o["d"],{className:"".concat(El,"-step-header-title")},n.title),r["createElement"](o["d"],{className:"".concat(El,"-step-header-extra")},n.extra)),r["createElement"](o["d"],{className:"".concat(El,"-step-description")},n.description)))):r["createElement"](o["d"],{className:"".concat(El,"_horizontal")},null===s||void 0===s?void 0:s.map((n,e)=>r["createElement"](o["d"],{key:e,className:l()({["".concat(El,"_horizontal-step")]:!0,["".concat(El,"_horizontal-step-finish")]:e<=i-1})},r["createElement"](o["d"],{className:"".concat(El,"_horizontal-step-container")},r["createElement"](o["d"],{className:"".concat(El,"_horizontal-step-container-icon")},e<i?r["createElement"](w,{type:"roundcheckfill",size:"1.25rem",color:"#1890FF"}):null,e===i?r["createElement"](w,{type:p,size:"1.25rem",color:u}):null,e>i?r["createElement"](o["d"],{className:"".concat(El,"_horizontal-step-container-icon-default")},r["createElement"](o["d"],null)):null),r["createElement"](o["d"],{className:"".concat(El,"_horizontal-step-container-content")},r["createElement"](o["d"],{className:"".concat(El,"_horizontal-step-container-content-title")},d(n,e)))))))},Il=$l,_l=(t("oLxT"),u("tag")),Fl=n=>{var e=n.type,t=n.size,a=n.className,i=void 0===a?"":a,s=n.style,c=n.children,p=n.onTap;return r["createElement"](o["d"],{className:_l},r["createElement"](o["d"],{className:l()({["".concat(_l,"-default")]:!0,["".concat(_l,"-small")]:"small"===t,["".concat(_l,"-large")]:"large"===t,["".concat(_l,"-info")]:"info"===e,["".concat(_l,"-success")]:"success"===e,["".concat(_l,"-error")]:"error"===e,[i]:!0}),style:s,onTap:p},c))};Fl.CheckableTag=n=>{var e=n.className,t=void 0===e?"":e,a=n.checked,o=n.onChange,i=n.children;return r["createElement"](Fl,Object(R["a"])({size:"large"},n,{className:l()({["".concat(_l,"-checked")]:a,[t]:!0}),onTap:()=>{null===o||void 0===o||o(!a)}}),i)};var Ol=Fl,Al=(t("elpK"),u("result")),Ml=n=>{var e={name:"infofill",color:"#1890ff"};switch(n){case"info":e={name:"infofill",color:"#1890ff"};break;case"success":e={name:"roundcheckfill",color:"#52c41a"};break;case"warning":e={name:"warnfill",color:"#faad14"};break;case"error":e={name:"roundclosefill",color:"#f5222d"};break;default:break}return e},zl=n=>{var e=n.status,t=void 0===e?"info":e,a=n.title,i=n.subTitle,l=n.extra,s=n.children,c=n.icon,p=n.height,u=!1,d=Ml(t);return c&&("[object Object]"===Object.prototype.toString.call(c)?d=c:u=!0),r["createElement"](o["d"],{className:Al,style:{height:p||"100vh"}},r["createElement"](o["d"],{className:"".concat(Al,"-icon")},u?c:r["createElement"](o["d"],{className:"".concat(Al,"-icon-status")},r["createElement"](w,{type:d.name,color:d.color,size:"5.25rem"}))),r["createElement"](o["d"],{className:"".concat(Al,"-title")},a),r["createElement"](o["d"],{className:"".concat(Al,"-sub_title")},i),s?r["createElement"](o["d"],{className:"".concat(Al,"-content")},s):null,r["createElement"](o["d"],{className:"".concat(Al,"-extra")},l))},jl=zl,Bl=(t("2XPC"),u("card")),Dl=n=>{var e=n.title,t=n.extra,a=n.children,i=n.style,l=n.contentStyle;return r["createElement"](o["d"],{className:Bl,style:i},e||t?r["createElement"](o["d"],{className:"".concat(Bl,"-header")},r["createElement"](o["d"],{className:"".concat(Bl,"-header-title")},e),r["createElement"](o["d"],{className:"".concat(Bl,"-header-extra")},t)):null,r["createElement"](o["d"],{className:"".concat(Bl,"-content"),style:Object(s["a"])({paddingTop:e||t?0:"0.75rem"},l)},a))},Ll=Dl,Ul=(t("mRID"),u("search_bar")),Kl=!1,ql=n=>{var e=n.value,t=n.placeholder,a=n.onInput,i=n.onClear,s=n.onFocus,c=n.onBlur,p=n.onActionClick,u=n.onSubmit,d=n.inputStyle,m=n.style,f=n.focus,h=n.actionName,x=void 0===h?"\u53d6\u6d88":h,g=n.keepShowActionButton,y=n.hideActionButton,C=n.size,v=Object(r["useState"])(!1),b=Object(Ki["a"])(v,2),k=b[0],V=b[1],P=n=>{null===s||void 0===s||s(n),V(!0)},N=n=>{null===c||void 0===c||c(n),V(!1)},R=n=>{null===a||void 0===a||a(n.target.value)},S=()=>{null===i||void 0===i||i(e)},T=()=>{Kl=!1,null===p||void 0===p||p()},E=n=>{null===u||void 0===u||u(n.target.value)},$=k||e||f;$&&!Kl&&(Kl=!0);var I="1rem";return"large"===C&&(I="1.13rem"),"small"===C&&(I="0.88rem"),r["createElement"](o["d"],{className:l()({[Ul]:!0,["".concat(Ul,"-large")]:"large"===C,["".concat(Ul,"-small")]:"small"===C}),style:m},r["createElement"](o["d"],{className:"".concat(Ul,"-input"),style:d},r["createElement"](o["d"],{className:l()({["".concat(Ul,"-input-synthetic")]:!0,["".concat(Ul,"-input-is_left")]:$})},r["createElement"](o["d"],{className:"".concat(Ul,"-input-synthetic-icon")},r["createElement"](w,{type:"search",size:"".concat(I,"px"),color:"#999"})),r["createElement"](o["d"],{className:"".concat(Ul,"-input-synthetic-placeholder"),style:{visibility:$?"hidden":"visible"}},t)),r["createElement"](o["a"],{className:"".concat(Ul,"-input-value"),type:"search",value:e,onFocus:P,onBlur:N,onInput:R,onConfirm:E,focus:f}),r["createElement"](o["d"],{className:"".concat(Ul,"-input-clear"),onTap:S},r["createElement"](w,{type:"roundclosefill",size:"".concat(I),color:"#999",style:{visibility:e?"visible":"hidden"}}))),y?null:r["createElement"](o["d"],{className:l()({["".concat(Ul,"-action_button")]:!0,["".concat(Ul,"-show_action_button")]:!!g||$}),onTap:T},x))},Wl=ql,Hl=(t("tr8V"),u("cascade-popup")),Gl=n=>{var e=n.value,t=n.text,a=n.disabled,i=n.placeholder,l=n.options,s=n.onComplete,c=Object(r["useState"])(!1),p=Object(Ki["a"])(c,2),u=p[0],d=p[1],m=(n,e)=>{null===s||void 0===s||s(n,e),d(!1)},h=()=>{a||d(!0)},x=()=>{d(!1)};return l&&0!==l.length?r["createElement"](o["d"],{className:Hl},r["createElement"](o["d"],{className:"".concat(Hl,"-formitem"),onTap:h},r["createElement"](_,{placeholder:i},t||(null===e||void 0===e?void 0:e.map(n=>n.name).join(" ")))),r["createElement"](nl,{open:u},r["createElement"](o["d"],{className:"".concat(Hl,"-container")},r["createElement"](o["d"],{className:"".concat(Hl,"-container-header")},r["createElement"](o["d"],null,"\u8bf7\u9009\u62e9"),r["createElement"](o["d"],{className:"".concat(Hl,"-container-header-close"),onTap:x},r["createElement"](w,{type:"close",color:"#999"}))),r["createElement"](bl,Object(R["a"])({},n,{onComplete:m}))))):r["createElement"](o["d"],{className:Hl},r["createElement"](o["d"],{className:"".concat(Hl,"-loading")},r["createElement"](f,null)))},Xl=Gl},"f5+V":function(n,e,t){},f8EY:function(n,e,t){},fDrP:function(n,e,t){"use strict";var r=t("MMxC"),a=t("bIKR"),o=t("m0kY"),i=t("oa35"),l=t("cTDu"),s=t("nMuc"),c=t("arQb"),p=t("jMDO"),u=t("kGMc"),d=p("splice"),m=u("splice",{ACCESSORS:!0,0:0,1:2}),f=Math.max,h=Math.min,x=9007199254740991,g="Maximum allowed length exceeded";r({target:"Array",proto:!0,forced:!d||!m},{splice:function(n,e){var t,r,p,u,d,m,y=l(this),C=i(y.length),w=a(n,C),v=arguments.length;if(0===v?t=r=0:1===v?(t=0,r=C-w):(t=v-2,r=h(f(o(e),0),C-w)),C+t-r>x)throw TypeError(g);for(p=s(y,r),u=0;u<r;u++)d=w+u,d in y&&c(p,u,y[d]);if(p.length=r,t<r){for(u=w;u<C-r;u++)d=u+r,m=u+t,d in y?y[m]=y[d]:delete y[m];for(u=C;u>C-r+t;u--)delete y[u-1]}else if(t>r)for(u=C-r;u>w;u--)d=u+r-1,m=u+t-1,d in y?y[m]=y[d]:delete y[m];for(u=0;u<t;u++)y[u+w]=arguments[u+2];return y.length=C-r+t,p}})},"fF/C":function(n,e,t){"use strict";var r=t("MMxC"),a=t("/3zY").includes,o=t("eNh0"),i=t("kGMc"),l=i("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:!l},{includes:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}}),o("includes")},"fLP+":function(n,e,t){n.exports={app:"app___2oF86",container:"container___3wLAq"}},fQri:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("Z+8a");r({target:"Set",proto:!0,real:!0,forced:a},{addAll:function(){return o.apply(this,arguments)}})},fZtv:function(n,e,t){"use strict";(function(e){var t="__global_unique_id__";n.exports=function(){return e[t]=(e[t]||0)+1}}).call(this,t("Zeyf"))},g1ZG:function(n,e,t){var r=t("f1E4"),a=t("JS3A");n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{n=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set,n.call(t,[]),e=t instanceof Array}catch(o){}return function(t,o){return r(t),a(o),e?n.call(t,o):t.__proto__=o,t}}():void 0)},g8rt:function(n,e,t){var r=t("tny8"),a=t("e3V2"),o=t("HhvW"),i=t("0qr0"),l=t("gFfw"),s=t("jtLI"),c=t("/yC2"),p=Object.getOwnPropertyDescriptor;e.f=r?p:function(n,e){if(n=i(n),e=l(e,!0),c)try{return p(n,e)}catch(t){}if(s(n,e))return o(!a.f.call(n,e),n[e])}},g9PX:function(n,e,t){},gFfw:function(n,e,t){var r=t("tSXo");n.exports=function(n,e){if(!r(n))return n;var t,a;if(e&&"function"==typeof(t=n.toString)&&!r(a=t.call(n)))return a;if("function"==typeof(t=n.valueOf)&&!r(a=t.call(n)))return a;if(!e&&"function"==typeof(t=n.toString)&&!r(a=t.call(n)))return a;throw TypeError("Can't convert object to primitive value")}},gweS:function(n,e,t){var r=t("Mi8B");r("Uint16",(function(n){return function(e,t,r){return n(this,e,t,r)}}))},h0XC:function(n,e){function t(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}n.exports=t},hKmx:function(n,e,t){"use strict";var r=t("Un+d"),a=t("oa35"),o=t("7BAe"),i=function(n,e,t,l,s,c,p,u){var d,m=s,f=0,h=!!p&&o(p,u,3);while(f<l){if(f in t){if(d=h?h(t[f],f,e):t[f],c>0&&r(d))m=i(n,e,d,a(d.length),m,c-1)-1;else{if(m>=9007199254740991)throw TypeError("Exceed the acceptable array length");n[m]=d}m++}f++}return m};n.exports=i},hRxt:function(n,e,t){var r,a,o=t("ukPv"),i=t("Qlla"),l=o.process,s=l&&l.versions,c=s&&s.v8;c?(r=c.split("."),a=r[0]+r[1]):i&&(r=i.match(/Edge\/(\d+)/),(!r||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/),r&&(a=r[1]))),n.exports=a&&+a},hVWp:function(n,e,t){},hYqy:function(n,e,t){var r=t("MMxC"),a=180/Math.PI;r({target:"Math",stat:!0},{degrees:function(n){return n*a}})},haHa:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("cT1L"),l=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{isDisjointFrom:function(n){var e=o(this),t=i(e.has);return!l(n,(function(n){if(!0===t.call(e,n))return l.stop()})).stopped}})},hilM:function(n,e,t){"use strict";var r=t("MMxC"),a=t("tSXo"),o=t("Un+d"),i=t("bIKR"),l=t("oa35"),s=t("0qr0"),c=t("arQb"),p=t("2kyd"),u=t("jMDO"),d=t("kGMc"),m=u("slice"),f=d("slice",{ACCESSORS:!0,0:0,1:2}),h=p("species"),x=[].slice,g=Math.max;r({target:"Array",proto:!0,forced:!m||!f},{slice:function(n,e){var t,r,p,u=s(this),d=l(u.length),m=i(n,d),f=i(void 0===e?d:e,d);if(o(u)&&(t=u.constructor,"function"!=typeof t||t!==Array&&!o(t.prototype)?a(t)&&(t=t[h],null===t&&(t=void 0)):t=void 0,t===Array||void 0===t))return x.call(u,m,f);for(r=new(void 0===t?Array:t)(g(f-m,0)),p=0;m<f;m++,p++)m in u&&c(r,p,u[m]);return r.length=p,r}})},hwEL:function(n,e,t){var r=t("I65O");r("patternMatch")},"i/DM":function(n,e,t){var r=t("MMxC");r({target:"Math",stat:!0},{DEG_PER_RAD:Math.PI/180})},i7kj:function(n,e,t){"use strict";var r=t("Zcjx"),a=t("ukPv"),o=t("MVys");n.exports=r||!o((function(){var n=Math.random();__defineSetter__.call(null,n,(function(){})),delete a[n]}))},i8i4:function(n,e,t){"use strict";function r(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r)}catch(n){console.error(n)}}}r(),n.exports=t("yl30")},iMhB:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("7BAe"),l=t("jbR1"),s=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{every:function(n){var e=o(this),t=l(e),r=i(n,arguments.length>1?arguments[1]:void 0,3);return!s(t,(function(n){if(!r(n,n,e))return s.stop()}),void 0,!1,!0).stopped}})},iZJ2:function(n,e,t){"use strict";function r(n){return r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var a=c(t("q1tI")),o=t("ArA+"),i=l(t("+t3K"));function l(n){return n&&n.__esModule?n:{default:n}}function s(){if("function"!==typeof WeakMap)return null;var n=new WeakMap;return s=function(){return n},n}function c(n){if(n&&n.__esModule)return n;if(null===n||"object"!==r(n)&&"function"!==typeof n)return{default:n};var e=s();if(e&&e.has(n))return e.get(n);var t={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in n)if(Object.prototype.hasOwnProperty.call(n,o)){var i=a?Object.getOwnPropertyDescriptor(n,o):null;i&&(i.get||i.set)?Object.defineProperty(t,o,i):t[o]=n[o]}return t["default"]=n,e&&e.set(n,t),t}t("SUj/");var p=function(){var n=(0,a.useContext)(i["default"]),e=n.locales,t=n.locale,r=e.find((function(n){var e=n.name;return e!==t}));function l(n){var r=o.history.location.pathname.replace("/".concat(t),"");n.target.value!==e[0].name&&(r="/".concat(n.target.value).concat(r).replace(/\/$/,"")),o.history.push(r)}return Boolean(e.length)&&a["default"].createElement("div",{className:"__dumi-default-locale-select","data-locale-count":e.length},e.length>2?a["default"].createElement("select",{value:t,onChange:l},e.map((function(n){return a["default"].createElement("option",{value:n.name,key:n.name},n.label)}))):a["default"].createElement("span",{onClick:function(){return l({target:{value:r.name}})}},r.label))},u=p;e["default"]=u},igoe:function(n,e){n.exports=function(n,e,t){if(!(n instanceof e))throw TypeError("Incorrect "+(t?t+" ":"")+"invocation");return n}},izsi:function(n,e,t){var r=t("MMxC"),a=t("rn5R");r({target:"Number",stat:!0,forced:Number.parseFloat!=a},{parseFloat:a})},jHRr:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("7BAe"),l=t("PPXv"),s=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{find:function(n){var e=o(this),t=l(e),r=i(n,arguments.length>1?arguments[1]:void 0,3);return s(t,(function(n,t){if(r(t,n,e))return s.stop(t)}),void 0,!0,!0).result}})},jIZW:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("+X1D");r({target:"Map",proto:!0,real:!0,forced:a},{deleteAll:function(){return o.apply(this,arguments)}})},jMDO:function(n,e,t){var r=t("MVys"),a=t("2kyd"),o=t("hRxt"),i=a("species");n.exports=function(n){return o>=51||!r((function(){var e=[],t=e.constructor={};return t[i]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},jTPX:function(n,e){var t=function(n,e,t){return t=window.getComputedStyle,(t?t(n):n.currentStyle)[e.replace(/-(\w)/gi,(function(n,e){return e.toUpperCase()}))]};n.exports=t},jbR1:function(n,e,t){var r=t("Zcjx"),a=t("qcmB");n.exports=r?a:function(n){return Set.prototype.values.call(n)}},"jdp+":function(n,e,t){var r=t("u93E"),a=Math.abs,o=Math.pow,i=o(2,-52),l=o(2,-23),s=o(2,127)*(2-l),c=o(2,-126),p=function(n){return n+1/i-1/i};n.exports=Math.fround||function(n){var e,t,o=a(n),u=r(n);return o<c?u*p(o/c/l)*c*l:(e=(1+l/i)*o,t=e-(e-o),t>s||t!=t?u*(1/0):u*t)}},jksQ:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("29mP"),i=t("f1E4"),l=t("cT1L"),s=t("7BAe"),c=t("/dTS"),p=t("jbR1"),u=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{map:function(n){var e=i(this),t=p(e),r=s(n,arguments.length>1?arguments[1]:void 0,3),a=new(c(e,o("Set"))),d=l(a.add);return u(t,(function(n){d.call(a,r(n,n,e))}),void 0,!1,!0),a}})},jlhX:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("O8zu")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"cell"},o.a.createElement("a",{"aria-hidden":"true",href:"#cell"},o.a.createElement("span",{className:"icon icon-link"})),"Cell")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { Cell } from \'anna-remax-ui\';\nimport { Block, Frame } from \'../../common\';\n\nexport default () => {\n  return (\n    <Frame grayBg>\n      <Block title="Basic">\n        <Cell label="Cell" border={false}>\n          content\n        </Cell>\n      </Block>\n      <Block title="With Icon">\n        <Cell label="Music" icon="musicfill" border={false}>\n          content\n        </Cell>\n      </Block>\n      <Block title="With Required">\n        <Cell label="Cell" required border={false}>\n          content\n        </Cell>\n      </Block>\n      <Block title="With Arrow">\n        <Cell label="Cell" arrow border={false}>\n          content\n        </Cell>\n      </Block>\n      <Block title="With Border">\n        <Cell label="Cell">content</Cell>\n        <Cell label="Cell" border={false}>\n          content\n        </Cell>\n      </Block>\n      <Block title="With Description">\n        <Cell label="Cell" border={false} description="Here is the description">\n          content\n        </Cell>\n      </Block>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { Cell } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nexport default () =>\n  /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      grayBg: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: 'Cell',\n          border: false,\n        },\n        'content',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Icon',\n      },\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: 'Music',\n          icon: 'musicfill',\n          border: false,\n        },\n        'content',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Required',\n      },\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: 'Cell',\n          required: true,\n          border: false,\n        },\n        'content',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Arrow',\n      },\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: 'Cell',\n          arrow: true,\n          border: false,\n        },\n        'content',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Border',\n      },\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: 'Cell',\n        },\n        'content',\n      ),\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: 'Cell',\n          border: false,\n        },\n        'content',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'With Description',\n      },\n      /* #__PURE__ */ React.createElement(\n        Cell,\n        {\n          label: 'Cell',\n          border: false,\n          description: 'Here is the description',\n        },\n        'content',\n      ),\n    ),\n  );\n"}},{path:"/_demos/index-18",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"label"),o.a.createElement("td",null,"\u5de6\u4fa7\u6807\u7b7e"),o.a.createElement("td",null,o.a.createElement("code",null,"string")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"icon"),o.a.createElement("td",null,"\u5de6\u4fa7\u56fe\u6807\u540d\u79f0"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"required"),o.a.createElement("td",null,"\u662f\u5426\u663e\u793a\u8868\u5355\u5fc5\u586b\u661f\u53f7"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"arrow"),o.a.createElement("td",null,"\u53f3\u4fa7\u7bad\u5934"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"description"),o.a.createElement("td",null,"\u4e0b\u65b9\u63cf\u8ff0\u4fe1\u606f"),o.a.createElement("td",null,o.a.createElement("code",null,"string")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"border"),o.a.createElement("td",null,"\u662f\u5426\u663e\u793a\u5185\u8fb9\u6846"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"true"))),o.a.createElement("tr",null,o.a.createElement("td",null,"verticality"),o.a.createElement("td",null,"\u662f\u5426\u4e3a\u7ad6\u76f4\u65b9\u5411"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u8bbe\u7f6e\u5355\u5143\u683c\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"labelStyle"),o.a.createElement("td",null,"\u8bbe\u7f6e\u5de6\u4fa7\u6807\u7b7e\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"valueStyle"),o.a.createElement("td",null,"\u8bbe\u7f6e\u53f3\u4fa7\u503c\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onTap"),o.a.createElement("td",null,"\u70b9\u51fb\u5355\u5143\u683c\u65f6\u7684\u56de\u8c03"),o.a.createElement("td",null,"() => void"),o.a.createElement("td",null,"-"))))))}},joE9:function(n,e,t){},jtLI:function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},"k/J9":function(n,e,t){"use strict";var r=t("f1E4");n.exports=function(){var n=r(this),e="";return n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},k1fw:function(n,e,t){"use strict";function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}t.d(e,"a",(function(){return o}))},kGMc:function(n,e,t){var r=t("tny8"),a=t("MVys"),o=t("jtLI"),i=Object.defineProperty,l={},s=function(n){throw n};n.exports=function(n,e){if(o(l,n))return l[n];e||(e={});var t=[][n],c=!!o(e,"ACCESSORS")&&e.ACCESSORS,p=o(e,0)?e[0]:s,u=o(e,1)?e[1]:void 0;return l[n]=!!t&&!a((function(){if(c&&!r)return!0;var n={length:-1};c?i(n,1,{enumerable:!0,get:s}):n[1]=1,t.call(n,p,u)}))}},kRLG:function(n,e,t){n.exports={block:"block___3vngO",title:"title___3G8nR"}},kiNa:function(n,e,t){var r=t("YfKC").f,a=t("jtLI"),o=t("2kyd"),i=o("toStringTag");n.exports=function(n,e,t){n&&!a(n=t?n:n.prototype,i)&&r(n,i,{configurable:!0,value:e})}},kkxG:function(n,e,t){var r=t("MVys"),a=/#|\.prototype\./,o=function(n,e){var t=l[i(n)];return t==c||t!=s&&("function"==typeof e?r(e):!!e)},i=o.normalize=function(n){return String(n).replace(a,".").toLowerCase()},l=o.data={},s=o.NATIVE="N",c=o.POLYFILL="P";n.exports=o},kyO0:function(n,e){e.f=Object.getOwnPropertySymbols},lgSf:function(n,e,t){var r=t("MVys"),a=t("2kyd"),o=t("Zcjx"),i=a("iterator");n.exports=!r((function(){var n=new URL("b?a=1&b=2&c=3","http://a"),e=n.searchParams,t="";return n.pathname="c%20d",e.forEach((function(n,r){e["delete"]("b"),t+=r+n})),o&&!n.toJSON||!e.sort||"http://a/c%20d?a=1&c=3"!==n.href||"3"!==e.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!e[i]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://\u0442\u0435\u0441\u0442").host||"#%D0%B1"!==new URL("http://a#\u0431").hash||"a1c3"!==t||"x"!==new URL("http://x",void 0).host}))},ls1J:function(n,e,t){var r=t("Pp3M"),a=t("UHn5"),o=t("xxaU"),i=o("metadata"),l=i.store||(i.store=new a),s=function(n,e,t){var a=l.get(n);if(!a){if(!t)return;l.set(n,a=new r)}var o=a.get(e);if(!o){if(!t)return;a.set(e,o=new r)}return o},c=function(n,e,t){var r=s(e,t,!1);return void 0!==r&&r.has(n)},p=function(n,e,t){var r=s(e,t,!1);return void 0===r?void 0:r.get(n)},u=function(n,e,t,r){s(t,r,!0).set(n,e)},d=function(n,e){var t=s(n,e,!1),r=[];return t&&t.forEach((function(n,e){r.push(e)})),r},m=function(n){return void 0===n||"symbol"==typeof n?n:String(n)};n.exports={store:l,getMap:s,has:c,get:p,set:u,keys:d,toKey:m}},ls82:function(n,e,t){var r=function(n){"use strict";var e,t=Object.prototype,r=t.hasOwnProperty,a="function"===typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",i=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function s(n,e,t,r){var a=e&&e.prototype instanceof h?e:h,o=Object.create(a.prototype),i=new S(r||[]);return o._invoke=V(n,t,i),o}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(r){return{type:"throw",arg:r}}}n.wrap=s;var p="suspendedStart",u="suspendedYield",d="executing",m="completed",f={};function h(){}function x(){}function g(){}var y={};y[o]=function(){return this};var C=Object.getPrototypeOf,w=C&&C(C(T([])));w&&w!==t&&r.call(w,o)&&(y=w);var v=g.prototype=h.prototype=Object.create(y);function b(n){["next","throw","return"].forEach((function(e){n[e]=function(n){return this._invoke(e,n)}}))}function k(n,e){function t(a,o,i,l){var s=c(n[a],n,o);if("throw"!==s.type){var p=s.arg,u=p.value;return u&&"object"===typeof u&&r.call(u,"__await")?e.resolve(u.__await).then((function(n){t("next",n,i,l)}),(function(n){t("throw",n,i,l)})):e.resolve(u).then((function(n){p.value=n,i(p)}),(function(n){return t("throw",n,i,l)}))}l(s.arg)}var a;function o(n,r){function o(){return new e((function(e,a){t(n,r,e,a)}))}return a=a?a.then(o,o):o()}this._invoke=o}function V(n,e,t){var r=p;return function(a,o){if(r===d)throw new Error("Generator is already running");if(r===m){if("throw"===a)throw o;return E()}t.method=a,t.arg=o;while(1){var i=t.delegate;if(i){var l=P(i,t);if(l){if(l===f)continue;return l}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(r===p)throw r=m,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r=d;var s=c(n,e,t);if("normal"===s.type){if(r=t.done?m:u,s.arg===f)continue;return{value:s.arg,done:t.done}}"throw"===s.type&&(r=m,t.method="throw",t.arg=s.arg)}}}function P(n,t){var r=n.iterator[t.method];if(r===e){if(t.delegate=null,"throw"===t.method){if(n.iterator["return"]&&(t.method="return",t.arg=e,P(n,t),"throw"===t.method))return f;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var a=c(r,n.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,f;var o=a.arg;return o?o.done?(t[n.resultName]=o.value,t.next=n.nextLoc,"return"!==t.method&&(t.method="next",t.arg=e),t.delegate=null,f):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,f)}function N(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function R(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function S(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(N,this),this.reset(!0)}function T(n){if(n){var t=n[o];if(t)return t.call(n);if("function"===typeof n.next)return n;if(!isNaN(n.length)){var a=-1,i=function t(){while(++a<n.length)if(r.call(n,a))return t.value=n[a],t.done=!1,t;return t.value=e,t.done=!0,t};return i.next=i}}return{next:E}}function E(){return{value:e,done:!0}}return x.prototype=v.constructor=g,g.constructor=x,g[l]=x.displayName="GeneratorFunction",n.isGeneratorFunction=function(n){var e="function"===typeof n&&n.constructor;return!!e&&(e===x||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,g):(n.__proto__=g,l in n||(n[l]="GeneratorFunction")),n.prototype=Object.create(v),n},n.awrap=function(n){return{__await:n}},b(k.prototype),k.prototype[i]=function(){return this},n.AsyncIterator=k,n.async=function(e,t,r,a,o){void 0===o&&(o=Promise);var i=new k(s(e,t,r,a),o);return n.isGeneratorFunction(t)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},b(v),v[l]="Generator",v[o]=function(){return this},v.toString=function(){return"[object Generator]"},n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){while(e.length){var r=e.pop();if(r in n)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=T,S.prototype={constructor:S,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(R),!n)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=e)},stop:function(){this.done=!0;var n=this.tryEntries[0],e=n.completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var t=this;function a(r,a){return l.type="throw",l.arg=n,t.next=r,a&&(t.method="next",t.arg=e),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],l=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var s=r.call(i,"catchLoc"),c=r.call(i,"finallyLoc");if(s&&c){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(n,e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=n,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,f):this.complete(i)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),f},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),R(t),f}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var a=r.arg;R(t)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(n,t,r){return this.delegate={iterator:T(n),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=e),f}},n}(n.exports);try{regeneratorRuntime=r}catch(a){Function("r","regeneratorRuntime = r")(r)}},lz10:function(n,e,t){var r=t("tny8"),a=t("YfKC"),o=t("HhvW");n.exports=r?function(n,e,t){return a.f(n,e,o(1,t))}:function(n,e,t){return n[e]=t,n}},m0kY:function(n,e){var t=Math.ceil,r=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?r:t)(n)}},m3pO:function(n,e,t){var r,a,o,i,l,s,c,p,u=t("ukPv"),d=t("g8rt").f,m=t("UwrT"),f=t("C3pJ").set,h=t("xRZI"),x=u.MutationObserver||u.WebKitMutationObserver,g=u.process,y=u.Promise,C="process"==m(g),w=d(u,"queueMicrotask"),v=w&&w.value;v||(r=function(){var n,e;C&&(n=g.domain)&&n.exit();while(a){e=a.fn,a=a.next;try{e()}catch(t){throw a?i():o=void 0,t}}o=void 0,n&&n.enter()},C?i=function(){g.nextTick(r)}:x&&!h?(l=!0,s=document.createTextNode(""),new x(r).observe(s,{characterData:!0}),i=function(){s.data=l=!l}):y&&y.resolve?(c=y.resolve(void 0),p=c.then,i=function(){p.call(c,r)}):i=function(){f.call(u,r)}),n.exports=v||function(n){var e={fn:n,next:void 0};o&&(o.next=e),a||(a=e,i()),o=e}},mGKP:function(n,e,t){var r=t("EdiO");function a(n,e){if(n){if("string"===typeof n)return r(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(n,e):void 0}}n.exports=a},mLN8:function(n,e,t){"use strict";var r=t("MMxC"),a=t("hKmx"),o=t("cTDu"),i=t("oa35"),l=t("m0kY"),s=t("nMuc");r({target:"Array",proto:!0},{flat:function(){var n=arguments.length?arguments[0]:void 0,e=o(this),t=i(e.length),r=s(e,0);return r.length=a(r,e,e,t,0,void 0===n?1:l(n)),r}})},mRID:function(n,e,t){},mTKU:function(n,e,t){var r=t("FCfD"),a=t("Tfd0"),o="["+a+"]",i=RegExp("^"+o+o+"*"),l=RegExp(o+o+"*$"),s=function(n){return function(e){var t=String(r(e));return 1&n&&(t=t.replace(i,"")),2&n&&(t=t.replace(l,"")),t}};n.exports={start:s(1),end:s(2),trim:s(3)}},mYBK:function(n,e,t){},mZso:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=void 0;var r=function(n){var e,t;return/^(#\/|[^#])/.test(n?n.hash:null===(e=window)||void 0===e||null===(t=e.location)||void 0===t?void 0:t.hash)},a=r;e["default"]=a},mcGr:function(n,e,t){"use strict";var r=t("MMxC"),a=t("2FZw").start,o=t("y9mK");r({target:"String",proto:!0,forced:o},{padStart:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},n7Qr:function(n,e,t){var r=t("I65O");r("match")},nCqj:function(n,e,t){var r=t("1nhP");n.exports=function(n,e){var t=r(n);if(t%e)throw RangeError("Wrong offset");return t}},nDqD:function(n,e,t){"use strict";var r=t("MMxC"),a=t("MVys"),o=t("ZSlt"),i=t("f1E4"),l=t("bIKR"),s=t("oa35"),c=t("/dTS"),p=o.ArrayBuffer,u=o.DataView,d=p.prototype.slice,m=a((function(){return!new p(2).slice(1,void 0).byteLength}));r({target:"ArrayBuffer",proto:!0,unsafe:!0,forced:m},{slice:function(n,e){if(void 0!==d&&void 0===e)return d.call(i(this),n);var t=i(this).byteLength,r=l(n,t),a=l(void 0===e?t:e,t),o=new(c(this,p))(s(a-r)),m=new u(this),f=new u(o),h=0;while(r<a)f.setUint8(h++,m.getUint8(r++));return o}})},nEGZ:function(n,e,t){var r=t("I65O");r("species")},nFn1:function(n,e,t){var r=t("ukPv");n.exports=r},nMuc:function(n,e,t){var r=t("tSXo"),a=t("Un+d"),o=t("2kyd"),i=o("species");n.exports=function(n,e){var t;return a(n)&&(t=n.constructor,"function"!=typeof t||t!==Array&&!a(t.prototype)?r(t)&&(t=t[i],null===t&&(t=void 0)):t=void 0),new(void 0===t?Array:t)(0===e?0:e)}},nZC5:function(n,e,t){"use strict";var r=t("MMxC"),a=t("tny8"),o=t("i7kj"),i=t("cTDu"),l=t("cT1L"),s=t("YfKC");a&&r({target:"Object",proto:!0,forced:o},{__defineSetter__:function(n,e){s.f(i(this),n,{set:l(e),enumerable:!0,configurable:!0})}})},nekP:function(n,e,t){n.exports={gridItem:"gridItem___-MfrI",name:"name___1FYDK"}},nkhd:function(n,e,t){"use strict";var r=t("MMxC"),a=t("tny8"),o=t("Acmb"),i=t("g1ZG"),l=t("u+7+"),s=t("YfKC"),c=t("HhvW"),p=t("IuhT"),u=t("lz10"),d=t("1aI8"),m=d.set,f=d.getterFor("AggregateError"),h=function(n,e){var t=this;if(!(t instanceof h))return new h(n,e);i&&(t=i(new Error(e),o(t)));var r=[];return p(n,r.push,r),a?m(t,{errors:r,type:"AggregateError"}):t.errors=r,void 0!==e&&u(t,"message",String(e)),t};h.prototype=l(Error.prototype,{constructor:c(5,h),message:c(5,""),name:c(5,"AggregateError")}),a&&s.f(h.prototype,"errors",{get:function(){return f(this).errors},configurable:!0}),r({global:!0},{AggregateError:h})},nlPz:function(n,e,t){"use strict";var r=t("MMxC"),a=t("NcLc");r({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},ns0B:function(n,e,t){var r=t("wr9r").AllHtmlEntities,a=new r;function o(n){return a.decode(n.split(/<[^>]+>/).map((function(n){return n.trim()})).filter((function(n){return n.length>0})).join(" "))}n.exports=o},nw8D:function(n,e,t){},"o+nP":function(n,e,t){(function(n){!function(n,r){r(e,t("q1tI"),t("17x9"),t("55Ip"))}(0,(function(e,t,r,a){"use strict";var o="default"in t?t["default"]:t;r=r&&r.hasOwnProperty("default")?r["default"]:r;var i=function(n){return void 0===n},l=function(n){return null===n},s=function(n){return"function"==typeof n},c=function(n){return"string"==typeof n},p=function(n){return!(i(n)||l(n))},u=function(n){return n instanceof Array},d=function(n){return"number"==typeof n&&!((e=n)!=e);var e},m=function(n){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],t=arguments[2];try{d(e)&&(e=String(e));var r=(c(e)?e.split("."):e).reduce((function(n,e){return n[e]}),n);return i(r)?t:r}catch(n){return t}},f=function(n){for(var e=arguments.length,t=Array(2<e?e-2:0),r=2;r<e;r++)t[r-2]=arguments[r];var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[];a=c(a)?a.split("."):a;var o=m(n,a),i=m(n,a.slice(0,-1));return s(o)?o.call.apply(o,[i].concat(t)):o},h=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return e.reduce((function(n,e){return i(n)?f(e):f(n)}),void 0)},x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},g=function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")},y=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),C=function(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n},w=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},v=function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(n,e):n.__proto__=e)},b=function(n,e){var t={};for(var r in n)0<=e.indexOf(r)||Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r]);return t},k=function(n,e){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?n:e},V=function(n,e){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return function(n,e){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){a=!0,o=n}finally{try{!r&&l["return"]&&l["return"]()}finally{if(a)throw o}}return t}(n,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")},P=function(n){if(Array.isArray(n)){for(var e=0,t=Array(n.length);e<n.length;e++)t[e]=n[e];return t}return Array.from(n)},N="undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof n?n:Function("return this")(),R="object"===("undefined"==typeof n?"undefined":x(n))&&n&&n.Math===Math&&n.Array===Array?n:N,S=m(R,"document.body"),T=m(R,"document.scrollingElement",m(R,"document.documentElement",{}));function E(){var n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};return!!p(n)&&(n.scrollWidth>n.clientWidth||n.scrollHeight>n.clientHeight)}function $(n){return s(m(R,"document.getElementById"))?[].concat(P(h(f(n,"querySelectorAll","*"),[])),[n]).filter(E):[]}function I(n){var e=[].concat(P(new Set([].concat(P(function n(e){return e.reduce((function(e,t){return[].concat(P(e),P(u(t)?n(t):[t]))}),[])}((u(n)?n:[n]).map($))),P([T,S].filter(E)))))).map((function(n){return[n,{x:n.scrollLeft,y:n.scrollTop}]}));return function(){e.forEach((function(n){var e=V(n,2),t=e[0],r=e[1],a=r.x,o=r.y;t.scrollLeft=a,t.scrollTop=o}))}}var _={},F=function(){return Object.entries(_).filter((function(n){var e=V(n,2)[1];return e instanceof K?e.state.cached:Object.values(e).some((function(n){return n.state.cached}))}))},O=function(){return w({},_)},A=function(n,e){_[n]=e},M=function(n){delete _[n]},z=function(n){return f(n,"reset")},j=function(n){var e=m(_,[n]);e&&(e instanceof K?z(e):Object.values(e).forEach(z))},B=p(o.forwardRef),D="__isComputedUnmatch",L=function(n){return p(n)&&!0!==m(n,D)},U=function(n,e){var t=n.match,r=n.when,a=void 0===r?"forward":r;if(L(t)||(t=null),!e.cached&&t)return{cached:!0,matched:!0};if(e.matched&&!t){var o=m(n,"history.action"),i=!1;if(s(a))i=!a(n);else switch(a){case"always":break;case"back":["PUSH","REPLACE"].includes(o)&&(i=!0);break;case"forward":default:"POP"===o&&(i=!0)}if(i)return{cached:!1,matched:!1}}return{matched:!!t}},K=function(n){function e(n){var t;g(this,e);for(var r=arguments.length,a=Array(1<r?r-1:0),o=1;o<r;o++)a[o-1]=arguments[o];var i=k(this,(t=e.__proto__||Object.getPrototypeOf(e)).call.apply(t,[this,n].concat(a)));if(i.cacheLifecycles={__listener:{},didCache:function(n){i.cacheLifecycles.__listener.didCache=n},didRecover:function(n){i.cacheLifecycles.__listener.didRecover=n}},i.componentWillReceiveProps=B?void 0:function(n){var e=U(n,i.state);i.setState(e)},i.injectDOM=function(){try{f(i.__parentNode,"insertBefore",i.wrapper,i.__placeholderNode),f(i.__parentNode,"removeChild",i.__placeholderNode)}catch(n){}},i.ejectDOM=function(){try{var n=m(i.wrapper,"parentNode");i.__parentNode=n,f(i.__parentNode,"insertBefore",i.__placeholderNode,i.wrapper),f(i.__parentNode,"removeChild",i.wrapper)}catch(n){}},i.reset=function(){delete i.__revertScrollPos,i.setState({cached:!1})},i.__cacheCreateTime=Date.now(),i.__cacheUpdateTime=i.__cacheCreateTime,n.cacheKey)if(m(n.cacheKey,"multiple")){var l=n.cacheKey,s=l.cacheKey,c=l.pathname;A(s,w({},O()[s],C({},c,i)))}else A(n.cacheKey,i);return"undefined"!=typeof document&&(i.__placeholderNode=document.createComment(" Route cached "+(n.cacheKey?'with cacheKey: "'+m(n.cacheKey,"cacheKey",n.cacheKey)+'" ':""))),i.state=U(n,{cached:!1,matched:!1}),i}return v(e,n),y(e,[{key:"componentDidUpdate",value:function(n,e){if(e.cached&&this.state.cached)return!0===e.matched&&!1===this.state.matched?(this.props.unmount&&this.ejectDOM(),this.__cacheUpdateTime=Date.now(),f(this,"cacheLifecycles.__listener.didCache")):!1===e.matched&&!0===this.state.matched?(this.props.saveScrollPosition&&f(this.__revertScrollPos),this.__cacheUpdateTime=Date.now(),f(this,"cacheLifecycles.__listener.didRecover")):void 0}},{key:"shouldComponentUpdate",value:function(n,e){var t=!1===this.state.matched&&!0===e.matched,r=!0===this.state.cached&&!1===e.cached,a=this.state.matched||e.matched||this.state.cached!==e.cached;return a&&((this.props.unmount&&r||t)&&this.injectDOM(),r||t||!this.props.saveScrollPosition||(this.__revertScrollPos=I(this.props.unmount?this.wrapper:void 0))),a}},{key:"componentWillUnmount",value:function(){var n=this.props,e=n.cacheKey,t=n.unmount;if(m(e,"multiple")){var r=e.cacheKey,a=e.pathname,o=w({},O()[r]);delete o[a],0===Object.keys(o).length?M(r):A(r,o)}else M(e);t&&this.injectDOM()}},{key:"render",value:function(){var n=this,e=this.state,t=e.matched,r=e.cached,a=this.props,i=a.className,l=void 0===i?"":i,s=a.behavior,c=a.children,p=h(f(s,void 0,!t),{}),u=p.className,d=void 0===u?"":u,m=b(p,["className"]),x=f(l+" "+d,"trim"),g=""!==x;return r?o.createElement("div",w({className:g?x:void 0},m,{ref:function(e){n.wrapper=e}}),f(c,void 0,this.cacheLifecycles)):null}}]),e}(t.Component);K.propsTypes={history:r.object.isRequired,match:r.object.isRequired,children:r.func.isRequired,className:r.string,when:r.oneOfType([r.func,r.oneOf(["forward","back","always"])]),behavior:r.func,unmount:r.bool,saveScrollPosition:r.bool},K.defaultProps={when:"forward",unmount:!1,saveScrollPosition:!1,behavior:function(n){return n?{style:{display:"none"}}:void 0}},K.getDerivedStateFromProps=B?U:void 0;var q=function(n){function e(){var n,t,r;g(this,e);for(var a=arguments.length,o=Array(a),i=0;i<a;i++)o[i]=arguments[i];return(t=r=k(this,(n=e.__proto__||Object.getPrototypeOf(e)).call.apply(n,[this].concat(o)))).render=function(){return f(r.props,"children")},r.shouldComponentUpdate=function(n){return n.when},k(r,t)}return v(e,n),e}(t.Component);q.propsTypes={when:r.bool.isRequired};var W=p(t.Fragment),H=function(n){function e(){var n,t,r;g(this,e);for(var a=arguments.length,o=Array(a),i=0;i<a;i++)o[i]=arguments[i];return(t=r=k(this,(n=e.__proto__||Object.getPrototypeOf(e)).call.apply(n,[this].concat(o)))).cache={},k(r,t)}return v(e,n),y(e,[{key:"render",value:function(){var n,e=this,r=this.props,i=r.children,l=r.render,s=r.component,c=r.className,p=r.when,u=r.behavior,m=r.cacheKey,h=r.unmount,x=r.saveScrollPosition,g=r.computedMatchForCacheRoute,y=r.multiple,C=b(r,["children","render","component","className","when","behavior","cacheKey","unmount","saveScrollPosition","computedMatchForCacheRoute","multiple"]);return(o.isValidElement(i)||(n=i,0!==o.Children.count(n)))&&(l=function(){return i}),g&&(C.computedMatch=g),y&&!W&&(y=!1),d(y)&&(y=function(n,e){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:Number.MAX_VALUE;return n<e?e:t<n?t:n}(y,1)),o.createElement(a.Route,C,(function(n){var r=n.match,a=n.computedMatch,g=n.location,C=L(n.match),v=g.pathname,b=d(y)?y:1/0,k={when:p,className:c,behavior:u,cacheKey:m,unmount:h,saveScrollPosition:x},P=function(n){return o.createElement(K,n,(function(e){return o.createElement(q,{when:L(n.match)},(function(){return Object.assign(n,{cacheLifecycles:e}),s?o.createElement(s,n):f(l||i,void 0,n)}))}))};return y&&C&&(e.cache[v]={updateTime:Date.now(),render:P},Object.entries(e.cache).sort((function(n,e){var t=V(n,2)[1];return V(e,2)[1].updateTime-t.updateTime})).forEach((function(n,t){var r=V(n,1)[0];b<=t&&delete e.cache[r]}))),y?o.createElement(t.Fragment,null,Object.entries(e.cache).map((function(e){var i=V(e,2),l=i[0],s=i[1].render,c=l===v?r||a:null;return o.createElement(t.Fragment,{key:l},s(w({},n,k,{cacheKey:m?{cacheKey:m,pathname:l,multiple:!0}:void 0,key:l,match:c})))}))):P(w({},n,k))}))}}]),e}(t.Component);H.componentName="CacheRoute",H.propTypes={component:r.elementType||r.any,render:r.func,children:r.oneOfType([r.func,r.node]),computedMatchForCacheRoute:r.object,multiple:r.oneOfType([r.bool,r.number])},H.defaultProps={multiple:!1};var G=p(t.Fragment)?function(n){var e=n.children;return o.createElement(t.Fragment,null,e)}:p(t.PropTypes)?function(n){var e=n.children;return o.createElement("div",null,e)}:function(n){return n.children};G.displayName="SwitchFragment";var X=p(a.__RouterContext),Y=function(n){function e(){var n,t,r;g(this,e);for(var a=arguments.length,o=Array(a),i=0;i<a;i++)o[i]=arguments[i];return(t=r=k(this,(n=e.__proto__||Object.getPrototypeOf(e)).call.apply(n,[this].concat(o)))).getContext=function(){if(X){var n=r.props;return{location:n.location,match:n.match}}var e=r.context.router.route;return{location:r.props.location||e.location,match:e.match}},k(r,t)}return v(e,n),y(e,[{key:"render",value:function(){var n=this.props,e=n.children,t=n.which,r=this.getContext(),i=r.location,s=r.match,c=!1;return o.createElement(q,{when:L(s)},(function(){return o.createElement(G,null,o.Children.map(e,(function(n){if(!o.isValidElement(n))return null;var e=n.props.path||n.props.from,r=c?null:e?a.matchPath(i.pathname,w({},n.props,{path:e}),s):s,p=void 0;return p=t(n)?o.cloneElement(n,w({location:i,computedMatch:r},l(r)?{computedMatchForCacheRoute:C({},D,!0)}:null)):r&&!c?o.cloneElement(n,{location:i,computedMatch:r}):null,c||(c=!!r),p})))}))}}]),e}(a.Switch);X?(Y.propTypes={children:r.node,location:r.object.isRequired,match:r.object.isRequired,which:r.func},Y=a.withRouter(Y)):(Y.contextTypes={router:r.shape({route:r.object.isRequired}).isRequired},Y.propTypes={children:r.node,location:r.object,which:r.func}),Y.defaultProps={which:function(n){return m(n,"type")===H}};var Z=Y;e["default"]=H,e.CacheRoute=H,e.CacheSwitch=Z,e.dropByCacheKey=j,e.getCachingKeys=function(){return F().map((function(n){return V(n,1)[0]}))},e.clearCache=function(){F().forEach((function(n){var e=V(n,1)[0];return j(e)}))},e.getCachingComponents=function(){return F().reduce((function(n,e){var t=V(e,2),r=t[0],a=t[1];return w({},n,a instanceof K?C({},r,a):Object.entries(a).reduce((function(n,e){var t=V(e,2),a=t[0],o=t[1];return w({},n,C({},r+"."+a,o))}),{}))}),{})},Object.defineProperty(e,"__esModule",{value:!0})}))}).call(this,t("Zeyf"))},oJGl:function(n,e,t){var r=t("MMxC"),a=t("aF2d");r({target:"WeakMap",stat:!0},{from:a})},oLxT:function(n,e,t){},oYEA:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("7BAe"),l=t("PPXv"),s=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{every:function(n){var e=o(this),t=l(e),r=i(n,arguments.length>1?arguments[1]:void 0,3);return!s(t,(function(n,t){if(!r(t,n,e))return s.stop()}),void 0,!0,!0).stopped}})},oa35:function(n,e,t){var r=t("m0kY"),a=Math.min;n.exports=function(n){return n>0?a(r(n),9007199254740991):0}},ogwx:function(n,e,t){"use strict";t.d(e,"a",(function(){return l})),t.d(e,"c",(function(){return s})),t.d(e,"b",(function(){return i}));var r=t("k1fw"),a=t("YS25"),o={basename:"/anna-remax-ui"};window.routerBase&&(o.basename=window.routerBase);var i=Object(a["a"])(o),l=function(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return n||(i=Object(a["a"])(o)),i},s=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};o=Object(r["a"])(Object(r["a"])({},o),n)}},ousD:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t("f4X2"),o=t("IOv4");e["default"]=()=>r["createElement"](o["b"],{grayBg:!0},r["createElement"](o["a"],{title:"Basic"},r["createElement"](a["i"],{placeholder:"Please enter",border:!1})),r["createElement"](o["a"],{title:"With Label"},r["createElement"](a["i"],{label:"Text",placeholder:"Please enter",border:!1})),r["createElement"](o["a"],{title:"inputAlign"},r["createElement"](a["i"],{label:"Text",placeholder:"Please enter",border:!1,inputAlign:"right"})),r["createElement"](o["a"],{title:"Type"},r["createElement"](a["i"],{label:"Number",placeholder:"Please enter",border:!1,type:"number"})),r["createElement"](o["a"],{title:"Disabled"},r["createElement"](a["i"],{label:"Text",disabled:!0,placeholder:"Please enter",value:"read only"}),r["createElement"](a["i"],{label:"Text",disabled:!0,placeholder:"Has been disabled",border:!1})),r["createElement"](o["a"],{title:"With Required"},r["createElement"](a["i"],{label:"Phone",placeholder:"Please enter",border:!1,required:!0})),r["createElement"](o["a"],{title:"With Icon"},r["createElement"](a["i"],{label:"location",placeholder:"Please enter",border:!1,icon:"location"})))},p1ln:function(n,e,t){var r=t("MMxC"),a=t("qitQ");r({target:"Object",stat:!0,forced:Object.assign!==a},{assign:a})},p4TF:function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t.n(a),i=t("YCKM"),l=t("f4X2"),s=t("IOv4"),c=t("qC7B"),p=[{key:"0",value:"1000"},{key:"1",value:"2000"},{key:"2",value:"3000"}];e["default"]=()=>{var n=o.a.useState({value:[],valueStr:null}),e=Object(r["a"])(n,2),t=e[0],u=e[1],d=o.a.useState({value:[],valueStr:null}),m=Object(r["a"])(d,2),f=m[0],h=m[1],x=o.a.useState({value:[],valueStr:null}),g=Object(r["a"])(x,2),y=g[0],C=g[1],w=o.a.useState("0"),v=Object(r["a"])(w,2),b=v[0],k=v[1],V=(n,e)=>{u({value:n,valueStr:e})},P=(n,e)=>{h({value:n,valueStr:e})},N=Object(a["useRef"])(),R=(n,e)=>{C({value:n,valueStr:e}),N.current.toggle()};return o.a.createElement(s["b"],{grayBg:!0},o.a.createElement(s["a"],{title:"Basic"},o.a.createElement(i["d"],{style:{backgroundColor:"#FDFFFD"}},o.a.createElement(l["q"],{options:c["b"],onChange:V,value:t.value}))),o.a.createElement(s["a"],{title:"With Filter"},o.a.createElement(i["d"],{style:{backgroundColor:"#FDFFFD"}},o.a.createElement(l["g"],{zIndex:998},o.a.createElement(l["g"].Item,{title:"\u914d\u9001\u65b9\u5f0f",ref:N},o.a.createElement(l["q"],{options:c["b"],onChange:R,value:y.value})),o.a.createElement(l["g"].Item,{label:"\u4ef7\u683c",value:b,options:p,onChange:n=>k(n.key)})))),o.a.createElement(s["a"],{title:"With Cell and Popup"},o.a.createElement(l["e"],{label:"\u914d\u9001\u65b9\u5f0f",arrow:!0},o.a.createElement(l["r"],{options:c["b"],onChange:P,value:f.value,title:"\u914d\u9001\u65b9\u5f0f",placeholder:"\u8bf7\u9009\u62e9"},f.valueStr))))}},p5yU:function(n,e,t){var r=t("MMxC"),a=t("ukPv"),o=t("m3pO"),i=t("UwrT"),l=a.process,s="process"==i(l);r({global:!0,enumerable:!0,noTargetGet:!0},{queueMicrotask:function(n){var e=s&&l.domain;o(e?e.bind(n):n)}})},p6E5:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("+X1D");r({target:"WeakSet",proto:!0,real:!0,forced:a},{deleteAll:function(){return o.apply(this,arguments)}})},pW3P:function(n,e,t){"use strict";var r=t("MMxC"),a=t("cT1L"),o=t("LUyE"),i=t("WJ3H"),l=t("IuhT");r({target:"Promise",stat:!0},{allSettled:function(n){var e=this,t=o.f(e),r=t.resolve,s=t.reject,c=i((function(){var t=a(e.resolve),o=[],i=0,s=1;l(n,(function(n){var a=i++,l=!1;o.push(void 0),s++,t.call(e,n).then((function(n){l||(l=!0,o[a]={status:"fulfilled",value:n},--s||r(o))}),(function(n){l||(l=!0,o[a]={status:"rejected",reason:n},--s||r(o))}))})),--s||r(o)}));return c.error&&s(c.value),t.promise}})},pb5k:function(n,e,t){var r=t("ukPv"),a=t("TMUv"),o="__core-js_shared__",i=r[o]||a(o,{});n.exports=i},q1tI:function(n,e,t){"use strict";n.exports=t("viRO")},qA1w:function(n,e,t){"use strict";n.exports=function(){var n=arguments.length,e=new Array(n);while(n--)e[n]=arguments[n];return new this(e)}},qC7B:function(n,e,t){"use strict";t.d(e,"b",(function(){return r})),t.d(e,"a",(function(){return a}));var r=[{children:[{value:"\u516c\u53f8\u81ea\u53d6",key:"companySelfFetch"},{value:"\u8d27\u62c9\u62c9",key:"companyHuoLaLa"},{value:"\u5176\u4ed6\u7b2c\u4e09\u65b9\u7269\u6d41",key:"companyOtherLogistics"}],value:"\u516c\u53f8\u914d\u9001",key:"company"},{children:[{value:"\u5ba2\u6237\u81ea\u9001",key:"customerSelfSend"},{value:"\u8d27\u62c9\u62c9",key:"customerHuoLaLa"},{value:"\u5176\u4ed6\u7b2c\u4e09\u65b9\u7269\u6d41",key:"customerOtherLogistics"}],value:"\u5ba2\u6237\u914d\u9001",key:"customer"}],a=[{key:"20191217161304575-000001y6tyZNjU",value:"\u8f85\u6750",parentKey:"0",sort:1,children:[{key:"20191217165823924-000002gO44PH4L",value:"\u5305\u88c5\u888b",parentKey:"20191217161304575-000001y6tyZNjU",sort:0,children:[{key:"20191217170656301-0000399wiWTEts",value:"PE",parentKey:"20191217165823924-000002gO44PH4L",sort:0,children:null},{key:"20191217170656301-00004069R24fKd",value:"OPP",parentKey:"20191217165823924-000002gO44PH4L",sort:0,children:null},{key:"20191217170656302-000041aYgkOREr",value:"\u65e0\u7eba\u5e03",parentKey:"20191217165823924-000002gO44PH4L",sort:0,children:null},{key:"20191217170656302-000042eCtjDn1k",value:"\u6c14\u6ce1\u888b",parentKey:"20191217165823924-000002gO44PH4L",sort:0,children:null},{key:"20191217170656302-000043UFAkA6vU",value:"\u5305\u88c5\u76d2",parentKey:"20191217165823924-000002gO44PH4L",sort:0,children:null},{key:"20191217170656302-0000442hqIqGoF",value:"\u7279\u79cd\u819c",parentKey:"20191217165823924-000002gO44PH4L",sort:0,children:null}]},{key:"20191217165823925-000003lcmwrD8L",value:"\u5546\u6807",parentKey:"20191217161304575-000001y6tyZNjU",sort:0,children:[{key:"20191217170656303-000047tPRW1CcA",value:"\u7ec7\u551b",parentKey:"20191217165823925-000003lcmwrD8L",sort:0,children:null},{key:"20191217170656303-000048AdtxHrs8",value:"\u540a\u724c",parentKey:"20191217165823925-000003lcmwrD8L",sort:0,children:null},{key:"20191217170656303-0000498cYkKVZU",value:"\u6d17\u6c34\u551b",parentKey:"20191217165823925-000003lcmwrD8L",sort:0,children:null}]},{key:"20191217165823925-000004jnmMJAhI",value:"\u8863\u67b6",parentKey:"20191217161304575-000001y6tyZNjU",sort:0,children:[{key:"20200207134709826-0000017IdxzBg1",value:"\u5851\u6599\u8863\u67b6",parentKey:"20191217165823925-000004jnmMJAhI",sort:0,children:null}]},{key:"20191217165823925-000005zNvplXoZ",value:"\u9b54\u672f\u8d34",parentKey:"20191217161304575-000001y6tyZNjU",sort:0,children:[{key:"20200207134709841-000004CbGGqtSn",value:"\u901a\u7528\u9b54\u672f\u8d34",parentKey:"20191217165823925-000005zNvplXoZ",sort:0,children:null}]},{key:"20200427132730707-000001Eb7GSuIf",value:"\u540a\u7c92",parentKey:"20191217161304575-000001y6tyZNjU",sort:0,children:null},{key:"20200427132730717-000002NMWmmiYK",value:"\u9632\u76d7\u6263",parentKey:"20191217161304575-000001y6tyZNjU",sort:0,children:null},{key:"20200427132730717-000003jRLoFOfD",value:"\u7eb8\u5361",parentKey:"20191217161304575-000001y6tyZNjU",sort:0,children:null}]},{key:"20191217161304576-000002r1LOtUSo",value:"\u88c5\u9970\u7247",parentKey:"0",sort:1,children:[{key:"20191217162147778-000001JsV6LYt9",value:"\u624b\u5de5\u9489\u73e0",parentKey:"20191217161304576-000002r1LOtUSo",sort:2,children:[{key:"20191217163043957-0000018FENDbBC",value:"\u6bdb\u6be1\u9489\u73e0",parentKey:"20191217162147778-000001JsV6LYt9",sort:3,children:null},{key:"20191217163043959-000002wGATJohh",value:"\u7eb1\u7c7b\u9489\u73e0",parentKey:"20191217162147778-000001JsV6LYt9",sort:4,children:null},{key:"20191217163043959-000003YfJc0a7y",value:"\u7ee3\u82b1\u9489\u73e0",parentKey:"20191217162147778-000001JsV6LYt9",sort:5,children:null},{key:"20191217163043959-000004gQb8fOXl",value:"\u88c1\u7247\u9489\u73e0",parentKey:"20191217162147778-000001JsV6LYt9",sort:6,children:null},{key:"20191217163043960-000005p8It3KTK",value:"\u8863\u9886\u9489\u73e0",parentKey:"20191217162147778-000001JsV6LYt9",sort:7,children:null},{key:"20191217163043960-000006L6oJJMyg",value:"\u6210\u8863\u9489\u73e0",parentKey:"20191217162147778-000001JsV6LYt9",sort:8,children:null},{key:"20191217163043960-000007RptOyytA",value:"\u7ec7\u5e26\u9489\u73e0",parentKey:"20191217162147778-000001JsV6LYt9",sort:9,children:null}]},{key:"20191217162147782-000002fV02O3ca",value:"\u673a\u5668\u6253\u73e0",parentKey:"20191217161304576-000002r1LOtUSo",sort:2,children:[{key:"20191217163814286-000001uWoEKBrA",value:"\u673a\u5668\u6253\u73cd\u73e0",parentKey:"20191217162147782-000002fV02O3ca",sort:3,children:null},{key:"20191217163814288-000002trUKEqmp",value:"\u673a\u5668\u6253\u94bb",parentKey:"20191217162147782-000002fV02O3ca",sort:4,children:null},{key:"20191217163814288-000003IJia6iAW",value:"\u673a\u5668\u6253\u91d1\u5c5e\u9489",parentKey:"20191217162147782-000002fV02O3ca",sort:5,children:null}]},{key:"20191217162147782-000003M6Y1PIl2",value:"\u624b\u94a9\u82b1",parentKey:"20191217161304576-000002r1LOtUSo",sort:2,children:null},{key:"20191217162147782-000004CgQkO75J",value:"\u8863\u9886",parentKey:"20191217161304576-000002r1LOtUSo",sort:2,children:null},{key:"20191217162147782-000005Ty3EoFjO",value:"\u70eb\u753b",parentKey:"20191217161304576-000002r1LOtUSo",sort:2,children:null}]},{key:"20191217161304576-000003HHVXFr6e",value:"\u523a\u7ee3",parentKey:"0",sort:1,children:[{key:"20191217165232236-00000166H9exyS",value:"\u7ee3\u82b1\u7ae0",parentKey:"20191217161304576-000003HHVXFr6e",sort:0,children:[{key:"20191217170430118-000001mc4VstBq",value:"\u73e0\u7247\u7ee3",parentKey:"20191217165232236-00000166H9exyS",sort:0,children:null}]},{key:"20191217165232237-000002Y1kBzGKT",value:"\u88c1\u7247\u523a\u7ee3",parentKey:"20191217161304576-000003HHVXFr6e",sort:0,children:[{key:"20191217170430120-000002kvZwHAkn",value:"\u73e0\u5b50\u7ee3",parentKey:"20191217165232237-000002Y1kBzGKT",sort:0,children:null}]},{key:"20191217165232237-000003CgD4oONp",value:"\u6210\u8863\u523a\u7ee3",parentKey:"20191217161304576-000003HHVXFr6e",sort:0,children:[{key:"20191217170430120-000003BvPrzoaN",value:"\u76d8\u7ef3\u7ee3",parentKey:"20191217165232237-000003CgD4oONp",sort:0,children:null}]},{key:"20191217165232238-000004KyaioEsi",value:"\u9762\u6599\u523a\u7ee3",parentKey:"20191217161304576-000003HHVXFr6e",sort:0,children:[{key:"20191217170430120-0000044F3f0sLK",value:"\u7ebf\u7ee3/\u5e73\u7ee3",parentKey:"20191217165232238-000004KyaioEsi",sort:0,children:null},{key:"20191217170430120-000005I63gL7tF",value:"\u7259\u5237\u7ee3",parentKey:"20191217165232238-000004KyaioEsi",sort:0,children:null},{key:"20191217170430121-000006PC2r6L31",value:"\u6bdb\u5dfe\u7ee3",parentKey:"20191217165232238-000004KyaioEsi",sort:0,children:null},{key:"20191217170430121-0000073c2ZeSAy",value:"\u690d\u7ed2\u7ee3",parentKey:"20191217165232238-000004KyaioEsi",sort:0,children:null}]}]},{key:"20191217161304576-000004FTr9G76t",value:"\u82b1\u8fb9",parentKey:"0",sort:1,children:[{key:"20191217165232238-000005yrkmxC6f",value:"\u6c34\u6eb6\u82b1\u8fb9",parentKey:"20191217161304576-000004FTr9G76t",sort:0,children:[{key:"20191217170430121-000008FSnIRmdM",value:"\u725b\u5976\u4e1d",parentKey:"20191217165232238-000005yrkmxC6f",sort:0,children:null},{key:"20191217170430121-0000096Vs9uQ0R",value:"\u68c9\u4e1d",parentKey:"20191217165232238-000005yrkmxC6f",sort:0,children:null},{key:"20191217170430121-000010tDxNfTNC",value:"\u6da4\u5149",parentKey:"20191217165232238-000005yrkmxC6f",sort:0,children:null}]},{key:"20191217165232238-000006pYONxAlu",value:"\u857e\u4e1d\u82b1\u8fb9",parentKey:"20191217161304576-000004FTr9G76t",sort:0,children:[{key:"20191217170430121-000011VYPB6U7b",value:"\u776b\u6bdb\u82b1\u8fb9",parentKey:"20191217165232238-000006pYONxAlu",sort:0,children:null}]},{key:"20191217165232238-000007ivSMOS92",value:"\u523a\u7ee3\u82b1\u8fb9",parentKey:"20191217161304576-000004FTr9G76t",sort:0,children:[{key:"20191217170430121-000012dexmjeIf",value:"\u68c9\u5e03\u7ee3",parentKey:"20191217165232238-000007ivSMOS92",sort:0,children:null},{key:"20191217170430122-000013CRNBFK23",value:"\u96d5\u5b54\u7ee3",parentKey:"20191217165232238-000007ivSMOS92",sort:0,children:null}]}]},{key:"20191217161304576-000005RN9X3YFT",value:"\u5143\u7d20",parentKey:"0",sort:1,children:[{key:"20191217165232238-000008MglUKL6v",value:"\u6c34\u94bb",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:[{key:"20191217170430122-0000141P9Tz4yw",value:"\u82b1\u7bee\u722a",parentKey:"20191217165232238-000008MglUKL6v",sort:0,children:null},{key:"20191217170430122-000015bMmUBISy",value:"\u56db\u722a",parentKey:"20191217165232238-000008MglUKL6v",sort:0,children:null},{key:"20191217170430122-000016Vt8nK231",value:"\u5305\u6263",parentKey:"20191217165232238-000008MglUKL6v",sort:0,children:null},{key:"20191217170430122-000017ucrwcbfx",value:"\u7c98\u80f6",parentKey:"20191217165232238-000008MglUKL6v",sort:0,children:null},{key:"20191217170430123-0000180mx2t9BL",value:"\u88f8\u6c34\u94bb",parentKey:"20191217165232238-000008MglUKL6v",sort:0,children:null}]},{key:"20191217165232238-000009I56kLELs",value:"\u94bb\u94fe",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:[{key:"20191217170430123-000019aZy65KbG",value:"\u5355\u6392\u94bb\u94fe",parentKey:"20191217165232238-000009I56kLELs",sort:0,children:null},{key:"20191217170430123-000020sBM1lVrC",value:"\u7ec4\u5408\u94bb\u94fe",parentKey:"20191217165232238-000009I56kLELs",sort:0,children:null},{key:"20191217170430123-000021Tg0mAI20",value:"\u94bb\u7f51",parentKey:"20191217165232238-000009I56kLELs",sort:0,children:null}]},{key:"20191217165232238-000010CIhXWh7P",value:"\u6c34\u6676",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:[{key:"20191217170430123-000022t2wJHZWG",value:"\u5c16\u5e95\u6c34\u6676",parentKey:"20191217165232238-000010CIhXWh7P",sort:0,children:null},{key:"20191217170430123-0000238vmPQmJc",value:"\u5e73\u5e95\u6c34\u6676",parentKey:"20191217165232238-000010CIhXWh7P",sort:0,children:null}]},{key:"20191217165232238-0000115uliki3x",value:"\u6c34\u6676\u73e0",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:null},{key:"20191217165232238-000012wyxWG27j",value:"\u918b\u9178\u677f\u6750",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:null},{key:"20191217165232238-000013xYUqVQb4",value:"\u70eb\u77f3",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:[{key:"20191217170430124-000024TEPGQYbl",value:"\u70eb\u94bb",parentKey:"20191217165232238-000013xYUqVQb4",sort:0,children:null},{key:"20191217170430124-000025qCudkwHK",value:"\u94dd\u70eb\u7247",parentKey:"20191217165232238-000013xYUqVQb4",sort:0,children:null},{key:"20191217170430124-0000266timdVxn",value:"\u94dc\u70eb\u7247",parentKey:"20191217165232238-000013xYUqVQb4",sort:0,children:null},{key:"20191217170430124-000027k9heSLmy",value:"\u73cd\u73e0\u70eb\u7247",parentKey:"20191217165232238-000013xYUqVQb4",sort:0,children:null},{key:"20191217170430124-000028uQLunj2D",value:"\u6811\u8102\u70eb",parentKey:"20191217165232238-000013xYUqVQb4",sort:0,children:null},{key:"20191217170430124-000029i1UqkwGh",value:"\u4e9a\u514b\u529b\u70eb",parentKey:"20191217165232238-000013xYUqVQb4",sort:0,children:null}]},{key:"20191217165232239-000014JrMYVHhM",value:"\u5c3f\u7d20\u73e0",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:null},{key:"20191217165232239-0000154JEiSkDU",value:"\u4eff\u73cd\u73e0",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:null},{key:"20191217165232239-000016w3UwMSLn",value:"\u6811\u8102",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:[{key:"20191217170430124-000030KiG9kCZt",value:"\u5c16\u5e95\u6811\u8102",parentKey:"20191217165232239-000016w3UwMSLn",sort:0,children:null},{key:"20191217170430125-000031MqyFnI35",value:"\u5e73\u5e95\u6811\u8102",parentKey:"20191217165232239-000016w3UwMSLn",sort:0,children:null},{key:"20191217170430125-000032B4Lbm1yI",value:"\u6811\u8102\u677f\u6750",parentKey:"20191217165232239-000016w3UwMSLn",sort:0,children:null}]},{key:"20191217165232239-000017hyf9ZTce",value:"\u4e9a\u514b\u529b",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:[{key:"20191217170430125-000033kl68NHe8",value:"\u5c16\u5e95\u4e9a\u514b\u529b",parentKey:"20191217165232239-000017hyf9ZTce",sort:0,children:null},{key:"20191217170430125-000034bNEkm1JS",value:"\u5e73\u5e95\u4e9a\u514b\u529b",parentKey:"20191217165232239-000017hyf9ZTce",sort:0,children:null},{key:"20191217170430125-000035IbpW6shj",value:"\u4e9a\u514b\u529b\u677f\u6750",parentKey:"20191217165232239-000017hyf9ZTce",sort:0,children:null}]},{key:"20191217165232239-000018X2VXnwJr",value:"\u6ef4\u6cb9",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:[{key:"20191217170430125-000036StiCLSoY",value:"\u6ef4\u6cb9\u94bb",parentKey:"20191217165232239-000018X2VXnwJr",sort:0,children:null},{key:"20191217170430126-000037DcQr4Y6r",value:"\u6ef4\u6cb9\u82b1",parentKey:"20191217165232239-000018X2VXnwJr",sort:0,children:null}]},{key:"20191217165232239-000019pWyf1m8E",value:"\u73e0\u5b50",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:null},{key:"20191217165232239-000020rhGd9Exh",value:"\u73e0\u7ba1",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:null},{key:"20191217165232239-000021keUzT6bA",value:"\u73e0\u7247",parentKey:"20191217161304576-000005RN9X3YFT",sort:0,children:null}]},{key:"20191217161304577-0000062lDupQwh",value:"\u7ec7\u5e26",parentKey:"0",sort:1,children:[{key:"20191217165232240-000022FVYyI6KA",value:"\u677e\u7d27\u5e26",parentKey:"20191217161304577-0000062lDupQwh",sort:0,children:null},{key:"20191217165232240-000023XUanCWUJ",value:"\u7ef3\u5b50",parentKey:"20191217161304577-0000062lDupQwh",sort:0,children:[{key:"20191217170430126-000038eLf0Tg9V",value:"\u68c9\u7ef3",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:[{key:"20191217171318553-000001fJ1nTKgF",value:"\u6241\u7ef3",parentKey:"20191217170430126-000038eLf0Tg9V",sort:0,children:null},{key:"20191217171318554-000002CM2D2GqJ",value:"\u7f16\u7ec7\u7ef3",parentKey:"20191217170430126-000038eLf0Tg9V",sort:0,children:null},{key:"20191217171318554-000003pvgWKty2",value:"\u5706\u7ef3",parentKey:"20191217170430126-000038eLf0Tg9V",sort:0,children:null}]},{key:"20191217170430126-000039PUsVEnfM",value:"\u6da4\u68c9",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:null},{key:"20191217170430126-000040vgGwM3BI",value:"PP\u4e19\u7eb6",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:null},{key:"20191217170430126-000041iRWU94sR",value:"\u6da4\u7eb6(\u5706\u7ef3)",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:[{key:"20191217171318554-000004u64rvFci",value:"\u7f16\u7ec7\u5706\u7ef3",parentKey:"20191217170430126-000041iRWU94sR",sort:0,children:null},{key:"20191217171318554-000005D82CJ2Zh",value:"\u87ba\u7eb9\u7ef3",parentKey:"20191217170430126-000041iRWU94sR",sort:0,children:null},{key:"20191217171318554-000006AM320zG1",value:"\u7f0e\u7eb9\u7ef3",parentKey:"20191217170430126-000041iRWU94sR",sort:0,children:null},{key:"20191217171318554-000007cD2sAorC",value:"\u683c\u5b50\u7eb9",parentKey:"20191217170430126-000041iRWU94sR",sort:0,children:null},{key:"20191217171318555-0000084gSupYXT",value:"\u5706\u70b9\u7eb9",parentKey:"20191217170430126-000041iRWU94sR",sort:0,children:null},{key:"20191217171318555-000009jMr56TvB",value:"\u4eba\u5b57\u7eb9",parentKey:"20191217170430126-000041iRWU94sR",sort:0,children:null},{key:"20191217171318555-000010giPOme5z",value:"\u63d0\u82b1",parentKey:"20191217170430126-000041iRWU94sR",sort:0,children:null},{key:"20191217171318555-0000114j3DTdyv",value:"\u5e73\u7eb9\u7ef3",parentKey:"20191217170430126-000041iRWU94sR",sort:0,children:null},{key:"20191217171318555-0000124dp8ALZu",value:"\u5bc6\u7ec7\u7ef3",parentKey:"20191217170430126-000041iRWU94sR",sort:0,children:null}]},{key:"20191217170430126-000042V2yKelNY",value:"\u9526\u7eb6",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:null},{key:"20191217170430127-000043Xhx3U4Pk",value:"\u4e73\u80f6/\u50cf\u7b4b\u7ef3",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:[{key:"20191217171318555-0000138UnKaeCt",value:"\u900f\u660e\u6241\u7ef3",parentKey:"20191217170430127-000043Xhx3U4Pk",sort:0,children:null},{key:"20191217171318555-000014ey7W2NOj",value:"\u5706\u7ef3",parentKey:"20191217170430127-000043Xhx3U4Pk",sort:0,children:null}]},{key:"20191217170656292-000001T2mnDeIP",value:"\u4eba\u9020\u4e1d",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:null},{key:"20191217170656294-000002674NqDCg",value:"\u5c3c\u9f99",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:null},{key:"20191217170656294-000003re8ap0Hi",value:"\u5316\u7ea4",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:null},{key:"20191217170656294-000004JWEXgdHy",value:"\u9ebb\u7ef3",parentKey:"20191217165232240-000023XUanCWUJ",sort:0,children:null}]},{key:"20191217165232240-000024z4jTsIAh",value:"\u87ba\u7eb9",parentKey:"20191217161304577-0000062lDupQwh",sort:0,children:null},{key:"20191217165232240-000025VNHMU170",value:"\u5e3d\u5e26",parentKey:"20191217161304577-0000062lDupQwh",sort:0,children:null},{key:"20191217165232240-0000265uM1zXBk",value:"\u4e1d\u7ed2\u5e26",parentKey:"20191217161304577-0000062lDupQwh",sort:0,children:null},{key:"20191217165232240-000027PgvfnF0C",value:"\u91d1\u94f6\u8471\u7ec7\u5e26",parentKey:"20191217161304577-0000062lDupQwh",sort:0,children:null},{key:"20191217165232240-000028xlHru6lj",value:"\u4e8c\u6b21\u5de5\u827a\u7ec7\u5e26",parentKey:"20191217161304577-0000062lDupQwh",sort:0,children:[{key:"20191217170656295-000005DbDFXz0U",value:"\u5c0f\u9999\u98ce\u7ec7\u5e26",parentKey:"20191217165232240-000028xlHru6lj",sort:0,children:null},{key:"20191217170656295-000006C7kIWn1n",value:"\u6bdb\u5dfe\u7ee3\u7ec7\u5e26",parentKey:"20191217165232240-000028xlHru6lj",sort:0,children:null},{key:"20191217170656295-0000079klbAYsR",value:"\u73e0\u7247\u7ee3\u7ec7\u5e26",parentKey:"20191217165232240-000028xlHru6lj",sort:0,children:null},{key:"20191217170656295-000008eat014IA",value:"TPU\u7ec7\u5e26",parentKey:"20191217165232240-000028xlHru6lj",sort:0,children:null},{key:"20191217170656295-000009JXZg7Fbj",value:"\u6c11\u65cf\u98ce\u7ec7\u5e26",parentKey:"20191217165232240-000028xlHru6lj",sort:0,children:null},{key:"20191217170656295-000010FnPul1N0",value:"\u4e94\u91d1\u7ec7\u5e26",parentKey:"20191217165232240-000028xlHru6lj",sort:0,children:null}]},{key:"20191217165232240-000029kdoKB8AZ",value:"\u6d41\u82cf",parentKey:"20191217161304577-0000062lDupQwh",sort:0,children:[{key:"20191217170656296-000011whdNoZP3",value:"U\u578b/I\u578b\u6d41\u82cf",parentKey:"20191217165232240-000029kdoKB8AZ",sort:0,children:null},{key:"20191217170656296-0000125i0Lb9zp",value:"\u540a\u7a57\u6d41\u82cf",parentKey:"20191217165232240-000029kdoKB8AZ",sort:0,children:null},{key:"20191217170656296-000013LfGEyCMB",value:"\u76ae\u8d28\u6d41\u82cf",parentKey:"20191217165232240-000029kdoKB8AZ",sort:0,children:null},{key:"20191217170656296-000014vN8M7dt7",value:"\u4eae\u7247\u6d41\u82cf",parentKey:"20191217165232240-000029kdoKB8AZ",sort:0,children:null},{key:"20191217170656296-000015dDY8NQ7N",value:"\u73e0\u94bb\u6d41\u82cf",parentKey:"20191217165232240-000029kdoKB8AZ",sort:0,children:null}]}]},{key:"20191217161304577-000007RvNnXMgX",value:"\u4e94\u91d1",parentKey:"0",sort:1,children:[{key:"20191217165232240-000030bweCQhxN",value:"\u94fe\u6761",parentKey:"20191217161304577-000007RvNnXMgX",sort:0,children:null},{key:"20191217165657971-0000015c4MFng6",value:"\u6c14\u773c",parentKey:"20191217161304577-000007RvNnXMgX",sort:0,children:null},{key:"20191217165657972-000002Lv0YsTin",value:"\u94c6\u9489\u7c7b",parentKey:"20191217161304577-000007RvNnXMgX",sort:0,children:null},{key:"20191217165657973-000003tjwHCvBl",value:"\u80f8\u9488",parentKey:"20191217161304577-000007RvNnXMgX",sort:0,children:null},{key:"20191217165657973-000004wTF2ZyE4",value:"\u540a\u949f",parentKey:"20191217161304577-000007RvNnXMgX",sort:0,children:null},{key:"20191217165657973-000005yX7GUQOQ",value:"\u91d1\u5c5e\u73af",parentKey:"20191217161304577-000007RvNnXMgX",sort:0,children:[{key:"20191217170656297-000016fOKXol0z",value:"\u65e5\u5b57\u73af",parentKey:"20191217165657973-000005yX7GUQOQ",sort:0,children:null},{key:"20191217170656297-000017FskDddgE",value:"D\u5b57\u73af",parentKey:"20191217165657973-000005yX7GUQOQ",sort:0,children:null}]},{key:"20191217165657973-000006F6cXFSYy",value:"\u4e94\u91d1\u9970\u54c1",parentKey:"20191217161304577-000007RvNnXMgX",sort:0,children:[{key:"20191217170656297-0000184Jd9TRtJ",value:"\u94dc\u7c7b\u9970\u54c1",parentKey:"20191217165657973-000006F6cXFSYy",sort:0,children:null},{key:"20191217170656297-000019sRveH0fP",value:"\u950c\u5408\u91d1\u9970\u54c1",parentKey:"20191217165657973-000006F6cXFSYy",sort:0,children:null},{key:"20191217170656298-000020wakZDCyA",value:"\u7ec4\u5408\u9970\u54c1",parentKey:"20191217165657973-000006F6cXFSYy",sort:0,children:null}]}]},{key:"20191217161304577-000008HsmOlG2W",value:"\u7ebd\u6263",parentKey:"0",sort:1,children:[{key:"20191217165657973-000007o31Z6lyw",value:"\u94bb\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:[{key:"20191217170656298-0000214QdZt0ak",value:"\u5408\u91d1\u94bb\u6263",parentKey:"20191217165657973-000007o31Z6lyw",sort:0,children:null},{key:"20191217170656298-000022PKF0mV1r",value:"ABS\u7c98\u94bb\u6263",parentKey:"20191217165657973-000007o31Z6lyw",sort:0,children:null},{key:"20191217170656298-000023IRsreTfR",value:"\u73cd\u73e0\u7ec4\u5408\u94bb\u6263",parentKey:"20191217165657973-000007o31Z6lyw",sort:0,children:null}]},{key:"20191217165657973-0000080UuZhY3V",value:"\u6c34\u6676\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:null},{key:"20191217165657973-000009N2w7blXD",value:"\u6811\u8102\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:null},{key:"20191217165657973-0000100bCa6Vc7",value:"\u918b\u9178\u677f\u6750\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:null},{key:"20191217165657974-000011NPbUPhAK",value:"\u5305\u5e03\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:null},{key:"20191217165657974-000012JcZm9nla",value:"\u56db\u5408\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:[{key:"20191217170656298-000024mkSTQQK8",value:"\u9762\u677f",parentKey:"20191217165657974-000012JcZm9nla",sort:0,children:null},{key:"20191217170656299-000025kawKkDbO",value:"\u4e0b\u4e09\u4ef6",parentKey:"20191217165657974-000012JcZm9nla",sort:0,children:null}]},{key:"20191217165657974-000013iiAWdkTL",value:"\u91d1\u5c5e\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:[{key:"20191217170656299-000026UPO56ZC3",value:"\u65e5\u5b57\u6263",parentKey:"20191217165657974-000013iiAWdkTL",sort:0,children:null},{key:"20191217170656299-000027UriRNFog",value:"D\u5b57\u6263",parentKey:"20191217165657974-000013iiAWdkTL",sort:0,children:null},{key:"20191217170656299-000028W4ScFbD0",value:"\u4e94\u722a\u6263",parentKey:"20191217165657974-000013iiAWdkTL",sort:0,children:null},{key:"20191217170656299-000029OOjaYjoJ",value:"\u5de5\u5b57\u6263",parentKey:"20191217165657974-000013iiAWdkTL",sort:0,children:null}]},{key:"20191217165657974-0000141GLhUHVz",value:"\u5f39\u7c27\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:[{key:"20191217170656299-0000300M8MpigQ",value:"\u5730\u96f7\u6263",parentKey:"20191217165657974-0000141GLhUHVz",sort:0,children:null},{key:"20191217170656300-000031PtfsRGxv",value:"\u5927\u7af9\u8282\u5f39\u7c27\u6263",parentKey:"20191217165657974-0000141GLhUHVz",sort:0,children:null},{key:"20191217170656300-000032H4NE3wuY",value:"\u53cc\u5934\u5f39\u7c27\u6263",parentKey:"20191217165657974-0000141GLhUHVz",sort:0,children:null},{key:"20191217170656300-000033emnUX2Gw",value:"\u5355\u5934\u5f39\u7c27\u6263",parentKey:"20191217165657974-0000141GLhUHVz",sort:0,children:null}]},{key:"20191217165657974-000015eIs6S1GZ",value:"\u6697\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:[{key:"20191217170656300-0000349J7FFIa6",value:"\u91d1\u5c5e",parentKey:"20191217165657974-000015eIs6S1GZ",sort:0,children:null},{key:"20191217170656300-000035pWgaROfZ",value:"\u6811\u8102",parentKey:"20191217165657974-000015eIs6S1GZ",sort:0,children:null},{key:"20191217170656301-000036YEOBRkDl",value:"\u5305\u5e03",parentKey:"20191217165657974-000015eIs6S1GZ",sort:0,children:null}]},{key:"20191217165657974-000016voKKPOE9",value:"\u725b\u89d2\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:null},{key:"20191217165657974-0000178Syd6uqO",value:"\u8d1d\u58f3\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:null},{key:"20191217165657974-000018gXZz0iLB",value:"\u6930\u5b50\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:null},{key:"20191217165657975-000019nKObN65V",value:"\u6728\u5934\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:null},{key:"20200414111318783-000001AYXiigA4",value:"\u5361\u6263",parentKey:"20191217161304577-000008HsmOlG2W",sort:0,children:null}]},{key:"20191217161304577-000009kakIYneM",value:"\u7f1d\u7eab\u7ebf",parentKey:"0",sort:1,children:[{key:"20191217170656301-000037OrpfP8R1",value:"\u6da4\u7eb6\u7f1d\u7eab\u7ebf",parentKey:"20191217161304577-000009kakIYneM",sort:0,children:null},{key:"20191217170656301-000037OrpfP8RD",value:"\u4f4e\u5f39\u4e1d",parentKey:"20191217161304577-000009kakIYneM",sort:0,children:null},{key:"20191217170656301-000038RebaC6Pc",value:"\u9ad8\u5f3a\u7ebf",parentKey:"20191217161304577-000009kakIYneM",sort:0,children:null}]},{key:"20191217161304577-000010MmFCiK6I",value:"\u91cc\u5e03",parentKey:"0",sort:1,children:[{key:"20191217165657975-000021Fiiskon1",value:"\u96ea\u7eba",parentKey:"20191217161304577-000010MmFCiK6I",sort:0,children:null},{key:"20191217165657975-000022F31oZ869",value:"\u8272\u4e01",parentKey:"20191217161304577-000010MmFCiK6I",sort:0,children:null},{key:"20191217165657975-000023van83q8e",value:"\u9488\u7ec7",parentKey:"20191217161304577-000010MmFCiK6I",sort:0,children:null},{key:"20191217165657975-000024lVAwJLPt",value:"\u918b\u9178",parentKey:"20191217161304577-000010MmFCiK6I",sort:0,children:null},{key:"20191217165657975-000025CnovdiJo",value:"\u6da4\u5854\u592b",parentKey:"20191217161304577-000010MmFCiK6I",sort:0,children:null},{key:"20191217165657975-000026smSLbU0R",value:"\u6625\u4e9a\u7eba",parentKey:"20191217161304577-000010MmFCiK6I",sort:0,children:null},{key:"20191217165657976-000027E6qtGc83",value:"\u8212\u7f8e\u7ef8",parentKey:"20191217161304577-000010MmFCiK6I",sort:0,children:null},{key:"20191217165823923-0000010GHOJdYD",value:"\u80c6\u5e03",parentKey:"20191217161304577-000010MmFCiK6I",sort:0,children:null}]},{key:"20200226091842647-000001yM5dZfDy",value:"\u533b\u7597\u7528\u54c1",parentKey:"0",sort:0,children:[{key:"20200226091842649-0000025gFxW5l2",value:"\u53e3\u7f69",parentKey:"20200226091842647-000001yM5dZfDy",sort:0,children:[{key:"20200226091842649-000004vCuabYKH",value:"\u53e3\u7f69\u7ef3\u5b50",parentKey:"20200226091842649-0000025gFxW5l2",sort:0,children:[{key:"20200226091842650-000008pIo29kKY",value:"\u6241\u7ef3",parentKey:"20200226091842649-000004vCuabYKH",sort:0,children:null},{key:"20200226091842650-000009eIUMUpCq",value:"\u5706\u5f62\u7ef3",parentKey:"20200226091842649-000004vCuabYKH",sort:0,children:null}]},{key:"20200226091842649-000005rbAn6Lmm",value:"\u53e3\u7f69\u9f3b\u6881\u6761",parentKey:"20200226091842649-0000025gFxW5l2",sort:0,children:[{key:"20200226091842650-000010Av15mvpG",value:"\u5355\u94c1\u4e1d\u9f3b\u6881\u6761",parentKey:"20200226091842649-000005rbAn6Lmm",sort:0,children:null},{key:"20200226091842650-000011TjOPF5Qz",value:"\u5851\u6599\u9f3b\u6881\u6761",parentKey:"20200226091842649-000005rbAn6Lmm",sort:0,children:null}]},{key:"20200226091842649-0000063CryWbUA",value:"\u53e3\u7f69\u5e03\u6599",parentKey:"20200226091842649-0000025gFxW5l2",sort:0,children:[{key:"20200226091842650-000012xUA5yPhG",value:"\u65e0\u7eba\u5e03",parentKey:"20200226091842649-0000063CryWbUA",sort:0,children:null},{key:"20200226091842650-0000134NbHyUhr",value:"\u7eba\u9ecf\u5e03",parentKey:"20200226091842649-0000063CryWbUA",sort:0,children:null},{key:"20200226091842650-000014AJRbZ0Vc",value:"\u7194\u55b7\u5e03",parentKey:"20200226091842649-0000063CryWbUA",sort:0,children:null}]}]},{key:"20200226091842649-000003rv7VLKkK",value:"\u9632\u62a4\u670d",parentKey:"20200226091842647-000001yM5dZfDy",sort:0,children:[{key:"20200226091842649-0000079Tp494QF",value:"\u9632\u62a4\u670d\u62c9\u94fe",parentKey:"20200226091842649-000003rv7VLKkK",sort:0,children:[{key:"20200226091842651-000015jxNcTAcj",value:"\u4e00\u822c\u5c3c\u9f99\u62c9\u94fe",parentKey:"20200226091842649-0000079Tp494QF",sort:0,children:null},{key:"20200226091842651-000016lEOhJjOR",value:"\u9632\u6c34\u62c9\u94fe",parentKey:"20200226091842649-0000079Tp494QF",sort:0,children:null}]}]}]},{key:"20200309140701867-000007HFFNjGOQ",value:"\u7eba\u7c98\u5e03",parentKey:"0",sort:0,children:[{key:"20200309140701867-000008JZbEaoZQ",value:"\u7eba\u7c98\u5e03SS\u7ea7\u522b",parentKey:"20200309140701867-000007HFFNjGOQ",sort:0,children:null},{key:"20200309140701867-000009a5QWRoXk",value:"\u7eba\u7c98\u5e03SSS\u7ea7\u522b",parentKey:"20200309140701867-000007HFFNjGOQ",sort:0,children:null}]}]},qHiR:function(n,e,t){},qT12:function(n,e,t){"use strict";var r="function"===typeof Symbol&&Symbol["for"],a=r?Symbol["for"]("react.element"):60103,o=r?Symbol["for"]("react.portal"):60106,i=r?Symbol["for"]("react.fragment"):60107,l=r?Symbol["for"]("react.strict_mode"):60108,s=r?Symbol["for"]("react.profiler"):60114,c=r?Symbol["for"]("react.provider"):60109,p=r?Symbol["for"]("react.context"):60110,u=r?Symbol["for"]("react.async_mode"):60111,d=r?Symbol["for"]("react.concurrent_mode"):60111,m=r?Symbol["for"]("react.forward_ref"):60112,f=r?Symbol["for"]("react.suspense"):60113,h=r?Symbol["for"]("react.suspense_list"):60120,x=r?Symbol["for"]("react.memo"):60115,g=r?Symbol["for"]("react.lazy"):60116,y=r?Symbol["for"]("react.block"):60121,C=r?Symbol["for"]("react.fundamental"):60117,w=r?Symbol["for"]("react.responder"):60118,v=r?Symbol["for"]("react.scope"):60119;function b(n){if("object"===typeof n&&null!==n){var e=n.$$typeof;switch(e){case a:switch(n=n.type,n){case u:case d:case i:case s:case l:case f:return n;default:switch(n=n&&n.$$typeof,n){case p:case m:case g:case x:case c:return n;default:return e}}case o:return e}}}function k(n){return b(n)===d}e.AsyncMode=u,e.ConcurrentMode=d,e.ContextConsumer=p,e.ContextProvider=c,e.Element=a,e.ForwardRef=m,e.Fragment=i,e.Lazy=g,e.Memo=x,e.Portal=o,e.Profiler=s,e.StrictMode=l,e.Suspense=f,e.isAsyncMode=function(n){return k(n)||b(n)===u},e.isConcurrentMode=k,e.isContextConsumer=function(n){return b(n)===p},e.isContextProvider=function(n){return b(n)===c},e.isElement=function(n){return"object"===typeof n&&null!==n&&n.$$typeof===a},e.isForwardRef=function(n){return b(n)===m},e.isFragment=function(n){return b(n)===i},e.isLazy=function(n){return b(n)===g},e.isMemo=function(n){return b(n)===x},e.isPortal=function(n){return b(n)===o},e.isProfiler=function(n){return b(n)===s},e.isStrictMode=function(n){return b(n)===l},e.isSuspense=function(n){return b(n)===f},e.isValidElementType=function(n){return"string"===typeof n||"function"===typeof n||n===i||n===d||n===s||n===l||n===f||n===h||"object"===typeof n&&null!==n&&(n.$$typeof===g||n.$$typeof===x||n.$$typeof===c||n.$$typeof===p||n.$$typeof===m||n.$$typeof===C||n.$$typeof===w||n.$$typeof===v||n.$$typeof===y)},e.typeOf=b},qcmB:function(n,e,t){var r=t("f1E4"),a=t("9SZg");n.exports=function(n){var e=a(n);if("function"!=typeof e)throw TypeError(String(n)+" is not iterable");return r(e.call(n))}},qitQ:function(n,e,t){"use strict";var r=t("tny8"),a=t("MVys"),o=t("P0e2"),i=t("kyO0"),l=t("e3V2"),s=t("cTDu"),c=t("EzR6"),p=Object.assign,u=Object.defineProperty;n.exports=!p||a((function(){if(r&&1!==p({b:1},p(u({},"a",{enumerable:!0,get:function(){u(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol(),a="abcdefghijklmnopqrst";return n[t]=7,a.split("").forEach((function(n){e[n]=n})),7!=p({},n)[t]||o(p({},e)).join("")!=a}))?function(n,e){var t=s(n),a=arguments.length,p=1,u=i.f,d=l.f;while(a>p){var m,f=c(arguments[p++]),h=u?o(f).concat(u(f)):o(f),x=h.length,g=0;while(x>g)m=h[g++],r&&!d.call(f,m)||(t[m]=f[m])}return t}:p},qkSU:function(n,e,t){"use strict";var r=t("MMxC"),a=t("LUyE"),o=t("WJ3H");r({target:"Promise",stat:!0},{try:function(n){var e=a.f(this),t=o(n);return(t.error?e.reject:e.resolve)(t.value),e.promise}})},quHW:function(n,e,t){var r=t("MMxC"),a=t("29mP"),o=t("cT1L"),i=t("f1E4"),l=t("MVys"),s=a("Reflect","apply"),c=Function.apply,p=!l((function(){s((function(){}))}));r({target:"Reflect",stat:!0,forced:p},{apply:function(n,e,t){return o(n),i(t),s?s(n,e,t):c.call(n,e,t)}})},rUU2:function(n,e,t){"use strict";var r=t("ENif"),a=t("f1E4"),o=t("cTDu"),i=t("oa35"),l=t("m0kY"),s=t("FCfD"),c=t("xH5X"),p=t("dagG"),u=Math.max,d=Math.min,m=Math.floor,f=/\$([$&'`]|\d\d?|<[^>]*>)/g,h=/\$([$&'`]|\d\d?)/g,x=function(n){return void 0===n?n:String(n)};r("replace",2,(function(n,e,t,r){var g=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,y=r.REPLACE_KEEPS_$0,C=g?"$":"$0";return[function(t,r){var a=s(this),o=void 0==t?void 0:t[n];return void 0!==o?o.call(t,a,r):e.call(String(a),t,r)},function(n,r){if(!g&&y||"string"===typeof r&&-1===r.indexOf(C)){var o=t(e,n,this,r);if(o.done)return o.value}var s=a(n),m=String(this),f="function"===typeof r;f||(r=String(r));var h=s.global;if(h){var v=s.unicode;s.lastIndex=0}var b=[];while(1){var k=p(s,m);if(null===k)break;if(b.push(k),!h)break;var V=String(k[0]);""===V&&(s.lastIndex=c(m,i(s.lastIndex),v))}for(var P="",N=0,R=0;R<b.length;R++){k=b[R];for(var S=String(k[0]),T=u(d(l(k.index),m.length),0),E=[],$=1;$<k.length;$++)E.push(x(k[$]));var I=k.groups;if(f){var _=[S].concat(E,T,m);void 0!==I&&_.push(I);var F=String(r.apply(void 0,_))}else F=w(S,m,T,E,I,r);T>=N&&(P+=m.slice(N,T)+F,N=T+S.length)}return P+m.slice(N)}];function w(n,t,r,a,i,l){var s=r+n.length,c=a.length,p=h;return void 0!==i&&(i=o(i),p=f),e.call(l,p,(function(e,o){var l;switch(o.charAt(0)){case"$":return"$";case"&":return n;case"`":return t.slice(0,r);case"'":return t.slice(s);case"<":l=i[o.slice(1,-1)];break;default:var p=+o;if(0===p)return e;if(p>c){var u=m(p/10);return 0===u?e:u<=c?void 0===a[u-1]?o.charAt(1):a[u-1]+o.charAt(1):e}l=a[p-1]}return void 0===l?"":l}))}}))},rVgK:function(n,e,t){"use strict";var r=t("MMxC"),a=t("eYKs").charAt;r({target:"String",proto:!0},{at:function(n){return a(this,n)}})},"rhT+":function(n,e){function t(n){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}n.exports=t},rjJZ:function(n,e,t){var r=t("YON3");n.exports=function(n){if(r(n))throw TypeError("The method doesn't accept regular expressions");return n}},rn5R:function(n,e,t){var r=t("ukPv"),a=t("mTKU").trim,o=t("Tfd0"),i=r.parseFloat,l=1/i(o+"-0")!==-1/0;n.exports=l?function(n){var e=a(String(n)),t=i(e);return 0===t&&"-"==e.charAt(0)?-0:t}:i},rpUR:function(n,e,t){"use strict";var r=t("MMxC"),a=t("g8rt").f,o=t("oa35"),i=t("rjJZ"),l=t("FCfD"),s=t("C7V6"),c=t("Zcjx"),p="".endsWith,u=Math.min,d=s("endsWith"),m=!c&&!d&&!!function(){var n=a(String.prototype,"endsWith");return n&&!n.writable}();r({target:"String",proto:!0,forced:!m&&!d},{endsWith:function(n){var e=String(l(this));i(n);var t=arguments.length>1?arguments[1]:void 0,r=o(e.length),a=void 0===t?r:u(o(t),r),s=String(n);return p?p.call(e,s,a):e.slice(a-s.length,a)===s}})},s00F:function(n,e,t){var r=t("I65O");r("dispose")},s1ay:function(n,e,t){"use strict";var r,a,o,i,l=t("MMxC"),s=t("Zcjx"),c=t("ukPv"),p=t("29mP"),u=t("b6st"),d=t("NMFW"),m=t("ujhg"),f=t("kiNa"),h=t("ssJt"),x=t("tSXo"),g=t("cT1L"),y=t("igoe"),C=t("UwrT"),w=t("J3Yn"),v=t("IuhT"),b=t("GPrf"),k=t("/dTS"),V=t("C3pJ").set,P=t("m3pO"),N=t("U8/t"),R=t("dnEI"),S=t("LUyE"),T=t("WJ3H"),E=t("1aI8"),$=t("kkxG"),I=t("2kyd"),_=t("hRxt"),F=I("species"),O="Promise",A=E.get,M=E.set,z=E.getterFor(O),j=u,B=c.TypeError,D=c.document,L=c.process,U=p("fetch"),K=S.f,q=K,W="process"==C(L),H=!!(D&&D.createEvent&&c.dispatchEvent),G="unhandledrejection",X="rejectionhandled",Y=0,Z=1,Q=2,J=1,nn=2,en=$(O,(function(){var n=w(j)!==String(j);if(!n){if(66===_)return!0;if(!W&&"function"!=typeof PromiseRejectionEvent)return!0}if(s&&!j.prototype["finally"])return!0;if(_>=51&&/native code/.test(j))return!1;var e=j.resolve(1),t=function(n){n((function(){}),(function(){}))},r=e.constructor={};return r[F]=t,!(e.then((function(){}))instanceof t)})),tn=en||!b((function(n){j.all(n)["catch"]((function(){}))})),rn=function(n){var e;return!(!x(n)||"function"!=typeof(e=n.then))&&e},an=function(n,e,t){if(!e.notified){e.notified=!0;var r=e.reactions;P((function(){var a=e.value,o=e.state==Z,i=0;while(r.length>i){var l,s,c,p=r[i++],u=o?p.ok:p.fail,d=p.resolve,m=p.reject,f=p.domain;try{u?(o||(e.rejection===nn&&cn(n,e),e.rejection=J),!0===u?l=a:(f&&f.enter(),l=u(a),f&&(f.exit(),c=!0)),l===p.promise?m(B("Promise-chain cycle")):(s=rn(l))?s.call(l,d,m):d(l)):m(a)}catch(h){f&&!c&&f.exit(),m(h)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&ln(n,e)}))}},on=function(n,e,t){var r,a;H?(r=D.createEvent("Event"),r.promise=e,r.reason=t,r.initEvent(n,!1,!0),c.dispatchEvent(r)):r={promise:e,reason:t},(a=c["on"+n])?a(r):n===G&&R("Unhandled promise rejection",t)},ln=function(n,e){V.call(c,(function(){var t,r=e.value,a=sn(e);if(a&&(t=T((function(){W?L.emit("unhandledRejection",r,n):on(G,n,r)})),e.rejection=W||sn(e)?nn:J,t.error))throw t.value}))},sn=function(n){return n.rejection!==J&&!n.parent},cn=function(n,e){V.call(c,(function(){W?L.emit("rejectionHandled",n):on(X,n,e.value)}))},pn=function(n,e,t,r){return function(a){n(e,t,a,r)}},un=function(n,e,t,r){e.done||(e.done=!0,r&&(e=r),e.value=t,e.state=Q,an(n,e,!0))},dn=function(n,e,t,r){if(!e.done){e.done=!0,r&&(e=r);try{if(n===t)throw B("Promise can't be resolved itself");var a=rn(t);a?P((function(){var r={done:!1};try{a.call(t,pn(dn,n,r,e),pn(un,n,r,e))}catch(o){un(n,r,o,e)}})):(e.value=t,e.state=Z,an(n,e,!1))}catch(o){un(n,{done:!1},o,e)}}};en&&(j=function(n){y(this,j,O),g(n),r.call(this);var e=A(this);try{n(pn(dn,this,e),pn(un,this,e))}catch(t){un(this,e,t)}},r=function(n){M(this,{type:O,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:Y,value:void 0})},r.prototype=m(j.prototype,{then:function(n,e){var t=z(this),r=K(k(this,j));return r.ok="function"!=typeof n||n,r.fail="function"==typeof e&&e,r.domain=W?L.domain:void 0,t.parent=!0,t.reactions.push(r),t.state!=Y&&an(this,t,!1),r.promise},catch:function(n){return this.then(void 0,n)}}),a=function(){var n=new r,e=A(n);this.promise=n,this.resolve=pn(dn,n,e),this.reject=pn(un,n,e)},S.f=K=function(n){return n===j||n===o?new a(n):q(n)},s||"function"!=typeof u||(i=u.prototype.then,d(u.prototype,"then",(function(n,e){var t=this;return new j((function(n,e){i.call(t,n,e)})).then(n,e)}),{unsafe:!0}),"function"==typeof U&&l({global:!0,enumerable:!0,forced:!0},{fetch:function(n){return N(j,U.apply(c,arguments))}}))),l({global:!0,wrap:!0,forced:en},{Promise:j}),f(j,O,!1,!0),h(O),o=p(O),l({target:O,stat:!0,forced:en},{reject:function(n){var e=K(this);return e.reject.call(void 0,n),e.promise}}),l({target:O,stat:!0,forced:s||en},{resolve:function(n){return N(s&&this===o?j:this,n)}}),l({target:O,stat:!0,forced:tn},{all:function(n){var e=this,t=K(e),r=t.resolve,a=t.reject,o=T((function(){var t=g(e.resolve),o=[],i=0,l=1;v(n,(function(n){var s=i++,c=!1;o.push(void 0),l++,t.call(e,n).then((function(n){c||(c=!0,o[s]=n,--l||r(o))}),a)})),--l||r(o)}));return o.error&&a(o.value),t.promise},race:function(n){var e=this,t=K(e),r=t.reject,a=T((function(){var a=g(e.resolve);v(n,(function(n){a.call(e,n).then(t.resolve,r)}))}));return a.error&&r(a.value),t.promise}})},sdAH:function(n,e,t){var r=t("MMxC"),a=Math.hypot,o=Math.abs,i=Math.sqrt,l=!!a&&a(1/0,NaN)!==1/0;r({target:"Math",stat:!0,forced:l},{hypot:function(n,e){var t,r,a=0,l=0,s=arguments.length,c=0;while(l<s)t=o(arguments[l++]),c<t?(r=c/t,a=a*r*r+1,c=t):t>0?(r=t/c,a+=r*r):a+=t;return c===1/0?1/0:c*i(a)}})},slMo:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("NSAu")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"tag"},o.a.createElement("a",{"aria-hidden":"true",href:"#tag"},o.a.createElement("span",{className:"icon icon-link"})),"Tag"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:'import * as React from \'react\';\nimport { Tag } from \'anna-remax-ui\';\nimport { Block, Frame } from \'../../common\';\n\nconst { CheckableTag } = Tag;\n\nexport default () => {\n  const [checked1, setChecked1] = React.useState(false);\n  const [checked2, setChecked2] = React.useState(false);\n\n  return (\n    <Frame padding>\n      <Block noTitlePadding title="Basic">\n        <Tag>Anna</Tag>\n      </Block>\n      <Block noTitlePadding title="Type">\n        <Tag type="success">success</Tag>\n        <Tag type="info">info</Tag>\n        <Tag type="error">error</Tag>\n      </Block>\n      <Block noTitlePadding title="Size">\n        <Tag size="large">large</Tag>\n        <Tag>default</Tag>\n        <Tag size="small">small</Tag>\n      </Block>\n      <Block noTitlePadding title="Checkable">\n        <CheckableTag checked={checked1} onChange={v => setChecked1(v)}>\n          \u5927\u4f17\u4f18\u9009\n        </CheckableTag>\n        <CheckableTag checked={checked2} onChange={v => setChecked2(v)}>\n          \u70b9\u8bc4\u9ad8\u5206\n        </CheckableTag>\n      </Block>\n    </Frame>\n  );\n};\n',jsx:"import * as React from 'react';\nimport { Tag } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\n\nconst { CheckableTag } = Tag;\nexport default () => {\n  const [checked1, setChecked1] = React.useState(false);\n  const [checked2, setChecked2] = React.useState(false);\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      padding: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Basic',\n      },\n      /* #__PURE__ */ React.createElement(Tag, null, 'Anna'),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Type',\n      },\n      /* #__PURE__ */ React.createElement(\n        Tag,\n        {\n          type: 'success',\n        },\n        'success',\n      ),\n      /* #__PURE__ */ React.createElement(\n        Tag,\n        {\n          type: 'info',\n        },\n        'info',\n      ),\n      /* #__PURE__ */ React.createElement(\n        Tag,\n        {\n          type: 'error',\n        },\n        'error',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Size',\n      },\n      /* #__PURE__ */ React.createElement(\n        Tag,\n        {\n          size: 'large',\n        },\n        'large',\n      ),\n      /* #__PURE__ */ React.createElement(Tag, null, 'default'),\n      /* #__PURE__ */ React.createElement(\n        Tag,\n        {\n          size: 'small',\n        },\n        'small',\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        noTitlePadding: true,\n        title: 'Checkable',\n      },\n      /* #__PURE__ */ React.createElement(\n        CheckableTag,\n        {\n          checked: checked1,\n          onChange: v => setChecked1(v),\n        },\n        '\\u5927\\u4F17\\u4F18\\u9009',\n      ),\n      /* #__PURE__ */ React.createElement(\n        CheckableTag,\n        {\n          checked: checked2,\n          onChange: v => setChecked2(v),\n        },\n        '\\u70B9\\u8BC4\\u9AD8\\u5206',\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-3",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h2",{id:"tag-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#tag-1"},o.a.createElement("span",{className:"icon icon-link"})),"Tag"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"type"),o.a.createElement("td",null,"\u6807\u7b7e\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u6709",o.a.createElement("code",null,"info")," ",o.a.createElement("code",null,"success")," ",o.a.createElement("code",null,"error")),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"size"),o.a.createElement("td",null,"\u6807\u7b7e\u5927\u5c0f\uff0c\u53ef\u9009\u503c\u6709",o.a.createElement("code",null,"small")," ",o.a.createElement("code",null,"large")),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"className"),o.a.createElement("td",null,"\u6807\u7b7e\u7c7b\u540d"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49\u6807\u7b7e\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onTap"),o.a.createElement("td",null,"\u70b9\u51fb\u6807\u7b7e\u65f6\u89e6\u53d1\u7684\u56de\u8c03"),o.a.createElement("td",null,"() => void"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"tagcheckabletag"},o.a.createElement("a",{"aria-hidden":"true",href:"#tagcheckabletag"},o.a.createElement("span",{className:"icon icon-link"})),"Tag.CheckableTag"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"checked"),o.a.createElement("td",null,"\u8bbe\u7f6e\u6807\u7b7e\u7684\u9009\u4e2d\u72b6\u6001"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"className"),o.a.createElement("td",null,"CheckableTag\u7684\u7c7b\u540d"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"\u70b9\u51fb\u6807\u7b7e\u65f6\u89e6\u53d1\u7684\u56de\u8c03"),o.a.createElement("td",null,"(e: any) => void"),o.a.createElement("td",null,"-"))))))}},ssJt:function(n,e,t){"use strict";var r=t("29mP"),a=t("YfKC"),o=t("2kyd"),i=t("tny8"),l=o("species");n.exports=function(n){var e=r(n),t=a.f;i&&e&&!e[l]&&t(e,l,{configurable:!0,get:function(){return this}})}},swKd:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.newpkgJSON=void 0;var r=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"dumi-example",t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index.js",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"An auto generated demo by dumi";return'{\n  "name": "'.concat(e,'",\n  "version": "0.0.0",\n  "description": "').concat(a,'",\n  "main": "').concat(t,'",\n  "dependencies": {\n    ').concat(Object.keys(n).map((function(e){return'"'.concat(e,'": "').concat(n[e],'"')})).join(",\n    "),'\n  },\n  "devDependencies": {\n    ').concat(Object.keys(r).map((function(n){return'"'.concat(n,'": "').concat(r[n],'"')})).join(",\n    "),"\n  }\n}")};e.newpkgJSON=r},sxGJ:function(n,e,t){(function(e,t){n.exports=t()})(0,(function(){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return n[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(r,a,function(e){return n[e]}.bind(null,a));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=6)}([function(n,e){function t(n){var e;if("SELECT"===n.nodeName)n.focus(),e=n.value;else if("INPUT"===n.nodeName||"TEXTAREA"===n.nodeName){var t=n.hasAttribute("readonly");t||n.setAttribute("readonly",""),n.select(),n.setSelectionRange(0,n.value.length),t||n.removeAttribute("readonly"),e=n.value}else{n.hasAttribute("contenteditable")&&n.focus();var r=window.getSelection(),a=document.createRange();a.selectNodeContents(n),r.removeAllRanges(),r.addRange(a),e=r.toString()}return e}n.exports=t},function(n,e){function t(){}t.prototype={on:function(n,e,t){var r=this.e||(this.e={});return(r[n]||(r[n]=[])).push({fn:e,ctx:t}),this},once:function(n,e,t){var r=this;function a(){r.off(n,a),e.apply(t,arguments)}return a._=e,this.on(n,a,t)},emit:function(n){var e=[].slice.call(arguments,1),t=((this.e||(this.e={}))[n]||[]).slice(),r=0,a=t.length;for(r;r<a;r++)t[r].fn.apply(t[r].ctx,e);return this},off:function(n,e){var t=this.e||(this.e={}),r=t[n],a=[];if(r&&e)for(var o=0,i=r.length;o<i;o++)r[o].fn!==e&&r[o].fn._!==e&&a.push(r[o]);return a.length?t[n]=a:delete t[n],this}},n.exports=t,n.exports.TinyEmitter=t},function(n,e,t){var r=t(3),a=t(4);function o(n,e,t){if(!n&&!e&&!t)throw new Error("Missing required arguments");if(!r.string(e))throw new TypeError("Second argument must be a String");if(!r.fn(t))throw new TypeError("Third argument must be a Function");if(r.node(n))return i(n,e,t);if(r.nodeList(n))return l(n,e,t);if(r.string(n))return s(n,e,t);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function i(n,e,t){return n.addEventListener(e,t),{destroy:function(){n.removeEventListener(e,t)}}}function l(n,e,t){return Array.prototype.forEach.call(n,(function(n){n.addEventListener(e,t)})),{destroy:function(){Array.prototype.forEach.call(n,(function(n){n.removeEventListener(e,t)}))}}}function s(n,e,t){return a(document.body,n,e,t)}n.exports=o},function(n,e){e.node=function(n){return void 0!==n&&n instanceof HTMLElement&&1===n.nodeType},e.nodeList=function(n){var t=Object.prototype.toString.call(n);return void 0!==n&&("[object NodeList]"===t||"[object HTMLCollection]"===t)&&"length"in n&&(0===n.length||e.node(n[0]))},e.string=function(n){return"string"===typeof n||n instanceof String},e.fn=function(n){var e=Object.prototype.toString.call(n);return"[object Function]"===e}},function(n,e,t){var r=t(5);function a(n,e,t,r,a){var o=i.apply(this,arguments);return n.addEventListener(t,o,a),{destroy:function(){n.removeEventListener(t,o,a)}}}function o(n,e,t,r,o){return"function"===typeof n.addEventListener?a.apply(null,arguments):"function"===typeof t?a.bind(null,document).apply(null,arguments):("string"===typeof n&&(n=document.querySelectorAll(n)),Array.prototype.map.call(n,(function(n){return a(n,e,t,r,o)})))}function i(n,e,t,a){return function(t){t.delegateTarget=r(t.target,e),t.delegateTarget&&a.call(n,t)}}n.exports=o},function(n,e){var t=9;if("undefined"!==typeof Element&&!Element.prototype.matches){var r=Element.prototype;r.matches=r.matchesSelector||r.mozMatchesSelector||r.msMatchesSelector||r.oMatchesSelector||r.webkitMatchesSelector}function a(n,e){while(n&&n.nodeType!==t){if("function"===typeof n.matches&&n.matches(e))return n;n=n.parentNode}}n.exports=a},function(n,e,t){"use strict";t.r(e);var r=t(0),a=t.n(r),o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},i=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}();function l(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}var s=function(){function n(e){l(this,n),this.resolveOptions(e),this.initSelection()}return i(n,[{key:"resolveOptions",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action=n.action,this.container=n.container,this.emitter=n.emitter,this.target=n.target,this.text=n.text,this.trigger=n.trigger,this.selectedText=""}},{key:"initSelection",value:function(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"selectFake",value:function(){var n=this,e="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandlerCallback=function(){return n.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[e?"right":"left"]="-9999px";var t=window.pageYOffset||document.documentElement.scrollTop;this.fakeElem.style.top=t+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.container.appendChild(this.fakeElem),this.selectedText=a()(this.fakeElem),this.copyText()}},{key:"removeFake",value:function(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function(){this.selectedText=a()(this.target),this.copyText()}},{key:"copyText",value:function(){var n=void 0;try{n=document.execCommand(this.action)}catch(e){n=!1}this.handleResult(n)}},{key:"handleResult",value:function(n){this.emitter.emit(n?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function(){this.trigger&&this.trigger.focus(),document.activeElement.blur(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function(){this.removeFake()}},{key:"action",set:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"copy";if(this._action=n,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function(){return this._action}},{key:"target",set:function(n){if(void 0!==n){if(!n||"object"!==("undefined"===typeof n?"undefined":o(n))||1!==n.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&n.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(n.hasAttribute("readonly")||n.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=n}},get:function(){return this._target}}]),n}(),c=s,p=t(1),u=t.n(p),d=t(2),m=t.n(d),f="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},h=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}();function x(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function g(n,e){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!==typeof e&&"function"!==typeof e?n:e}function y(n,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(n,e):n.__proto__=e)}var C=function(n){function e(n,t){x(this,e);var r=g(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return r.resolveOptions(t),r.listenClick(n),r}return y(e,n),h(e,[{key:"resolveOptions",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action="function"===typeof n.action?n.action:this.defaultAction,this.target="function"===typeof n.target?n.target:this.defaultTarget,this.text="function"===typeof n.text?n.text:this.defaultText,this.container="object"===f(n.container)?n.container:document.body}},{key:"listenClick",value:function(n){var e=this;this.listener=m()(n,"click",(function(n){return e.onClick(n)}))}},{key:"onClick",value:function(n){var e=n.delegateTarget||n.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new c({action:this.action(e),target:this.target(e),text:this.text(e),container:this.container,trigger:e,emitter:this})}},{key:"defaultAction",value:function(n){return w("action",n)}},{key:"defaultTarget",value:function(n){var e=w("target",n);if(e)return document.querySelector(e)}},{key:"defaultText",value:function(n){return w("text",n)}},{key:"destroy",value:function(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}],[{key:"isSupported",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["copy","cut"],e="string"===typeof n?[n]:n,t=!!document.queryCommandSupported;return e.forEach((function(n){t=t&&!!document.queryCommandSupported(n)})),t}}]),e}(u.a);function w(n,e){var t="data-clipboard-"+n;if(e.hasAttribute(t))return e.getAttribute(t)}e["default"]=C}])["default"]}))},tIdH:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t("YCKM"),o=t("f4X2"),i=t("IOv4");e["default"]=()=>r["createElement"](i["b"],{padding:!0},r["createElement"](i["a"],{noTitlePadding:!0,title:"Basic"},r["createElement"](o["s"],{current:1,steps:[{title:"\u5ba2\u6237\u4e0b\u5355"},{title:"\u5546\u57ce\u53d1\u8d27"},{title:"\u4e70\u5bb6\u786e\u8ba4"}]})),r["createElement"](i["a"],{noTitlePadding:!0,title:"Status"},r["createElement"](o["s"],{current:1,status:"error",steps:[{title:"\u5ba2\u6237\u4e0b\u5355"},{title:"\u5546\u57ce\u53d1\u8d27",errorTitle:"\u53d1\u8d27\u5931\u8d25"},{title:"\u4e70\u5bb6\u786e\u8ba4"}]})),r["createElement"](i["a"],{noTitlePadding:!0,title:"Direction"},r["createElement"](a["d"],{style:{padding:"1.88rem 1.56rem"}},r["createElement"](o["s"],{direction:"vertical",steps:[{title:"\u62a5\u4ef7\u6210\u529f"},{title:"\u8be2\u4ef7\u4e2d"},{title:"\u5f85\u5904\u7406"}]}))),r["createElement"](i["a"],{noTitlePadding:!0,title:"Description & Extra"},r["createElement"](a["d"],{style:{padding:"1.88rem 1.56rem"}},r["createElement"](o["s"],{direction:"vertical",steps:[{title:"\u62a5\u4ef7\u6210\u529f",description:"\u5ba2\u6237\u5df2\u63a5\u53d7\u62a5\u4ef7",extra:"2020-5-1"},{title:"\u8be2\u4ef7\u4e2d",description:"\u9500\u552e\u4ee5\u5411\u91c7\u8d2d\u63d0\u4ea4\u8be2\u4ef7\u8bf7\u6c42",extra:"2020-4-27"},{title:"\u5f85\u5904\u7406",description:"\u5ba2\u6237\u5df2\u4e0b\u5355\uff0c\u8ba2\u5355\u7b49\u5f85\u9500\u552e\u5904\u7406",extra:"2020-4-23"}]}))))},tJVT:function(n,e,t){"use strict";function r(n){if(Array.isArray(n))return n}function a(n,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done);r=!0)if(t.push(i.value),e&&t.length===e)break}catch(s){a=!0,o=s}finally{try{r||null==l["return"]||l["return"]()}finally{if(a)throw o}}return t}}function o(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function i(n,e){if(n){if("string"===typeof n)return o(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?o(n,e):void 0}}function l(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(n,e){return r(n)||a(n,e)||i(n,e)||l()}t.d(e,"a",(function(){return s}))},tSXo:function(n,e){n.exports=function(n){return"object"===typeof n?null!==n:"function"===typeof n}},ti1D:function(n,e,t){"use strict";var r=t("ukPv"),a=t("FVwB"),o=t("MVys"),i=r.Int8Array,l=a.aTypedArray,s=a.exportTypedArrayMethod,c=[].toLocaleString,p=[].slice,u=!!i&&o((function(){c.call(new i(1))})),d=o((function(){return[1,2].toLocaleString()!=new i([1,2]).toLocaleString()}))||!o((function(){i.prototype.toLocaleString.call([1,2])}));s("toLocaleString",(function(){return c.apply(u?p.call(l(this)):l(this),arguments)}),d)},"tm/P":function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),i=(t("B2uJ"),t("+su7"),t("5Yjd")),l=t.n(i),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("NF3c")),a=function(){return e["default"].createElement(r["default"],null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"checkbox"},o.a.createElement("a",{"aria-hidden":"true",href:"#checkbox"},o.a.createElement("span",{className:"icon icon-link"})),"Checkbox"),o.a.createElement("p",null,"Demo:")),o.a.createElement(l.a,Object(r["a"])({source:{tsx:"import React, { useState } from 'react';\nimport { View } from 'remax/one';\nimport { Checkbox, Textarea } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nconst radioStyle = { paddingBottom: '30px' };\n\nexport default () => {\n  const [isTrue, setIsTrue] = useState(true);\n  const [option, setOption] = useState('0');\n  const [option1, setOption1] = useState('0');\n\n  return (\n    <Frame padding>\n      <Block title=\"Basic\" noTitlePadding>\n        <View className={styles.container}>\n          <Checkbox checked>Checkbox</Checkbox>\n        </View>\n      </Block>\n      {/* <Block title=\"Label\" noTitlePadding>\n        <View className={styles.container}>\n          <Checkbox checked={!isTrue} onChange={() => setIsTrue(v => !v)}>\n            NO\n          </Checkbox>\n          <Checkbox checked={isTrue} onChange={() => setIsTrue(v => !v)}>\n            YES\n          </Checkbox>\n        </View>\n      </Block> */}\n      <Block title=\"Group\" noTitlePadding>\n        <Checkbox.Group\n          value={option1}\n          onChange={(checked: boolean, value: any) => setOption1(value)}\n        >\n          <Checkbox value={'0'}>\u65f6\u6548\u95ee\u9898</Checkbox>\n          <Checkbox value={'1'}>\u4ef7\u683c\u95ee\u9898</Checkbox>\n          <Checkbox value={'2'}>\u5176\u4ed6</Checkbox>\n        </Checkbox.Group>\n      </Block>\n      <Block title=\"Direction & Extra\" noTitlePadding>\n        <View className={styles.container}>\n          <Checkbox.Group\n            direction=\"column\"\n            value={option}\n            onChange={(checked: boolean, value: any) => setOption(value)}\n          >\n            <Checkbox value={'0'} style={radioStyle}>\n              \u65f6\u6548\u95ee\u9898\n            </Checkbox>\n            <Checkbox value={'1'} style={radioStyle}>\n              \u4ef7\u683c\u95ee\u9898\n            </Checkbox>\n            <Checkbox\n              value={'2'}\n              extra={\n                <Textarea\n                  className={styles.remarks}\n                  placeholder=\"\u82e5\u4e3a\u5176\u4ed6\uff0c\u8bf7\u586b\u5199\u5907\u6ce8\uff08\u6ce8\uff1a\u6b64\u5904\u4e3aextra\uff09\"\n                  value={''}\n                  showCount={false}\n                />\n              }\n            >\n              \u5176\u4ed6\n            </Checkbox>\n          </Checkbox.Group>\n        </View>\n      </Block>\n    </Frame>\n  );\n};\n",jsx:"import React, { useState } from 'react';\nimport { View } from 'remax/one';\nimport { Checkbox, Textarea } from 'anna-remax-ui';\nimport { Block, Frame } from '../../common';\nimport styles from './index.module.scss';\n\nconst radioStyle = {\n  paddingBottom: '30px',\n};\nexport default () => {\n  const [isTrue, setIsTrue] = useState(true);\n  const [option, setOption] = useState('0');\n  const [option1, setOption1] = useState('0');\n  return /* #__PURE__ */ React.createElement(\n    Frame,\n    {\n      padding: true,\n    },\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Basic',\n        noTitlePadding: true,\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          className: styles.container,\n        },\n        /* #__PURE__ */ React.createElement(\n          Checkbox,\n          {\n            checked: true,\n          },\n          'Checkbox',\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Group',\n        noTitlePadding: true,\n      },\n      /* #__PURE__ */ React.createElement(\n        Checkbox.Group,\n        {\n          value: option1,\n          onChange: (checked, value) => setOption1(value),\n        },\n        /* #__PURE__ */ React.createElement(\n          Checkbox,\n          {\n            value: '0',\n          },\n          '\\u65F6\\u6548\\u95EE\\u9898',\n        ),\n        /* #__PURE__ */ React.createElement(\n          Checkbox,\n          {\n            value: '1',\n          },\n          '\\u4EF7\\u683C\\u95EE\\u9898',\n        ),\n        /* #__PURE__ */ React.createElement(\n          Checkbox,\n          {\n            value: '2',\n          },\n          '\\u5176\\u4ED6',\n        ),\n      ),\n    ),\n    /* #__PURE__ */ React.createElement(\n      Block,\n      {\n        title: 'Direction & Extra',\n        noTitlePadding: true,\n      },\n      /* #__PURE__ */ React.createElement(\n        View,\n        {\n          className: styles.container,\n        },\n        /* #__PURE__ */ React.createElement(\n          Checkbox.Group,\n          {\n            direction: 'column',\n            value: option,\n            onChange: (checked, value) => setOption(value),\n          },\n          /* #__PURE__ */ React.createElement(\n            Checkbox,\n            {\n              value: '0',\n              style: radioStyle,\n            },\n            '\\u65F6\\u6548\\u95EE\\u9898',\n          ),\n          /* #__PURE__ */ React.createElement(\n            Checkbox,\n            {\n              value: '1',\n              style: radioStyle,\n            },\n            '\\u4EF7\\u683C\\u95EE\\u9898',\n          ),\n          /* #__PURE__ */ React.createElement(\n            Checkbox,\n            {\n              value: '2',\n              extra: /* #__PURE__ */ React.createElement(Textarea, {\n                className: styles.remarks,\n                placeholder:\n                  '\\u82E5\\u4E3A\\u5176\\u4ED6\\uFF0C\\u8BF7\\u586B\\u5199\\u5907\\u6CE8\\uFF08\\u6CE8\\uFF1A\\u6B64\\u5904\\u4E3Aextra\\uFF09',\n                value: '',\n                showCount: false,\n              }),\n            },\n            '\\u5176\\u4ED6',\n          ),\n        ),\n      ),\n    ),\n  );\n};\n"}},{path:"/_demos/index-5",dependencies:{"@umijs/babel-preset-umi":"3.1.3",remax:"2.0.0-alpha.17",classnames:"2.2.6","lodash-es":"4.17.15"},files:{"docs-source/index.ts":{path:"anna-remax-ui",content:"/** @format */\n\n// \u901a\u7528\n\nexport { default as Button } from './button';\n\nexport { default as Cell } from './cell';\n\nexport { default as Icon } from './icon';\n\n// \u6570\u636e\u5f55\u5165\nexport { default as Input } from './input';\n\nexport { default as Picker } from './picker';\n\nexport { default as Radio } from './radio';\n\nexport { default as Checkbox } from './checkbox';\n\nexport { default as Switch } from './switch';\n\nexport { default as Textarea } from './textarea';\n\nexport { default as Selector } from './selector';\n\nexport { default as SelectorPopup } from './selector-popup';\n\nexport { default as Filter } from './filter';\n\nexport { default as Popup } from './popup';\n\nexport { default as Mask } from './mask';\n\nexport { default as Dropdown } from './dropdown';\n\nexport { default as Cascade } from './cascade';\n\nexport { default as Rate } from './rate';\n\nexport { default as Tabs } from './tabs';\n\nexport { default as Steps } from './steps';\n\nexport { default as Tag } from './tag';\n\n//\n\nexport { default as Loading } from './loading';\n\nexport { default as Result } from './result';\n\n// \u6570\u636e\u5c55\u793a\n\nexport { default as Card } from './card';\n\nexport { default as SearchBar } from './search-bar';\n\nexport { default as CascadePopup } from './cascade-popup';\n"},"button/index.tsx":{path:"./button",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { tuple } from '../_util';\nimport Loading from '../loading';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('button');\n\nconst ButtonTypes = tuple('default', 'primary', 'simple');\nexport type ButtonType = typeof ButtonTypes[number];\n\nexport interface ButtonProps {\n  type?: ButtonType;\n  size?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  danger?: boolean;\n  square?: boolean;\n  block?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  plain?: boolean;\n  onTap?: () => void;\n}\n\nconst Button = (props: ButtonProps): React.ReactElement => {\n  const {\n    type,\n    size,\n    style,\n    children,\n    onTap,\n    disabled,\n    danger,\n    square,\n    block,\n    loading,\n    loadingText,\n    plain,\n  } = props;\n\n  const handleClick = () => {\n    if (disabled) {\n      return;\n    }\n    if (loading) {\n      return;\n    }\n    onTap?.();\n  };\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-square`]: square,\n        [`${prefixCls}-small`]: size === 'small',\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-superlarge`]: size === 'superlarge',\n        [`${prefixCls}-primary`]: type === 'primary',\n        [`${prefixCls}-plain`]: plain,\n        [`${prefixCls}-danger-default`]: danger,\n        [`${prefixCls}-danger`]: type === 'primary' && danger,\n        [`${prefixCls}-block`]: block,\n        [`${prefixCls}-loading`]: loading,\n        [`${prefixCls}-disabled`]: disabled,\n      })}\n      onTap={handleClick}\n      style={style}\n    >\n      {loading ? (\n        <View className={`${prefixCls}-loading-icon`}>\n          <Loading color=\"#FDFFFD\" radius=\"36px\" style={{ verticalAlign: 'text-top' }} />\n        </View>\n      ) : null}\n      <Text>{loading && loadingText ? loadingText : children}</Text>\n    </View>\n  );\n};\n\nexport default Button;\n"},"_util/index.ts":{path:"../_util",content:"/** @format */\n\nimport to from './to';\nimport sync from './sync';\n\nexport * from './type';\nexport * from './utils';\n\nexport { sync, to };\n"},"to.ts":{path:"./to",content:"/** @format */\n\nconst to = (promise: Promise<any>): Promise<any> => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (!promise || !Promise.prototype.isPrototypeOf(promise)) {\n    return new Promise((resolve, reject) => {\n      reject(new Error('requires promises as the param'));\n    }).catch(err => {\n      return [err, null];\n    });\n  }\n  return promise\n    .then(function (...args) {\n      return [null, ...args];\n    })\n    .catch(err => {\n      return [err];\n    });\n};\n\nexport default to;\n"},"sync.ts":{path:"./sync",content:"/** @format */\n\nconst sync = (fn: Function, ...args: any[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const obj = { ...args[0] };\n    const success = obj.success;\n    obj.success = function (...params: any[]) {\n      success && success.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      resolve(r);\n    };\n    const fail = obj.fail;\n    obj.fail = function (...params: any[]) {\n      fail && fail.apply(this, ...params);\n      const r = params.length > 1 ? params : params[0];\n      reject(r);\n    };\n    fn(obj);\n  });\n};\n\nexport default sync;\n"},"type.ts":{path:"./type",content:"/** @format */\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nexport const tuple = <T extends string[]>(...args: T) => args;\n\nexport const tupleNum = <T extends number[]>(...args: T) => args;\n"},"utils.ts":{path:"./utils",content:"/** @format */\n\nconst guid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport { guid };\n"},"loading/index.tsx":{path:"../loading",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('loading');\n\nexport interface LoadingProps {\n  type?: string;\n  color?: string;\n  gapColor?: string;\n  radius?: string;\n  style?: React.CSSProperties;\n}\n\nconst Loading = (props: LoadingProps) => {\n  const { style, type, color = '#999', gapColor = '#FDFFFD', radius = '42px' } = props;\n\n  if (type === 'gap') {\n    return (\n      <View\n        className={`${prefixCls}-gap`}\n        style={{\n          height: radius,\n          width: radius,\n          border: `2px solid ${color}`,\n        }}\n      >\n        <View\n          className={`${prefixCls}-gap-fill`}\n          style={{\n            backgroundColor: gapColor,\n          }}\n        />\n      </View>\n    );\n  }\n  if (type === 'wave') {\n    return (\n      <View className={`${prefixCls}-wave`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  if (type === 'anna') {\n    return (\n      <View className={`${prefixCls}-anna`}>\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n        <View style={{ backgroundColor: color }} />\n      </View>\n    );\n  }\n  return (\n    <View\n      className={prefixCls}\n      style={{\n        ...style,\n        height: radius,\n        width: radius,\n        borderColor: `${color} ${color} transparent`,\n      }}\n    />\n  );\n};\n\nexport default Loading;\n"},"common/index.ts":{path:"../common",content:"/** @format */\n\nexport const annaPrefix = 'anna';\n\nexport const getPrefixCls = (name: string) => `${annaPrefix}-${name}`;\n"},"index.scss":{path:"./index.scss",content:"@import '../style/index.scss';\n\n$loading-prefix-cls: #{$anna-prefix}-loading;\n\n.#{$loading-prefix-cls} {\n  box-sizing: border-box;\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  border-radius: 50%;\n  border: 2px solid #FDFFFD;\n  border-bottom-color: transparent;\n  animation: loading .5s linear infinite;\n  &-gap{\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    width: 42px;\n    height: 42px;\n    border-radius: 50%;\n    border: 2px solid #999;\n    background-color: transparent;\n    animation: loading .6s linear infinite;\n    overflow: hidden;\n    &-fill{\n      position: absolute;\n      left: 50%;\n      right: 0;\n      top: 50%;\n      margin-top: -5px;\n      height: 10px;\n      background-color: #FDFFFD;\n    }\n  }\n\n  &-wave view, &-wave div {\n    width: 6px;\n    height: 40px;\n    background-color: #999;\n    border-radius: 2px;\n    display: inline-block;\n    margin-right: 6px;\n    &:nth-child(1) {\n      animation: loaderWave 0.5s -0.3s ease-in-out infinite alternate;\n    }\n    &:nth-child(2) {\n      animation: loaderWave 0.5s -0.25s ease-in-out infinite alternate;\n    }\n    &:nth-child(3) {\n      animation: loaderWave 0.5s -0.2s ease-in-out infinite alternate;\n    }\n    &:nth-child(4) {\n      animation: loaderWave 0.5s -0.1s ease-in-out infinite alternate;\n    }\n    &:nth-child(5) {\n      animation: loaderWave 0.5s 0s ease-in-out infinite alternate;\n      margin-right: 0;\n    }\n  }\n\n  &-anna {\n    position: relative;\n    width: 40px;\n    height: 40px;\n  }\n  &-anna view, &-anna div {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    background-color: #999;\n    border-radius: 50%;\n    &:nth-child(1) {\n      left: -20px;\n      animation: loaderAnna-1 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(2) {\n      top: -35px;\n      animation: loaderAnna-2 1.5s  ease-in-out infinite;\n    }\n    &:nth-child(3) {\n      left: 20px;\n      animation: loaderAnna-3 1.5s ease-in-out infinite;\n    }\n  }\n}\n\n@keyframes loading {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loaderWave {\n  0% {\n    -webkit-transform: scale(1, 0.3);\n  }\n  100% {\n    -webkit-transform: scale(1, 1);\n  }\n}\n\n@keyframes loaderAnna-1 {\n  33.333% {\n    -webkit-transform: translate(20px, -35px);\n  }\n  66.666% {\n    -webkit-transform: translate(40px, 0);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-2 {\n  33.333% {\n    -webkit-transform: translate(20px, 35px);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, 35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}\n@keyframes loaderAnna-3 {\n  33.333% {\n    -webkit-transform: translate(-40px, 0);\n  }\n  66.666% {\n    -webkit-transform: translate(-20px, -35px);\n  }\n  100% {\n    -webkit-transform: translate(0, 0);\n  }\n}"},"cell/index.tsx":{path:"./cell",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cell');\n\nexport interface ItemProps {\n  label?: React.ReactNode;\n  children?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: React.CSSProperties;\n  labelStyle?: React.CSSProperties;\n  valueStyle?: React.CSSProperties;\n  verticality?: boolean;\n  icon?: string;\n  required?: boolean;\n  border?: boolean;\n  arrow?: boolean;\n  field?: boolean;\n  defaultNullValue?: string;\n  onTap?: () => void;\n}\n\nconst Cell = (props: ItemProps) => {\n  const {\n    label,\n    style,\n    labelStyle,\n    valueStyle,\n    children,\n    description,\n    verticality,\n    icon,\n    border = true,\n    arrow,\n    required,\n    field,\n    defaultNullValue = '',\n    onTap,\n  } = props;\n\n  if (verticality) {\n    return (\n      <View className={prefixCls} style={style} onTap={onTap}>\n        <View className={`${prefixCls}-verticality`}>\n          {label ? (\n            <View className={`${prefixCls}-verticality-label`} style={labelStyle}>\n              {label}\n            </View>\n          ) : null}\n          <View className={`${prefixCls}-verticality-value`} style={valueStyle}>\n            {children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls} style={style} onTap={onTap}>\n      <View className={`${prefixCls}-container`}>\n        <View className={`${prefixCls}-container-main`}>\n          <View\n            className={classNames(`${prefixCls}-container-main-left`, {\n              [`${prefixCls}-container-main-left-input`]: field,\n            })}\n          >\n            <View className={`${prefixCls}-container-main-left-label`}>\n              {required ? (\n                <Text className={`${prefixCls}-container-main-left-label-required`}>*</Text>\n              ) : null}\n              {icon ? (\n                <Icon type={icon} size=\"32px\" style={{ marginRight: '10px' }} color=\"#333\" />\n              ) : null}\n              {label ? (\n                <Text className={`${prefixCls}-container-main-left-label-value`} style={labelStyle}>\n                  {label}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n          <View className={`${prefixCls}-container-main-right`}>\n            <View className={`${prefixCls}-container-main-right-value`} style={valueStyle}>\n              {children || children === 0 ? children : defaultNullValue}\n            </View>\n            {arrow ? <Icon type=\"right\" style={{ marginLeft: '10px' }} color=\"#666\" /> : null}\n          </View>\n        </View>\n        {description ? (\n          <View className={`${prefixCls}-container-description`}>{description}</View>\n        ) : null}\n      </View>\n      {border ? <View className={`${prefixCls}-border`} /> : null}\n    </View>\n  );\n};\n\nexport default Cell;\n"},"icon/index.tsx":{path:"../icon",content:"/** @format */\n\nimport * as React from 'react';\nimport { Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('icon');\n\nexport interface IconProps {\n  type?: string;\n  color?: string;\n  size?: string;\n  style?: React.CSSProperties;\n}\n\nconst Icon = (props: IconProps) => {\n  const { type, color, size, style } = props;\n\n  return (\n    <Text\n      className={classNames({\n        [prefixCls]: true,\n        iconfont: true,\n        [`icon-${type}`]: true,\n      })}\n      style={{\n        ...style,\n        color,\n        fontSize: size ? size : '28px',\n      }}\n    />\n  );\n};\n\nexport default Icon;\n"},"input/index.tsx":{path:"./input",content:"/** @format */\n\nimport * as React from 'react';\nimport { Input as AInput } from 'remax/one';\nimport classNames from 'classnames';\nimport Cell from '../cell';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('input');\n\nexport interface InputProps {\n  label?: React.ReactNode;\n  name?: string;\n  type?: 'text' | 'number';\n  unit?: string;\n  placeholder?: string;\n  value?: string;\n  className?: string;\n  inputAlign?: string;\n  icon?: string;\n  disabled?: boolean;\n  border?: boolean;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  formatFunc?: (v?: string) => any;\n}\n\nconst Input = (props: InputProps) => {\n  const {\n    label,\n    name,\n    type,\n    value,\n    className = '',\n    inputAlign,\n    placeholder,\n    onChange,\n    disabled,\n    border = true,\n    formatFunc,\n    required,\n    icon,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    let currentValue = e.detail.value;\n    if (formatFunc) {\n      currentValue = formatFunc(e.detail.value);\n    }\n    onChange?.(currentValue);\n  };\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <AInput\n        className={classNames({\n          [prefixCls]: true,\n          [`${prefixCls}-align-right`]: inputAlign === 'right',\n          [`${prefixCls}-align-center`]: inputAlign === 'center',\n          [className]: true,\n        })}\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onInput={handleChangeInput}\n        disabled={disabled}\n      />\n    </Cell>\n  );\n};\n\nexport default Input;\n"},"picker/index.tsx":{path:"./picker",content:"/** @format */\n\nimport * as React from 'react';\nimport { Picker as APicker } from '../one/base';\nimport Cell from '../cell';\nimport FormValue from '../form-value';\nimport find from 'lodash-es/find';\nimport get from 'lodash-es/get';\n\nexport interface PickerProps {\n  label?: React.ReactNode;\n  border?: boolean;\n  required?: boolean;\n  icon?: string;\n  disabled?: boolean;\n  pickerAlign?: string;\n  options?: any[];\n  value?: string;\n  onChange?: (e: any) => void;\n  placeholder?: string;\n}\n\nconst Picker = (props: PickerProps) => {\n  const {\n    label,\n    border,\n    required,\n    icon,\n    pickerAlign = 'left',\n    options,\n    value,\n    onChange,\n    placeholder,\n    disabled,\n  } = props;\n\n  const handleChangePicker = (e: any) => {\n    if (e.detail.value < 0) {\n      return;\n    }\n    onChange?.(options?.[e.detail.value]);\n  };\n\n  const valueIndex = options?.findIndex((item: any) => item['key'] === value) || 0;\n\n  return (\n    <Cell\n      label={label}\n      labelStyle={{ width: '180px' }}\n      border={border}\n      required={required}\n      icon={icon}\n      field\n    >\n      <APicker\n        range={options}\n        range-key=\"value\"\n        disabled={disabled}\n        value={valueIndex}\n        onChange={handleChangePicker}\n      >\n        <FormValue\n          placeholder={placeholder}\n          style={\n            {\n              textAlign: pickerAlign,\n            } as React.CSSProperties\n          }\n        >\n          {get(find(options, { key: value }), 'value')}\n        </FormValue>\n      </APicker>\n    </Cell>\n  );\n};\n\nexport default Picker;\n"},"one/base/index.ts":{path:"../one/base",content:"export { default as ScrollView } from './ScrollView';\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as Picker } from './Picker';\n"},"ScrollView.tsx":{path:"./ScrollView",content:"import * as React from 'react';\n// import { ScrollView as AlipayScrollView } from 'remax/ali';\n// import { ScrollView as WechatScrollView } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function ScrollView(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayScrollView {...props} />;\n    // case 'wechat':\n    //   return <WechatScrollView {...props} />;\n    case 'web':\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n    default:\n      return <div {...props} style={{ ...props.style, overflow: 'scroll' }} />;\n  }\n}\n"},"Checkbox.tsx":{path:"./Checkbox",content:"import * as React from 'react';\n// import { Checkbox as AlipayCheckbox } from 'remax/ali';\n// import { Checkbox as WechatCheckbox } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Checkbox(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayCheckbox {...props} />;\n    // case 'wechat':\n    //   return <WechatCheckbox {...props} />;\n    default:\n      return <checkbox {...props} />;\n  }\n}\n"},"Picker.tsx":{path:"./Picker",content:"import * as React from 'react';\n// import { Picker as AlipayPicker } from 'remax/ali';\n// import { Picker as WechatPicker } from 'remax/wechat';\n\n// \u81ea\u5b9a\u4e49 Props\ntype Props = any;\n\nexport default function Picker(props: Props) {\n  switch (process.env.REMAX_PLATFORM) {\n    // case 'ali':\n    //   return <AlipayPicker {...props} />;\n    // case 'wechat':\n    //   return <WechatPicker {...props} />;\n    default:\n      return <div {...props} />;\n  }\n}\n"},"form-value/index.tsx":{path:"../form-value",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('form-value');\n\nexport interface ValueProps {\n  placeholder?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Value = (props: ValueProps) => {\n  const { placeholder, style, children } = props;\n\n  return (\n    <View className={prefixCls} style={style}>\n      {children || children === 0 ? (\n        children\n      ) : (\n        <View className={`${prefixCls}-placeholder`}>{placeholder}</View>\n      )}\n    </View>\n  );\n};\n\nexport default Value;\n"},"radio/index.tsx":{path:"./radio",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('radio');\n\nexport interface RadioProps {\n  children?: React.ReactNode;\n  checked?: boolean;\n  value?: any;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Radio = (props: RadioProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <View className={`${prefixCls}-container-checked`}>\n            <View className={`${prefixCls}-container-checked-round_fill`} />\n          </View>\n        ) : (\n          <View className={`${prefixCls}-container-not_checked`} />\n        )}\n        <View className={`${prefixCls}-container-children`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: any;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any, v: any) => void;\n  style?: React.CSSProperties;\n}\n\nconst getRadios = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const radios = React.Children.map(children, (radio: any) => {\n    const newRadio = radio;\n    let checked = false;\n    if (newRadio && newRadio.props) {\n      if (\n        (newRadio.props.value || newRadio.props.value === 0 || newRadio.props.value === false) &&\n        newRadio.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Radio {...newRadio.props} checked={checked} onChange={onChange} />;\n    }\n    return newRadio;\n  });\n\n  return radios;\n};\n\nRadio.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange, style } = props;\n\n  const radios = getRadios(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n          ...style,\n        } as React.CSSProperties\n      }\n    >\n      {radios}\n    </View>\n  );\n};\n\nexport default Radio;\n"},"checkbox/index.tsx":{path:"./checkbox",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport Icon from '../icon';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('checkbox');\n\nexport interface CheckboxProps {\n  checked?: boolean;\n  value?: string;\n  extra?: React.ReactNode;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onChange?: (e: any, v?: any) => void;\n}\n\nconst Checkbox = (props: CheckboxProps) => {\n  const { children, checked, value, extra, style, onChange } = props;\n\n  const handleClick = () => {\n    onChange?.(!checked, value);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-container`} onTap={handleClick}>\n        {checked ? (\n          <Icon type=\"roundcheckfill\" size=\"48px\" color=\"#1890FF\" />\n        ) : (\n          <Icon type=\"round\" size=\"48px\" color=\"#999\" />\n        )}\n        <View className={`${prefixCls}-container-label`}>{children}</View>\n      </View>\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport interface GroupProps {\n  value?: string;\n  children?: React.ReactNode;\n  direction?: string;\n  onChange?: (e: any) => void;\n}\n\nconst getCheckboxs = (\n  children: React.ReactNode,\n  value?: string,\n  onChange?: (e: any, v: any) => void,\n) => {\n  const checkboxs = React.Children.map(children, (checkbox: any) => {\n    const newCheckbox = checkbox;\n    let checked = false;\n    if (newCheckbox && newCheckbox.props) {\n      if (\n        (newCheckbox.props.value || newCheckbox.props.value === 0) &&\n        newCheckbox.props.value === value\n      ) {\n        checked = true;\n      } else {\n        checked = false;\n      }\n      return <Checkbox {...newCheckbox.props} checked={checked} onChange={onChange} />;\n    }\n    return newCheckbox;\n  });\n\n  return checkboxs;\n};\n\nCheckbox.Group = (props: GroupProps) => {\n  const { value, children, direction = 'row', onChange } = props;\n\n  const checkboxs = getCheckboxs(children, value, onChange);\n\n  return (\n    <View\n      style={\n        {\n          display: 'flex',\n          flexDirection: direction,\n        } as React.CSSProperties\n      }\n    >\n      {checkboxs}\n    </View>\n  );\n};\n\nexport default Checkbox;\n\n// \u6ce8\u610f\u4e0d\u8981\u52a0 React.memo\uff0c\u4f1a\u5bfc\u81f4\u4fdd\u9519\u3002\n"},"switch/index.tsx":{path:"./switch",content:"/** @format */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { View } from 'remax/one';\nimport { Checkbox } from '../one/base';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('switch');\n\nexport interface SwitchProps {\n  checked?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  onChange?: (e: any) => void;\n}\n\nconst Switch = (props: SwitchProps) => {\n  const { checked, disabled, small, onChange } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked);\n  };\n\n  return (\n    <View className={prefixCls} onTap={handleChange}>\n      <Checkbox\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-checked`]: !small && checked,\n          [`${prefixCls}-checked-small`]: small && checked,\n          [`${prefixCls}-disabled`]: disabled,\n        })}\n        // onChange={handleChange}\n        value={checked ? 'on' : 'off'}\n        checked={checked}\n      />\n      <View\n        className={classNames(`${prefixCls}-checkbox`, {\n          [`${prefixCls}-checkbox-small`]: small,\n          [`${prefixCls}-checkbox-disabled`]: disabled,\n        })}\n      />\n    </View>\n  );\n};\n\nexport default Switch;\n"},"textarea/index.tsx":{path:"./textarea",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Textarea as ATextarea } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('textarea');\n\nexport interface TextareaProps {\n  className?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  maxlength?: number;\n  focus?: boolean;\n  autoHeight?: boolean;\n  showCount?: boolean;\n  controlled?: boolean;\n  rows?: number;\n  onChange?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onConfirm?: (e: any) => void;\n}\n\nconst Textarea = (props: TextareaProps) => {\n  const {\n    className = '',\n    name,\n    value,\n    placeholder,\n    disabled,\n    maxlength,\n    focus,\n    autoHeight,\n    showCount,\n    rows = 3,\n    controlled = false,\n    onChange,\n    onFocus,\n    onBlur,\n    onConfirm,\n  } = props;\n\n  const handleChangeInput = (e: any) => {\n    const v = e.detail.value;\n    onChange?.(v);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <ATextarea\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [className]: true,\n        })}\n        // @ts-ignore\n        placeholderClass={`${prefixCls}-placeholder`}\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxlength}\n        focus={focus}\n        autoHeight={autoHeight}\n        showCount={showCount}\n        controlled={controlled}\n        onInput={handleChangeInput}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onConfirm={onConfirm}\n        rows={rows}\n      />\n    </View>\n  );\n};\n\nexport default Textarea;\n"},"selector/index.tsx":{path:"./selector",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n  children?: OptionProps[];\n}\n\nexport interface SelectorProps {\n  options?: OptionProps[];\n  value?: string[];\n  style?: React.CSSProperties;\n  onChange?: (value: any, valueStr?: string) => void;\n  onChangeParentOption?: (e: any) => void;\n  [key: string]: any;\n}\n\nlet currentParent: any = null;\n\nconst Selector = (props: SelectorProps) => {\n  const { value = [], options = [], style, onChange, onChangeParentOption } = props;\n\n  const [parentData, setParentData] = useState<OptionProps[]>([]);\n  const [childrenData, setChildrenData] = useState<OptionProps[]>([]);\n  const [activeParent, setActiveParent] = useState('');\n\n  useEffect(() => {\n    if (options.length > 0) {\n      const data = options[0].children || [];\n      currentParent = options[0];\n      setActiveParent(currentParent.key);\n      setParentData(options);\n      setChildrenData(data);\n    }\n  }, [options]);\n\n  const handleClickParentOption = (option: OptionProps) => {\n    const data = option.children || [];\n    currentParent = option;\n    setChildrenData(data);\n    setActiveParent(option.key);\n    onChangeParentOption?.(option);\n  };\n\n  const handleClickChildrenOption = (option: OptionProps) => {\n    onChange?.([currentParent.key, option.key], `${currentParent.value} ${option.value}`);\n  };\n\n  return (\n    <View className={prefixCls} style={style}>\n      <View className={`${prefixCls}-parent`}>\n        {parentData?.map((option, index) => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: activeParent === option.key,\n            })}\n            onTap={() => {\n              handleClickParentOption(option);\n            }}\n          >\n            {option.value}\n            {activeParent === option.key && index !== 0 ? (\n              <View className={`${prefixCls}-option-rounded_top`}>\n                <View className={`${prefixCls}-option-rounded_top-circle`} />\n              </View>\n            ) : null}\n            {activeParent === option.key ? (\n              <View className={`${prefixCls}-option-rounded_bottom`}>\n                <View className={`${prefixCls}-option-rounded_bottom-circle`} />\n              </View>\n            ) : null}\n          </View>\n        ))}\n      </View>\n      <View className={`${prefixCls}-children`}>\n        {childrenData?.map(option => (\n          <View\n            key={option.key}\n            className={classNames({\n              [`${prefixCls}-option`]: true,\n              [`${prefixCls}-active`]: value?.[1] === option.key,\n            })}\n            onTap={() => {\n              handleClickChildrenOption(option);\n            }}\n          >\n            {option.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Selector;\n"},"selector-popup/index.tsx":{path:"./selector-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Popup from '../popup';\nimport Selector from '../selector';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('selector-popup');\n\nexport interface SelectorPopupProps {\n  placeholder?: string;\n  children?: React.ReactNode;\n  title?: React.ReactNode;\n  onChange?: (value: any, valueStr?: string) => void;\n  [restProps: string]: any;\n}\n\nconst SelectorPopup = (props: SelectorPopupProps) => {\n  const { placeholder, children, title, onChange } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleTap = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleChange = (value: any, valueStr?: string) => {\n    onChange?.(value, valueStr);\n    handleClose();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{children}</FormValue>\n      </View>\n      <Popup title={title} closeable open={show} onClose={handleClose}>\n        <View className={`${prefixCls}-container`}>\n          <Selector\n            {...props}\n            style={{\n              height: '540px',\n            }}\n            onChange={handleChange}\n          />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default SelectorPopup;\n"},"popup/index.tsx":{path:"../popup",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport Mask from '../mask';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('popup');\n\nexport interface PopupProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  closeable?: boolean;\n  title?: React.ReactNode;\n  position?: string;\n  style?: React.CSSProperties;\n  mask?: boolean;\n  square?: boolean;\n  curve?: string;\n}\n\nconst Popup = (props: PopupProps): React.ReactElement => {\n  const {\n    open = false,\n    children,\n    onClose,\n    closeable,\n    title,\n    position = 'bottom',\n    style,\n    mask = true,\n    square,\n    curve,\n  } = props;\n\n  const handleClickMask = () => {\n    onClose?.();\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-container`]: true,\n          [`${prefixCls}-container-bottom`]: position === 'bottom',\n          [`${prefixCls}-container-top`]: position === 'top',\n          [`${prefixCls}-container-left`]: position === 'left',\n          [`${prefixCls}-container-right`]: position === 'right',\n          [`${prefixCls}-container-ease`]: curve === 'ease',\n          [`${prefixCls}-container-square`]: square,\n          [`${prefixCls}-container-active`]: open,\n        })}\n        style={style}\n      >\n        {title ? <View className={`${prefixCls}-container-title`}>{title}</View> : null}\n        {children}\n        {closeable ? (\n          <View\n            className={`${prefixCls}-container-close`}\n            onTap={() => {\n              onClose?.();\n            }}\n          >\n            <Icon type=\"close\" size=\"40px\" color=\"#999\" />\n          </View>\n        ) : null}\n      </View>\n      {mask ? <Mask show={open} onTap={handleClickMask} /> : null}\n    </View>\n  );\n};\n\nexport default Popup;\n"},"mask/index.tsx":{path:"../mask",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('mask');\n\nexport interface MaskProps {\n  show?: boolean;\n  onTap?: () => void;\n  zIndex?: number;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n}\n\nconst Mask = (props: MaskProps): React.ReactElement => {\n  const { show, onTap, zIndex, style, children } = props;\n  const maskZindex = zIndex || zIndex === 0 ? zIndex : 999;\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}_active`]: show,\n      })}\n      style={{\n        ...style,\n        zIndex: maskZindex,\n      }}\n      onTap={onTap}\n    >\n      {children}\n    </View>\n  );\n};\n\nexport default Mask;\n"},"filter/index.ts":{path:"./filter",content:"/** @format */\n\nimport InternalFilter from './filter';\nimport Item from './item';\n\ntype InternalFilter = typeof InternalFilter;\ninterface Filter extends InternalFilter {\n  Item: typeof Item;\n}\n\nconst Filter: Filter = InternalFilter as Filter;\n\nFilter.Item = Item;\n\nexport default Filter;\n"},"filter.tsx":{path:"./filter",content:"/** @format */\n\nimport React, { useState, useRef } from 'react';\nimport { View } from 'remax/one';\nimport Mask from '../mask';\nimport FilterItem from './item';\nimport { getPrefixCls } from '../common';\nimport './filter.scss';\n\nconst prefixCls = getPrefixCls('filter');\n\nexport interface FilterProps {\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  zIndex?: number;\n}\n\nconst InternalFilter = (props: FilterProps) => {\n  const filterRef = useRef<any[]>([]);\n  const { style, zIndex, children } = props;\n  const [showMask, setShowMask] = useState(false);\n\n  const hanldeShowMask = (value: boolean) => {\n    setShowMask(value);\n  };\n\n  const handleTapItem = (value: boolean, index: number, tapCb: () => void) => {\n    filterRef.current.forEach((item, cindex) => {\n      if (index !== cindex) {\n        item.current.close();\n      }\n    });\n    if (value) {\n      setShowMask(true);\n    } else {\n      setShowMask(false);\n    }\n    tapCb?.();\n  };\n\n  const hanldeTapMask = () => {\n    filterRef.current.forEach(item => {\n      item.current.close();\n    });\n    setShowMask(false);\n  };\n\n  const filterItems = React.Children.map(children, (filterItem: any, index: number) => {\n    const itemRef = useRef();\n    filterRef.current[index] = itemRef;\n    if (filterItem.ref) {\n      filterRef.current[index] = filterItem.ref;\n    }\n    return (\n      <FilterItem\n        {...filterItem.props}\n        ref={filterRef.current[index]}\n        onTap={v => handleTapItem(v, index, filterItem.props?.onTap)}\n        onShowMask={hanldeShowMask}\n        id={index}\n      />\n    );\n  });\n\n  const isAddZIndex = zIndex || zIndex === 0;\n  let filterStyle = style;\n  if (isAddZIndex) {\n    filterStyle = {\n      ...style,\n      zIndex,\n    };\n  }\n\n  return (\n    <View className={prefixCls} style={filterStyle}>\n      <View className={`${prefixCls}-content`} style={{ height: showMask ? '100%' : '100px' }}>\n        <View className={`${prefixCls}-items`}>{filterItems}</View>\n      </View>\n      <Mask\n        show={showMask}\n        onTap={hanldeTapMask}\n        style={{\n          top: 'unset',\n          bottom: 'unset',\n          height: '100%',\n        }}\n        zIndex={0}\n      />\n    </View>\n  );\n};\n\nexport default InternalFilter;\n\n// {/* mask\u5fc5\u987b\u653e\u5230items\u7684\u540e\u9762,\u5426\u5219\u4f1a\u5bfc\u81f4\u52a8\u753btransition\u5931\u6548 */}\n"},"item.tsx":{path:"./item",content:"/** @format */\n\nimport React, { useImperativeHandle, useState } from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport { ScrollView } from '../one/base';\nimport Dropdown, { OptionProps } from '../dropdown';\nimport Popup from '../popup';\nimport { getPrefixCls } from '../common';\nimport './item.scss';\n\nconst prefixCls = getPrefixCls('filter-item');\n\nexport interface ItemProps {\n  title?: string;\n  height?: string;\n  onTap?: (open: boolean) => void;\n  onShowMask?: (show: boolean) => void;\n  children?: React.ReactNode;\n  value?: string;\n  options?: OptionProps[];\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n  disabled?: boolean;\n}\n\nconst Item = (props: ItemProps, ref: any): React.ReactElement => {\n  const {\n    title,\n    onTap,\n    children,\n    onShowMask,\n    value,\n    options = [],\n    onChange,\n    activeColor,\n    disabled,\n  } = props;\n  const [open, setOpen] = useState(false);\n  // const [height, setHeight] = useState(\"0\");\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      toggle() {\n        setOpen(state => {\n          if (state) {\n            setTimeout(() => {\n              onShowMask?.(false);\n            });\n          } else {\n            setTimeout(() => {\n              onShowMask?.(true);\n            });\n          }\n          return !state;\n        });\n      },\n      open() {\n        setOpen(true);\n      },\n      close() {\n        setOpen(false);\n      },\n    }),\n    [],\n  );\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setOpen(state => !state);\n    onTap?.(!open);\n  };\n\n  const handleChange = (e: OptionProps) => {\n    onChange?.(e);\n    setOpen(false);\n    onShowMask?.(false);\n  };\n\n  // React.useEffect(() => {\n  //   wx.createSelectorQuery()\n  //   .select(`#anna-filter-item-${id}`)\n  //   .boundingClientRect((rect: any) => {\n  //     setHeight(`${rect.height * 2}px`);\n  //   })\n  //   .exec()\n  // }, [])\n\n  return (\n    <View className={prefixCls}>\n      <View style={{ backgroundColor: '#FDFFFD' }}>\n        <View\n          className={classNames({\n            [`${prefixCls}-label`]: true,\n            [`${prefixCls}-label-disabled`]: disabled,\n          })}\n          onTap={handleTap}\n        >\n          <Text className={`${prefixCls}-label-text`}>\n            {options?.find(option => option.key === value)?.value || title}\n          </Text>\n          {open ? (\n            <Text className={`${prefixCls}-label-chevronUp`} />\n          ) : (\n            <Text className={`${prefixCls}-label-chevronDown`} />\n          )}\n        </View>\n      </View>\n      <Popup\n        square\n        curve=\"ease\"\n        mask={false}\n        open={open}\n        style={{\n          position: 'absolute',\n          zIndex: -1,\n          transform: open ? 'translate3d(0, 100%, 0)' : 'translate3d(0, 0, 0)',\n        }}\n      >\n        <ScrollView\n          scrollY\n          className={classNames({\n            [`${prefixCls}-value`]: true,\n          })}\n        >\n          {children ? (\n            children\n          ) : (\n            <Dropdown\n              value={value}\n              options={options}\n              onChange={handleChange}\n              activeColor={activeColor}\n            />\n          )}\n        </ScrollView>\n      </Popup>\n    </View>\n  );\n};\n\nexport default React.forwardRef(Item);\n"},"dropdown/index.tsx":{path:"../dropdown",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('dropdown');\n\nexport interface OptionProps {\n  key: string;\n  value: string;\n}\n\nexport interface DropdownProps {\n  options?: OptionProps[];\n  value?: string;\n  activeColor?: string;\n  onChange?: (e: OptionProps) => void;\n}\n\nconst Dropdown = (props: DropdownProps) => {\n  const { options = [], value, activeColor = '#1890FF', onChange } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-content`}>\n        {options.map(item => (\n          <View\n            className={`${prefixCls}-content-option`}\n            key={item.key}\n            onTap={() => onChange?.(item)}\n            style={\n              item.key === value\n                ? {\n                    color: activeColor,\n                    fontWeight: 500,\n                  }\n                : undefined\n            }\n          >\n            {item.value}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Dropdown;\n"},"item.scss":{path:"./item.scss",content:"@import '../style/index.scss';\n\n$filter-item-prefix-cls: #{$anna-prefix}-filter-item;\n\n.#{$filter-item-prefix-cls} {\n  overflow: hidden;\n  flex: 1;\n  &-label{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    font-size: 24px;\n    color: #333;\n    background-color: #FDFFFD;\n    &-disabled{\n      opacity: 0.4;\n    }\n    &-text{\n      margin-right: 10px;\n    }\n    &-chevronUp{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 10px solid #CCCCCC;\n    }\n    &-chevronDown{\n      width: 0;\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 10px solid #CCCCCC;\n    }\n  }\n  &-value{\n    // position: absolute;\n    // left: 0;\n    // right: 0;\n    // bottom: 0;\n    // overflow: hidden;\n    // transition: transform 0.2s ease;\n    // transform: translate3d(0, 0, 0);\n    background-color: $view-bg-color;\n    max-height: 80vh;\n    z-index: -1;\n  }\n}"},"filter.scss":{path:"./filter.scss",content:"@import '../style/index.scss';\n\n$filter-prefix-cls: #{$anna-prefix}-filter;\n\n.#{$filter-prefix-cls} {\n  position: relative;\n  z-index: 999;\n  height: 100px;\n  &-items{\n    position: relative;\n    display: flex;\n  }\n  &-content{\n    z-index: 1;\n    position: fixed;\n    top: unset;\n    bottom: unset;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    transition: height 0.3s ease;\n  }\n}"},"cascade/index.tsx":{path:"./cascade",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport { ScrollView } from '../one/base';\nimport { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade');\n\nexport interface CascadeProps {\n  name?: string;\n  value: any[];\n  options: any[];\n  height?: string;\n  className?: string;\n  prompt?: (e: any) => string;\n  onChange: (v: any[], last?: any) => void;\n  onComplete?: (v: any[], last?: any) => void;\n}\n\nlet flag = false;\nconst Cascade = (props: CascadeProps) => {\n  const {\n    name,\n    value = [],\n    options = [],\n    height = '80vh',\n    className = '',\n    prompt,\n    onChange,\n    onComplete,\n  } = props;\n\n  const [showedOptions, setShowedOptions] = useState(options);\n  const [sign, setSign] = useState(false);\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // useEffect(() => {\n  //   if (options && options.length > 0) {\n  //     setShowedOptions(options);\n  //   }\n  // }, [options]) // \u65e0\u6cd5\u4f7f\u7528\u6b64 useEffect\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519\u3002\n\n  useEffect(() => {\n    if (sign && value.length > 0 && flag) {\n      setSign(false);\n      flag = false;\n      const item = value[value.length - 1];\n      onComplete?.(value, {\n        key: item.key,\n        value: item.value,\n      });\n    }\n  }, [value, sign]);\n\n  const handleClick = async (i: any) => {\n    let nextValue = [];\n    const nextOption = {\n      key: i.key,\n      value: i.value,\n      parentKey: i.parentKey,\n    };\n    if (value.length > 0 && value[value.length - 1].parentKey === i.parentKey) {\n      nextValue = [...value.slice(0, value.length - 1), nextOption];\n    } else {\n      nextValue = [...value, nextOption];\n    }\n    onChange(nextValue, nextOption);\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n    if (i.children) {\n      setShowedOptions(i.children);\n    }\n    if (!i.children) {\n      flag = true;\n      setSign(true);\n    }\n  };\n\n  const getMatchLevelOptions = (id: string, data: any[]): any => {\n    let r = null;\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (id === item.id) {\n        r = data;\n      } else if (item.children) {\n        r = getMatchLevelOptions(id, item.children);\n      }\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  };\n\n  const handleReChoose = (item: any, index: number) => {\n    onChange(value.slice(0, index + 1));\n    setShowedOptions(getMatchLevelOptions(item.id, options));\n    setScrollTop(top => {\n      return top === 0 ? 1 : 0;\n    });\n  };\n\n  const h = value.length > 1 ? 90 * value.length + 40 - 30 : 130;\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [className]: true,\n      })}\n      style={{\n        height,\n      }}\n    >\n      <View className={`${prefixCls}-selected-options`}>\n        {value.map((item, index) => (\n          <View\n            key={item.key}\n            className={`${prefixCls}-selected-options-step`}\n            onTap={() => {\n              handleReChoose(item, index);\n            }}\n          >\n            <View className={`${prefixCls}-selected-options-step-line`}>\n              {index === value.length - 1 ? null : (\n                <View className={`${prefixCls}-selected-options-step-line-dot_line_active`} />\n              )}\n              <Text\n                className={`${prefixCls}-selected-options-step-line-dot`}\n                style={{ backgroundColor: '#1890FF' }}\n              />\n            </View>\n            <View className={`${prefixCls}-selected-options-step-container`}>\n              <View className={`${prefixCls}-selected-options-step-container-content`}>\n                <View className={`${prefixCls}-selected-options-step-container-content-main`}>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-left`}\n                  >\n                    {item.value}\n                  </View>\n                  <View\n                    className={`${prefixCls}-selected-options-step-container-content-main-right`}\n                  >\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-text`}\n                    >\n                      {prompt?.(index)}\n                    </View>\n                    <View\n                      className={`${prefixCls}-selected-options-step-container-content-main-right-arrow`}\n                    >\n                      <Icon type=\"right\" size=\"24px\" color=\"#999\" />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        ))}\n      </View>\n      <View>\n        <ScrollView\n          scrollY\n          className={`${prefixCls}-showed-options`}\n          scrollTop={scrollTop}\n          style={{\n            height: `calc(${height} - ${h + 80}px)`,\n          }}\n        >\n          <View className={`${prefixCls}-showed-options-title`}>{`\u9009\u62e9${name}`}</View>\n          {showedOptions.map(i => (\n            <View\n              key={i.key}\n              className={`${prefixCls}-showed-options-category`}\n              onTap={() => {\n                handleClick(i);\n              }}\n            >\n              {i.value}\n            </View>\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Cascade;\n"},"rate/index.tsx":{path:"./rate",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('rate');\n\nexport interface RateProps {\n  count?: number;\n  label?: React.ReactNode;\n  value?: number;\n  readOnly?: boolean;\n  icon?: string;\n  iconFill?: string;\n  size?: string;\n  color?: string;\n  onChange?: (e: any) => void;\n}\n\nconst Rate = (props: RateProps) => {\n  const {\n    count = 5,\n    label,\n    value = 0,\n    onChange,\n    readOnly,\n    icon = 'favor',\n    iconFill = 'favorfill',\n    size = '48px',\n    color = '#FFD700',\n  } = props;\n\n  const handleClick = (index: number) => {\n    if (readOnly) {\n      return;\n    }\n    onChange?.(index + 1);\n  };\n\n  const stars = useMemo(() => {\n    if (!count) {\n      return [];\n    }\n    return [...new Array(count).keys()];\n  }, [count]);\n\n  return (\n    <View className={prefixCls}>\n      {label ? <View className={`${prefixCls}-label`}>{label}</View> : null}\n      <View className={`${prefixCls}-value`}>\n        {stars.map((item, index) => (\n          <View\n            key={index}\n            className={`${prefixCls}-value-star`}\n            onTap={() => {\n              handleClick(index);\n            }}\n          >\n            {value >= index + 1 ? (\n              <Icon type={iconFill} size={size} color={color} />\n            ) : (\n              <Icon type={icon} size={size} color=\"#999\" />\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default Rate;\n"},"tabs/index.tsx":{path:"./tabs",content:"/** @format */\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tabs');\n\nexport interface TabTitleProps {\n  key?: string;\n  title?: string;\n}\n\nexport interface TabProps {\n  type?: string;\n  tabs?: TabTitleProps[];\n  activeTab?: string;\n  fixed?: boolean;\n  onTabClick?: (i: any) => void;\n  headerContent?: React.ReactNode;\n  children?: React.ReactNode;\n  headerStyle?: React.CSSProperties;\n  extra?: React.ReactNode;\n  titleWidth?: number;\n  titleSquare?: boolean;\n}\n\nexport interface TabContentProps {\n  tabId?: string;\n  activeTab?: string;\n  children?: React.ReactNode;\n}\n\nconst Tabs = (props: TabProps): React.ReactElement => {\n  const {\n    type,\n    tabs = [],\n    activeTab,\n    fixed,\n    onTabClick,\n    headerContent,\n    children,\n    headerStyle,\n    extra,\n    titleWidth,\n    titleSquare,\n  } = props;\n\n  const getTabIndex = () => {\n    let tIndex = 0;\n    tabs.forEach((i: any, index: number) => {\n      if (i.key === activeTab) {\n        tIndex = index;\n      }\n    });\n    return tIndex;\n  };\n\n  const curIndex = useMemo(() => getTabIndex(), [activeTab, tabs]);\n  const fixedStyle = useMemo(() => {\n    return fixed\n      ? ({\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9,\n        } as React.CSSProperties)\n      : null;\n  }, [fixed]);\n\n  const handleTabClick = (item: any) => {\n    onTabClick?.(item);\n  };\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={`${prefixCls}-header`}\n        style={{\n          ...fixedStyle,\n          ...headerStyle,\n        }}\n      >\n        {type !== 'card' && type !== 'plain' ? (\n          <View className={`${prefixCls}-header-titles`}>\n            <View\n              className={classNames({\n                [`${prefixCls}-header-titles-bg`]: true,\n                [`${prefixCls}-header-titles-bg-square`]: titleSquare,\n              })}\n            >\n              <View className={`${prefixCls}-header-titles-bg-container`}>\n                {tabs.map((item: TabTitleProps) => (\n                  <View\n                    key={item.key}\n                    className={`${prefixCls}-header-titles-bg-container-title`}\n                    style={{\n                      fontWeight: activeTab === item.key ? 500 : 400,\n                      width: titleWidth ? `${titleWidth}px` : null,\n                    }}\n                    onTap={() => {\n                      handleTabClick(item);\n                    }}\n                  >\n                    {item.title}\n                  </View>\n                ))}\n                <View\n                  className={`${prefixCls}-header-titles-bg-container-active`}\n                  style={{\n                    width: `${100 / tabs.length}%`,\n                    transform: `translateX(${curIndex * 100}%)`,\n                  }}\n                />\n              </View>\n            </View>\n            {extra}\n          </View>\n        ) : null}\n        {type === 'plain' ? (\n          <View className={`${prefixCls}-header-titles-plain`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-plain-title`]: true,\n                  [`${prefixCls}-header-titles-plain-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        {type === 'card' ? (\n          <View className={`${prefixCls}-header-titles-card`}>\n            {tabs.map((item: TabTitleProps) => (\n              <View\n                key={item.key}\n                className={classNames({\n                  [`${prefixCls}-header-titles-card-title`]: true,\n                  [`${prefixCls}-header-titles-card-title-active`]: activeTab === item.key,\n                })}\n                onTap={() => {\n                  handleTabClick(item);\n                }}\n              >\n                {item.title}\n              </View>\n            ))}\n          </View>\n        ) : null}\n        <View className={`${prefixCls}-header-content`}>{headerContent}</View>\n      </View>\n      <View className={`${prefixCls}-content`}>{children}</View>\n    </View>\n  );\n};\n\nconst TabContent: React.FC = (props: TabContentProps): React.ReactElement | null => {\n  const { tabId, activeTab, children } = props;\n\n  if (activeTab !== tabId) {\n    return null;\n  }\n  return <View>{children}</View>;\n};\n\nTabs.TabContent = TabContent;\n\nexport default Tabs;\n"},"steps/index.tsx":{path:"./steps",content:"/** @format */\n\nimport * as React from 'react';\nimport { View, Text } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('steps');\n\nexport interface StepProps {\n  title?: React.ReactNode;\n  errorTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  description?: React.ReactNode;\n}\n\nexport interface StepsProps {\n  current?: number;\n  status?: string;\n  direction?: string;\n  steps?: StepProps[];\n}\n\nconst Steps = (props: StepsProps): React.ReactElement => {\n  const { direction = 'horizontal', current = 0, steps, status } = props;\n  const statusIconType = status === 'error' ? 'roundclosefill' : 'roundcheckfill';\n  const statusIconColor = status === 'error' ? '#f5222d' : '#1890FF';\n\n  const getTitle = (item: StepProps, index: number) => {\n    if (index === current) {\n      if (status === 'error') {\n        return item.errorTitle || item.title;\n      }\n    }\n    return item.title;\n  };\n\n  if (direction === 'vertical') {\n    return (\n      <View className={prefixCls}>\n        {/* <View className={`${prefixCls}-first_step`}>\n          <View className={styles.line} />\n        </View> */}\n        {steps?.map((item, index) => (\n          <View key={index} className={`${prefixCls}-step`}>\n            {index === 0 ? (\n              <View className={`${prefixCls}-circle_current`}>\n                <Text className={`${prefixCls}-circle_current-icon`}>\n                  <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" />\n                </Text>\n              </View>\n            ) : (\n              <View className={`${prefixCls}-circle`} />\n            )}\n            <View className={`${prefixCls}-line`} />\n            <View className={`${prefixCls}-step-header`}>\n              <View className={`${prefixCls}-step-header-title`}>{item.title}</View>\n              <View className={`${prefixCls}-step-header-extra`}>{item.extra}</View>\n            </View>\n            <View className={`${prefixCls}-step-description`}>{item.description}</View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  return (\n    <View className={`${prefixCls}_horizontal`}>\n      {steps?.map((item, index) => (\n        <View\n          key={index}\n          className={classNames({\n            [`${prefixCls}_horizontal-step`]: true,\n            [`${prefixCls}_horizontal-step-finish`]: index <= current - 1,\n          })}\n        >\n          <View className={`${prefixCls}_horizontal-step-container`}>\n            <View className={`${prefixCls}_horizontal-step-container-icon`}>\n              {index < current ? <Icon type=\"roundcheckfill\" size=\"40px\" color=\"#1890FF\" /> : null}\n              {index === current ? (\n                <Icon type={statusIconType} size=\"40px\" color={statusIconColor} />\n              ) : null}\n              {index > current ? (\n                <View className={`${prefixCls}_horizontal-step-container-icon-default`}>\n                  <View />\n                </View>\n              ) : null}\n            </View>\n            <View className={`${prefixCls}_horizontal-step-container-content`}>\n              <View className={`${prefixCls}_horizontal-step-container-content-title`}>\n                {getTitle(item, index)}\n              </View>\n            </View>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Steps;\n"},"tag/index.tsx":{path:"./tag",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport classNames from 'classnames';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('tag');\n\nexport interface TagProps {\n  type?: string;\n  size?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  children?: React.ReactNode;\n  onTap?: () => void;\n}\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { type, size, className = '', style, children, onTap } = props;\n\n  return (\n    <View className={prefixCls}>\n      <View\n        className={classNames({\n          [`${prefixCls}-default`]: true,\n          [`${prefixCls}-small`]: size === 'small',\n          [`${prefixCls}-large`]: size === 'large',\n          [`${prefixCls}-info`]: type === 'info',\n          [`${prefixCls}-success`]: type === 'success',\n          [`${prefixCls}-error`]: type === 'error',\n          [className]: true,\n        })}\n        style={style}\n        onTap={onTap}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport interface CheckableTagProps {\n  className?: string;\n  checked?: boolean;\n  onChange?: (e: any) => void;\n  children?: React.ReactNode;\n}\n\nTag.CheckableTag = (props: CheckableTagProps) => {\n  const { className = '', checked, onChange, children } = props;\n\n  return (\n    <Tag\n      size=\"large\"\n      {...props}\n      className={classNames({\n        [`${prefixCls}-checked`]: checked,\n        [className]: true,\n      })}\n      onTap={() => {\n        onChange?.(!checked);\n      }}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nexport default Tag;\n"},"result/index.tsx":{path:"./result",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('result');\n\nconst getIconNameByStatus = (status: any): any => {\n  let obj = {\n    name: 'infofill',\n    color: '#1890ff',\n  };\n  switch (status) {\n    case 'info':\n      obj = {\n        name: 'infofill',\n        color: '#1890ff',\n      };\n      break;\n    case 'success':\n      obj = {\n        name: 'roundcheckfill',\n        color: '#52c41a',\n      };\n      break;\n    case 'warning':\n      obj = {\n        name: 'warnfill',\n        color: '#faad14',\n      };\n      break;\n    case 'error':\n      obj = {\n        name: 'roundclosefill',\n        color: '#f5222d',\n      };\n      break;\n    default:\n      break;\n  }\n  return obj;\n};\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n}\n\nexport interface ResultProps {\n  status?: string;\n  title?: React.ReactNode;\n  subTitle?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode | IconProps;\n  height?: string;\n}\n\nconst Result = (props: ResultProps) => {\n  const { status = 'info', title, subTitle, extra, children, icon, height } = props;\n\n  let isCustomIcon = false;\n  let iconObj = getIconNameByStatus(status);\n  if (icon) {\n    if (Object.prototype.toString.call(icon) === '[object Object]') {\n      iconObj = icon;\n    } else {\n      isCustomIcon = true;\n    }\n  }\n\n  return (\n    <View className={prefixCls} style={{ height: height || '100vh' }}>\n      <View className={`${prefixCls}-icon`}>\n        {isCustomIcon ? (\n          icon\n        ) : (\n          <View className={`${prefixCls}-icon-status`}>\n            <Icon type={iconObj.name} color={iconObj.color} size=\"168px\" />\n          </View>\n        )}\n      </View>\n      <View className={`${prefixCls}-title`}>{title}</View>\n      <View className={`${prefixCls}-sub_title`}>{subTitle}</View>\n      {children ? <View className={`${prefixCls}-content`}>{children}</View> : null}\n      <View className={`${prefixCls}-extra`}>{extra}</View>\n    </View>\n  );\n};\n\nexport default Result;\n"},"card/index.tsx":{path:"./card",content:"/** @format */\n\nimport * as React from 'react';\nimport { View } from 'remax/one';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('card');\n\nexport interface CardProps {\n  title?: React.ReactNode;\n  extra?: React.ReactNode;\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n}\n\nconst Card = (props: CardProps) => {\n  const { title, extra, children, style, contentStyle } = props;\n  return (\n    <View className={prefixCls} style={style}>\n      {title || extra ? (\n        <View className={`${prefixCls}-header`}>\n          <View className={`${prefixCls}-header-title`}>{title}</View>\n          <View className={`${prefixCls}-header-extra`}>{extra}</View>\n        </View>\n      ) : null}\n      <View\n        className={`${prefixCls}-content`}\n        style={{\n          paddingTop: title || extra ? 0 : '24px',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default Card;\n"},"search-bar/index.tsx":{path:"./search-bar",content:"/** @format */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { View, Input } from 'remax/one';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('search_bar');\n\nexport interface SearchBarProps {\n  value?: string;\n  placeholder?: string;\n  onInput?: (value: string) => void;\n  onClear?: (value: any) => void;\n  onActionClick?: () => void;\n  onFocus?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onSubmit?: (value: string) => void;\n  inputStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  focus?: boolean;\n  actionName?: string;\n  keepShowActionButton?: boolean;\n  hideActionButton?: boolean;\n  size?: string;\n}\n\nlet showBtn = false;\nconst SearchBar = (props: SearchBarProps) => {\n  const {\n    value,\n    placeholder,\n    onInput,\n    onClear,\n    onFocus,\n    onBlur,\n    onActionClick,\n    onSubmit,\n    inputStyle,\n    style,\n    focus,\n    actionName = '\u53d6\u6d88',\n    keepShowActionButton,\n    hideActionButton,\n    size,\n  } = props;\n\n  const [isFocus, setIsFocus] = useState(false);\n\n  const handleFocus = (e: any) => {\n    onFocus?.(e);\n    setIsFocus(true);\n  };\n\n  const handleBlur = (e: any) => {\n    onBlur?.(e);\n    setIsFocus(false);\n  };\n\n  const handleInput = (e: any) => {\n    onInput?.(e.target.value);\n  };\n\n  const handleClear = () => {\n    onClear?.(value);\n  };\n\n  const handleActionClick = () => {\n    showBtn = false;\n    onActionClick?.();\n  };\n\n  const handleConfirm = (e: any) => {\n    onSubmit?.(e.target.value);\n  };\n\n  const active = isFocus || value || focus;\n  if (active && !showBtn) {\n    showBtn = true;\n  }\n\n  let iconSize = '32px';\n  if (size === 'large') {\n    iconSize = '36px';\n  }\n  if (size === 'small') {\n    iconSize = '28px';\n  }\n\n  return (\n    <View\n      className={classNames({\n        [prefixCls]: true,\n        [`${prefixCls}-large`]: size === 'large',\n        [`${prefixCls}-small`]: size === 'small',\n      })}\n      style={style}\n    >\n      <View className={`${prefixCls}-input`} style={inputStyle}>\n        <View\n          className={classNames({\n            [`${prefixCls}-input-synthetic`]: true,\n            [`${prefixCls}-input-is_left`]: active,\n          })}\n        >\n          <View className={`${prefixCls}-input-synthetic-icon`}>\n            <Icon type=\"search\" size={`${iconSize}px`} color=\"#999\" />\n          </View>\n          <View\n            className={`${prefixCls}-input-synthetic-placeholder`}\n            style={{\n              visibility: active ? 'hidden' : 'visible',\n            }}\n          >\n            {placeholder}\n          </View>\n        </View>\n        <Input\n          className={`${prefixCls}-input-value`}\n          // @ts-ignore\n          type=\"search\"\n          value={value}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onInput={handleInput}\n          onConfirm={handleConfirm}\n          focus={focus}\n        />\n        <View className={`${prefixCls}-input-clear`} onTap={handleClear}>\n          <Icon\n            type=\"roundclosefill\"\n            size={`${iconSize}`}\n            color=\"#999\"\n            style={{\n              visibility: value ? 'visible' : 'hidden',\n            }}\n          />\n        </View>\n      </View>\n      {!hideActionButton ? (\n        <View\n          className={classNames({\n            [`${prefixCls}-action_button`]: true,\n            [`${prefixCls}-show_action_button`]: keepShowActionButton ? true : active,\n          })}\n          onTap={handleActionClick}\n        >\n          {actionName}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nexport default SearchBar;\n"},"cascade-popup/index.tsx":{path:"./cascade-popup",content:"import * as React from 'react';\nimport { useState } from 'react';\nimport { View } from 'remax/one';\nimport Cascade from '../cascade';\nimport Loading from '../loading';\nimport Popup from '../popup';\nimport Icon from '../icon';\nimport FormValue from '../form-value';\nimport { getPrefixCls } from '../common';\nimport './index.scss';\n\nconst prefixCls = getPrefixCls('cascade-popup');\n\nexport interface CascadePopupProps {\n  name?: string;\n  value: any[];\n  text?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  options: any[];\n  prompt?: (e: any) => string;\n  onChange: (e: any, v: any) => void;\n  onComplete?: (e: any, values?: any[]) => void;\n}\n\nconst CascadePopup = (props: CascadePopupProps) => {\n  const { value, text, disabled, placeholder, options, onComplete } = props;\n\n  const [show, setShow] = useState(false);\n\n  const handleComplete = (value: any, values?: any[]) => {\n    onComplete?.(value, values);\n    setShow(false);\n  };\n\n  const handleTap = () => {\n    if (disabled) {\n      return;\n    }\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  if (!options || options.length === 0) {\n    return (\n      <View className={prefixCls}>\n        <View className={`${prefixCls}-loading`}>\n          <Loading />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View className={prefixCls}>\n      <View className={`${prefixCls}-formitem`} onTap={handleTap}>\n        <FormValue placeholder={placeholder}>{text || value?.map(i => i.name).join(' ')}</FormValue>\n      </View>\n      <Popup open={show}>\n        <View className={`${prefixCls}-container`}>\n          <View className={`${prefixCls}-container-header`}>\n            <View>\u8bf7\u9009\u62e9</View>\n            <View className={`${prefixCls}-container-header-close`} onTap={handleClose}>\n              <Icon type=\"close\" color=\"#999\" />\n            </View>\n          </View>\n          <Cascade {...props} onComplete={handleComplete} />\n        </View>\n      </Popup>\n    </View>\n  );\n};\n\nexport default CascadePopup;\n"},"index.module.scss":{path:"./index.module.scss",content:"\n.remarks{\n  padding-top: 20px !important;\n}"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("h4",{id:"checkbox-1"},o.a.createElement("a",{"aria-hidden":"true",href:"#checkbox-1"},o.a.createElement("span",{className:"icon icon-link"})),"Checkbox"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"checked"),o.a.createElement("td",null,"\u6307\u5b9a\u5f53\u524d\u662f\u5426\u9009\u4e2d"),o.a.createElement("td",null,"boolean"),o.a.createElement("td",null,o.a.createElement("code",null,"false"))),o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u6839\u636e value \u8fdb\u884c\u6bd4\u8f83\uff0c\u5224\u65ad\u662f\u5426\u9009\u4e2d"),o.a.createElement("td",null,"any"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"extra"),o.a.createElement("td",null,"Checkbox\u4e0b\u65b9\u6dfb\u52a0\u7684\u5176\u4ed6\u4fe1\u606f"),o.a.createElement("td",null,"ReactNode"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"style"),o.a.createElement("td",null,"\u81ea\u5b9a\u4e49Checkbox\u6837\u5f0f"),o.a.createElement("td",null,"CSSProperties"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"Checkbox\u53d8\u5316\u65f6\u7684\u56de\u8c03\u51fd\u6570"),o.a.createElement("td",null,"(e: any, v: any) => void"),o.a.createElement("td",null,"-")))),o.a.createElement("h4",{id:"checkboxgroup"},o.a.createElement("a",{"aria-hidden":"true",href:"#checkboxgroup"},o.a.createElement("span",{className:"icon icon-link"})),"Checkbox.Group"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",null,"\u5c5e\u6027"),o.a.createElement("th",null,"\u8bf4\u660e"),o.a.createElement("th",null,"\u7c7b\u578b"),o.a.createElement("th",null,"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",null,"value"),o.a.createElement("td",null,"\u7528\u4e8e\u8bbe\u7f6e\u5f53\u524d\u9009\u4e2d\u7684\u503c"),o.a.createElement("td",null,"any"),o.a.createElement("td",null,"-")),o.a.createElement("tr",null,o.a.createElement("td",null,"direction"),o.a.createElement("td",null,"Group\u91cc\u7684Checkbox\u7684\u6392\u5217\u65b9\u5411"),o.a.createElement("td",null,"string"),o.a.createElement("td",null,o.a.createElement("code",null,"row"))),o.a.createElement("tr",null,o.a.createElement("td",null,"onChange"),o.a.createElement("td",null,"\u9009\u9879\u53d8\u5316\u65f6\u7684\u56de\u8c03\u51fd\u6570"),o.a.createElement("td",null,"(e: any, v: any) => void"),o.a.createElement("td",null,"-"))))))}},tny8:function(n,e,t){var r=t("MVys");n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},tr8V:function(n,e,t){},"u+7+":function(n,e,t){var r,a=t("f1E4"),o=t("HctQ"),i=t("De94"),l=t("6ixQ"),s=t("yj7k"),c=t("8w+9"),p=t("CjUg"),u=">",d="<",m="prototype",f="script",h=p("IE_PROTO"),x=function(){},g=function(n){return d+f+u+n+d+"/"+f+u},y=function(n){n.write(g("")),n.close();var e=n.parentWindow.Object;return n=null,e},C=function(){var n,e=c("iframe"),t="java"+f+":";return e.style.display="none",s.appendChild(e),e.src=String(t),n=e.contentWindow.document,n.open(),n.write(g("document.F=Object")),n.close(),n.F},w=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(e){}w=r?y(r):C();var n=i.length;while(n--)delete w[m][i[n]];return w()};l[h]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(x[m]=a(n),t=new x,x[m]=null,t[h]=n):t=w(),void 0===e?t:o(t,e)}},u6Ie:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("7BAe"),l=t("jbR1"),s=t("IuhT");r({target:"Set",proto:!0,real:!0,forced:a},{find:function(n){var e=o(this),t=l(e),r=i(n,arguments.length>1?arguments[1]:void 0,3);return s(t,(function(n){if(r(n,n,e))return s.stop(n)}),void 0,!1,!0).result}})},u6eR:function(n,e,t){"use strict";var r=t("MMxC"),a=t("cT1L"),o=t("cTDu"),i=t("MVys"),l=t("R8iy"),s=[],c=s.sort,p=i((function(){s.sort(void 0)})),u=i((function(){s.sort(null)})),d=l("sort"),m=p||!u||!d;r({target:"Array",proto:!0,forced:m},{sort:function(n){return void 0===n?c.call(o(this)):c.call(o(this),a(n))}})},u93E:function(n,e){n.exports=Math.sign||function(n){return 0==(n=+n)||n!=n?n:n<0?-1:1}},uGHk:function(n,e,t){var r=t("Srjj"),a=t("De94"),o=a.concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,o)}},uMwj:function(n,e,t){"use strict";var r=t("MMxC"),a=t("uoF6"),o=t("Acmb"),i=t("g1ZG"),l=t("kiNa"),s=t("lz10"),c=t("NMFW"),p=t("2kyd"),u=t("Zcjx"),d=t("5yw/"),m=t("JXem"),f=m.IteratorPrototype,h=m.BUGGY_SAFARI_ITERATORS,x=p("iterator"),g="keys",y="values",C="entries",w=function(){return this};n.exports=function(n,e,t,p,m,v,b){a(t,e,p);var k,V,P,N=function(n){if(n===m&&$)return $;if(!h&&n in T)return T[n];switch(n){case g:return function(){return new t(this,n)};case y:return function(){return new t(this,n)};case C:return function(){return new t(this,n)}}return function(){return new t(this)}},R=e+" Iterator",S=!1,T=n.prototype,E=T[x]||T["@@iterator"]||m&&T[m],$=!h&&E||N(m),I="Array"==e&&T.entries||E;if(I&&(k=o(I.call(new n)),f!==Object.prototype&&k.next&&(u||o(k)===f||(i?i(k,f):"function"!=typeof k[x]&&s(k,x,w)),l(k,R,!0,!0),u&&(d[R]=w))),m==y&&E&&E.name!==y&&(S=!0,$=function(){return E.call(this)}),u&&!b||T[x]===$||s(T,x,$),d[e]=$,m)if(V={values:N(y),keys:v?$:N(g),entries:N(C)},b)for(P in V)(h||S||!(P in T))&&c(T,P,V[P]);else r({target:e,proto:!0,forced:h||S},V);return V}},ue5M:function(n,e,t){t("pW3P")},ujhg:function(n,e,t){var r=t("NMFW");n.exports=function(n,e,t){for(var a in e)r(n,a,e[a],t);return n}},ukPv:function(n,e,t){(function(e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof e&&e)||Function("return this")()}).call(this,t("Zeyf"))},uoF6:function(n,e,t){"use strict";var r=t("JXem").IteratorPrototype,a=t("u+7+"),o=t("HhvW"),i=t("kiNa"),l=t("5yw/"),s=function(){return this};n.exports=function(n,e,t){var c=e+" Iterator";return n.prototype=a(r,{next:o(1,t)}),i(n,c,!1,!0),l[c]=s,n}},uz3g:function(n,e,t){"use strict";var r=t("ujhg"),a=t("a5mf").getWeakData,o=t("f1E4"),i=t("tSXo"),l=t("igoe"),s=t("IuhT"),c=t("zv1X"),p=t("jtLI"),u=t("1aI8"),d=u.set,m=u.getterFor,f=c.find,h=c.findIndex,x=0,g=function(n){return n.frozen||(n.frozen=new y)},y=function(){this.entries=[]},C=function(n,e){return f(n.entries,(function(n){return n[0]===e}))};y.prototype={get:function(n){var e=C(this,n);if(e)return e[1]},has:function(n){return!!C(this,n)},set:function(n,e){var t=C(this,n);t?t[1]=e:this.entries.push([n,e])},delete:function(n){var e=h(this.entries,(function(e){return e[0]===n}));return~e&&this.entries.splice(e,1),!!~e}},n.exports={getConstructor:function(n,e,t,c){var u=n((function(n,r){l(n,u,e),d(n,{type:e,id:x++,frozen:void 0}),void 0!=r&&s(r,n[c],n,t)})),f=m(e),h=function(n,e,t){var r=f(n),i=a(o(e),!0);return!0===i?g(r).set(e,t):i[r.id]=t,n};return r(u.prototype,{delete:function(n){var e=f(this);if(!i(n))return!1;var t=a(n);return!0===t?g(e)["delete"](n):t&&p(t,e.id)&&delete t[e.id]},has:function(n){var e=f(this);if(!i(n))return!1;var t=a(n);return!0===t?g(e).has(n):t&&p(t,e.id)}}),r(u.prototype,t?{get:function(n){var e=f(this);if(i(n)){var t=a(n);return!0===t?g(e).get(n):t?t[e.id]:void 0}},set:function(n,e){return h(this,n,e)}}:{add:function(n){return h(this,n,!0)}}),u}}},"v+AA":function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t("f4X2"),o=t("IOv4");e["default"]=()=>r["createElement"](o["b"],{grayBg:!0},r["createElement"](o["a"],{title:"Type"},r["createElement"](o["c"],null,r["createElement"](o["d"],{name:"check"},r["createElement"](a["h"],{type:"check",size:"1.56rem"})),r["createElement"](o["d"],{name:"close"},r["createElement"](a["h"],{type:"close",size:"1.56rem"})),r["createElement"](o["d"],{name:"comment"},r["createElement"](a["h"],{type:"comment",size:"1.56rem"})),r["createElement"](o["d"],{name:"scan"},r["createElement"](a["h"],{type:"scan",size:"1.56rem"})),r["createElement"](o["d"],{name:"locationfill"},r["createElement"](a["h"],{type:"locationfill",size:"1.56rem"})),r["createElement"](o["d"],{name:"emojifill"},r["createElement"](a["h"],{type:"emojifill",size:"1.56rem"})))),r["createElement"](o["a"],{title:"Size"},r["createElement"](o["c"],null,r["createElement"](o["d"],{name:"72 px"},r["createElement"](a["h"],{type:"favorfill",size:"2.25rem"})),r["createElement"](o["d"],{name:"50 px"},r["createElement"](a["h"],{type:"favorfill",size:"1.56rem"})),r["createElement"](o["d"],{name:"default"},r["createElement"](a["h"],{type:"favorfill",size:"0.88rem"})))),r["createElement"](o["a"],{title:"Color"},r["createElement"](o["c"],null,r["createElement"](o["d"],{name:"#FF6666"},r["createElement"](a["h"],{type:"likefill",size:"1.56rem",color:"#FF6666"})),r["createElement"](o["d"],{name:"#FFCC33"},r["createElement"](a["h"],{type:"likefill",size:"1.56rem",color:"#FFCC33"})),r["createElement"](o["d"],{name:"default"},r["createElement"](a["h"],{type:"likefill",size:"1.56rem"})))))},"v/6r":function(n,e,t){var r=t("ssJt");r("Array")},"v0/P":function(n,e,t){var r=t("MMxC"),a=t("egz/"),o=Math.acosh,i=Math.log,l=Math.sqrt,s=Math.LN2,c=!o||710!=Math.floor(o(Number.MAX_VALUE))||o(1/0)!=1/0;r({target:"Math",stat:!0,forced:c},{acosh:function(n){return(n=+n)<1?NaN:n>94906265.62425156?i(n)+s:a(n-1+l(n-1)*l(n+1))}})},vO0A:function(n,e,t){"use strict";var r=t("YfKC").f,a=t("u+7+"),o=t("ujhg"),i=t("7BAe"),l=t("igoe"),s=t("IuhT"),c=t("uMwj"),p=t("ssJt"),u=t("tny8"),d=t("a5mf").fastKey,m=t("1aI8"),f=m.set,h=m.getterFor;n.exports={getConstructor:function(n,e,t,c){var p=n((function(n,r){l(n,p,e),f(n,{type:e,index:a(null),first:void 0,last:void 0,size:0}),u||(n.size=0),void 0!=r&&s(r,n[c],n,t)})),m=h(e),x=function(n,e,t){var r,a,o=m(n),i=g(n,e);return i?i.value=t:(o.last=i={index:a=d(e,!0),key:e,value:t,previous:r=o.last,next:void 0,removed:!1},o.first||(o.first=i),r&&(r.next=i),u?o.size++:n.size++,"F"!==a&&(o.index[a]=i)),n},g=function(n,e){var t,r=m(n),a=d(e);if("F"!==a)return r.index[a];for(t=r.first;t;t=t.next)if(t.key==e)return t};return o(p.prototype,{clear:function(){var n=this,e=m(n),t=e.index,r=e.first;while(r)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete t[r.index],r=r.next;e.first=e.last=void 0,u?e.size=0:n.size=0},delete:function(n){var e=this,t=m(e),r=g(e,n);if(r){var a=r.next,o=r.previous;delete t.index[r.index],r.removed=!0,o&&(o.next=a),a&&(a.previous=o),t.first==r&&(t.first=a),t.last==r&&(t.last=o),u?t.size--:e.size--}return!!r},forEach:function(n){var e,t=m(this),r=i(n,arguments.length>1?arguments[1]:void 0,3);while(e=e?e.next:t.first){r(e.value,e.key,this);while(e&&e.removed)e=e.previous}},has:function(n){return!!g(this,n)}}),o(p.prototype,t?{get:function(n){var e=g(this,n);return e&&e.value},set:function(n,e){return x(this,0===n?0:n,e)}}:{add:function(n){return x(this,n=0===n?0:n,n)}}),u&&r(p.prototype,"size",{get:function(){return m(this).size}}),p},setStrong:function(n,e,t){var r=e+" Iterator",a=h(e),o=h(r);c(n,e,(function(n,e){f(this,{type:r,target:n,state:a(n),kind:e,last:void 0})}),(function(){var n=o(this),e=n.kind,t=n.last;while(t&&t.removed)t=t.previous;return n.target&&(n.last=t=t?t.next:n.state.first)?"keys"==e?{value:t.key,done:!1}:"values"==e?{value:t.value,done:!1}:{value:[t.key,t.value],done:!1}:(n.target=void 0,{value:void 0,done:!0})}),t?"entries":"values",!t,!0),p(e)}}},vRGJ:function(n,e,t){var r=t("AqCL");n.exports=y,n.exports.parse=o,n.exports.compile=i,n.exports.tokensToFunction=c,n.exports.tokensToRegExp=g;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(n,e){var t,r=[],o=0,i=0,l="",s=e&&e.delimiter||"/";while(null!=(t=a.exec(n))){var c=t[0],d=t[1],m=t.index;if(l+=n.slice(i,m),i=m+c.length,d)l+=d[1];else{var f=n[i],h=t[2],x=t[3],g=t[4],y=t[5],C=t[6],w=t[7];l&&(r.push(l),l="");var v=null!=h&&null!=f&&f!==h,b="+"===C||"*"===C,k="?"===C||"*"===C,V=t[2]||s,P=g||y;r.push({name:x||o++,prefix:h||"",delimiter:V,optional:k,repeat:b,partial:v,asterisk:!!w,pattern:P?u(P):w?".*":"[^"+p(V)+"]+?"})}}return i<n.length&&(l+=n.substr(i)),l&&r.push(l),r}function i(n,e){return c(o(n,e),e)}function l(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function s(n){return encodeURI(n).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function c(n,e){for(var t=new Array(n.length),a=0;a<n.length;a++)"object"===typeof n[a]&&(t[a]=new RegExp("^(?:"+n[a].pattern+")$",m(e)));return function(e,a){for(var o="",i=e||{},c=a||{},p=c.pretty?l:encodeURIComponent,u=0;u<n.length;u++){var d=n[u];if("string"!==typeof d){var m,f=i[d.name];if(null==f){if(d.optional){d.partial&&(o+=d.prefix);continue}throw new TypeError('Expected "'+d.name+'" to be defined')}if(r(f)){if(!d.repeat)throw new TypeError('Expected "'+d.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(d.optional)continue;throw new TypeError('Expected "'+d.name+'" to not be empty')}for(var h=0;h<f.length;h++){if(m=p(f[h]),!t[u].test(m))throw new TypeError('Expected all "'+d.name+'" to match "'+d.pattern+'", but received `'+JSON.stringify(m)+"`");o+=(0===h?d.prefix:d.delimiter)+m}}else{if(m=d.asterisk?s(f):p(f),!t[u].test(m))throw new TypeError('Expected "'+d.name+'" to match "'+d.pattern+'", but received "'+m+'"');o+=d.prefix+m}}else o+=d}return o}}function p(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function u(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function d(n,e){return n.keys=e,n}function m(n){return n&&n.sensitive?"":"i"}function f(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return d(n,e)}function h(n,e,t){for(var r=[],a=0;a<n.length;a++)r.push(y(n[a],e,t).source);var o=new RegExp("(?:"+r.join("|")+")",m(t));return d(o,e)}function x(n,e,t){return g(o(n,t),e,t)}function g(n,e,t){r(e)||(t=e||t,e=[]),t=t||{};for(var a=t.strict,o=!1!==t.end,i="",l=0;l<n.length;l++){var s=n[l];if("string"===typeof s)i+=p(s);else{var c=p(s.prefix),u="(?:"+s.pattern+")";e.push(s),s.repeat&&(u+="(?:"+c+u+")*"),u=s.optional?s.partial?c+"("+u+")?":"(?:"+c+"("+u+"))?":c+"("+u+")",i+=u}}var f=p(t.delimiter||"/"),h=i.slice(-f.length)===f;return a||(i=(h?i.slice(0,-f.length):i)+"(?:"+f+"(?=$))?"),i+=o?"$":a&&h?"":"(?="+f+"|$)",d(new RegExp("^"+i,m(t)),e)}function y(n,e,t){return r(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?f(n,e):r(n)?h(n,e,t):x(n,e,t)}},vg9a:function(n,e,t){},viRO:function(n,e,t){"use strict";var r=t("MgzW"),a="function"===typeof Symbol&&Symbol.for,o=a?Symbol.for("react.element"):60103,i=a?Symbol.for("react.portal"):60106,l=a?Symbol.for("react.fragment"):60107,s=a?Symbol.for("react.strict_mode"):60108,c=a?Symbol.for("react.profiler"):60114,p=a?Symbol.for("react.provider"):60109,u=a?Symbol.for("react.context"):60110,d=a?Symbol.for("react.forward_ref"):60112,m=a?Symbol.for("react.suspense"):60113,f=a?Symbol.for("react.memo"):60115,h=a?Symbol.for("react.lazy"):60116,x="function"===typeof Symbol&&Symbol.iterator;function g(n){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+n,t=1;t<arguments.length;t++)e+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+n+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C={};function w(n,e,t){this.props=n,this.context=e,this.refs=C,this.updater=t||y}function v(){}function b(n,e,t){this.props=n,this.context=e,this.refs=C,this.updater=t||y}w.prototype.isReactComponent={},w.prototype.setState=function(n,e){if("object"!==typeof n&&"function"!==typeof n&&null!=n)throw Error(g(85));this.updater.enqueueSetState(this,n,e,"setState")},w.prototype.forceUpdate=function(n){this.updater.enqueueForceUpdate(this,n,"forceUpdate")},v.prototype=w.prototype;var k=b.prototype=new v;k.constructor=b,r(k,w.prototype),k.isPureReactComponent=!0;var V={current:null},P=Object.prototype.hasOwnProperty,N={key:!0,ref:!0,__self:!0,__source:!0};function R(n,e,t){var r,a={},i=null,l=null;if(null!=e)for(r in void 0!==e.ref&&(l=e.ref),void 0!==e.key&&(i=""+e.key),e)P.call(e,r)&&!N.hasOwnProperty(r)&&(a[r]=e[r]);var s=arguments.length-2;if(1===s)a.children=t;else if(1<s){for(var c=Array(s),p=0;p<s;p++)c[p]=arguments[p+2];a.children=c}if(n&&n.defaultProps)for(r in s=n.defaultProps,s)void 0===a[r]&&(a[r]=s[r]);return{$$typeof:o,type:n,key:i,ref:l,props:a,_owner:V.current}}function S(n,e){return{$$typeof:o,type:n.type,key:e,ref:n.ref,props:n.props,_owner:n._owner}}function T(n){return"object"===typeof n&&null!==n&&n.$$typeof===o}function E(n){var e={"=":"=0",":":"=2"};return"$"+(""+n).replace(/[=:]/g,(function(n){return e[n]}))}var $=/\/+/g,I=[];function _(n,e,t,r){if(I.length){var a=I.pop();return a.result=n,a.keyPrefix=e,a.func=t,a.context=r,a.count=0,a}return{result:n,keyPrefix:e,func:t,context:r,count:0}}function F(n){n.result=null,n.keyPrefix=null,n.func=null,n.context=null,n.count=0,10>I.length&&I.push(n)}function O(n,e,t,r){var a=typeof n;"undefined"!==a&&"boolean"!==a||(n=null);var l=!1;if(null===n)l=!0;else switch(a){case"string":case"number":l=!0;break;case"object":switch(n.$$typeof){case o:case i:l=!0}}if(l)return t(r,n,""===e?"."+M(n,0):e),1;if(l=0,e=""===e?".":e+":",Array.isArray(n))for(var s=0;s<n.length;s++){a=n[s];var c=e+M(a,s);l+=O(a,c,t,r)}else if(null===n||"object"!==typeof n?c=null:(c=x&&n[x]||n["@@iterator"],c="function"===typeof c?c:null),"function"===typeof c)for(n=c.call(n),s=0;!(a=n.next()).done;)a=a.value,c=e+M(a,s++),l+=O(a,c,t,r);else if("object"===a)throw t=""+n,Error(g(31,"[object Object]"===t?"object with keys {"+Object.keys(n).join(", ")+"}":t,""));return l}function A(n,e,t){return null==n?0:O(n,"",e,t)}function M(n,e){return"object"===typeof n&&null!==n&&null!=n.key?E(n.key):e.toString(36)}function z(n,e){n.func.call(n.context,e,n.count++)}function j(n,e,t){var r=n.result,a=n.keyPrefix;n=n.func.call(n.context,e,n.count++),Array.isArray(n)?B(n,r,t,(function(n){return n})):null!=n&&(T(n)&&(n=S(n,a+(!n.key||e&&e.key===n.key?"":(""+n.key).replace($,"$&/")+"/")+t)),r.push(n))}function B(n,e,t,r,a){var o="";null!=t&&(o=(""+t).replace($,"$&/")+"/"),e=_(e,o,r,a),A(n,j,e),F(e)}var D={current:null};function L(){var n=D.current;if(null===n)throw Error(g(321));return n}var U={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:V,IsSomeRendererActing:{current:!1},assign:r};e.Children={map:function(n,e,t){if(null==n)return n;var r=[];return B(n,r,null,e,t),r},forEach:function(n,e,t){if(null==n)return n;e=_(null,null,e,t),A(n,z,e),F(e)},count:function(n){return A(n,(function(){return null}),null)},toArray:function(n){var e=[];return B(n,e,null,(function(n){return n})),e},only:function(n){if(!T(n))throw Error(g(143));return n}},e.Component=w,e.Fragment=l,e.Profiler=c,e.PureComponent=b,e.StrictMode=s,e.Suspense=m,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,e.cloneElement=function(n,e,t){if(null===n||void 0===n)throw Error(g(267,n));var a=r({},n.props),i=n.key,l=n.ref,s=n._owner;if(null!=e){if(void 0!==e.ref&&(l=e.ref,s=V.current),void 0!==e.key&&(i=""+e.key),n.type&&n.type.defaultProps)var c=n.type.defaultProps;for(p in e)P.call(e,p)&&!N.hasOwnProperty(p)&&(a[p]=void 0===e[p]&&void 0!==c?c[p]:e[p])}var p=arguments.length-2;if(1===p)a.children=t;else if(1<p){c=Array(p);for(var u=0;u<p;u++)c[u]=arguments[u+2];a.children=c}return{$$typeof:o,type:n.type,key:i,ref:l,props:a,_owner:s}},e.createContext=function(n,e){return void 0===e&&(e=null),n={$$typeof:u,_calculateChangedBits:e,_currentValue:n,_currentValue2:n,_threadCount:0,Provider:null,Consumer:null},n.Provider={$$typeof:p,_context:n},n.Consumer=n},e.createElement=R,e.createFactory=function(n){var e=R.bind(null,n);return e.type=n,e},e.createRef=function(){return{current:null}},e.forwardRef=function(n){return{$$typeof:d,render:n}},e.isValidElement=T,e.lazy=function(n){return{$$typeof:h,_ctor:n,_status:-1,_result:null}},e.memo=function(n,e){return{$$typeof:f,type:n,compare:void 0===e?null:e}},e.useCallback=function(n,e){return L().useCallback(n,e)},e.useContext=function(n,e){return L().useContext(n,e)},e.useDebugValue=function(){},e.useEffect=function(n,e){return L().useEffect(n,e)},e.useImperativeHandle=function(n,e,t){return L().useImperativeHandle(n,e,t)},e.useLayoutEffect=function(n,e){return L().useLayoutEffect(n,e)},e.useMemo=function(n,e){return L().useMemo(n,e)},e.useReducer=function(n,e,t){return L().useReducer(n,e,t)},e.useRef=function(n){return L().useRef(n)},e.useState=function(n){return L().useState(n)},e.version="16.13.1"},vnQr:function(n,e,t){"use strict";var r=t("MMxC"),a=t("9RRT").left,o=t("R8iy"),i=t("kGMc"),l=o("reduce"),s=i("reduce",{1:0});r({target:"Array",proto:!0,forced:!l||!s},{reduce:function(n){return a(this,n,arguments.length,arguments.length>1?arguments[1]:void 0)}})},wdPq:function(n,e,t){"use strict";var r=t("MMxC"),a=t("zv1X").some,o=t("R8iy"),i=t("kGMc"),l=o("some"),s=i("some");r({target:"Array",proto:!0,forced:!l||!s},{some:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},wgKq:function(n,e,t){var r=t("Fs9M");n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},wpse:function(n,e,t){var r=t("I65O");r("asyncIterator")},wr9r:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t("UClF");e.XmlEntities=r.XmlEntities;var a=t("HwU6");e.Html4Entities=a.Html4Entities;var o=t("F//3");e.Html5Entities=o.Html5Entities,e.AllHtmlEntities=o.Html5Entities},wwZZ:function(n,e,t){var r=t("MMxC"),a=t("QQ4S");r({target:"Array",proto:!0,forced:a!==[].lastIndexOf},{lastIndexOf:a})},wx14:function(n,e,t){"use strict";function r(){return r=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},r.apply(this,arguments)}t.d(e,"a",(function(){return r}))},"x+K1":function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t("f4X2"),i=t("IOv4"),l=[{key:"1",value:"Remax"},{key:"2",value:"Taro"},{key:"3",value:"Nanachi"},{key:"4",value:"Uni-app"},{key:"4",value:"Mpvue"}];e["default"]=()=>{var n=a["useState"]("0"),e=Object(r["a"])(n,2),t=e[0],s=e[1],c=a["useState"]("0"),p=Object(r["a"])(c,2),u=p[0],d=p[1],m=a["useState"]("0"),f=Object(r["a"])(m,2),h=f[0],x=f[1],g=a["useState"]("0"),y=Object(r["a"])(g,2),C=y[0],w=y[1],v=a["useState"]("0"),b=Object(r["a"])(v,2),k=b[0],V=b[1];return a["createElement"](i["b"],{grayBg:!0},a["createElement"](i["a"],{title:"Basic"},a["createElement"](o["k"],{value:t,onChange:n=>s(n.key),options:l,placeholder:"Please choose"})),a["createElement"](i["a"],{title:"With Label"},a["createElement"](o["k"],{label:"Scheme",value:u,onChange:n=>d(n.key),options:l,placeholder:"Please choose"})),a["createElement"](i["a"],{title:"pickerAlign"},a["createElement"](o["k"],{label:"Scheme",value:h,onChange:n=>x(n.key),options:l,placeholder:"Please choose",pickerAlign:"right"})),a["createElement"](i["a"],{title:"Disabled"},a["createElement"](o["k"],{label:"Scheme",options:l,placeholder:"Has been disabled",disabled:!0})),a["createElement"](i["a"],{title:"With Required"},a["createElement"](o["k"],{required:!0,label:"Scheme",value:C,onChange:n=>w(n.key),options:l,placeholder:"Please choose"})),a["createElement"](i["a"],{title:"With Icon"},a["createElement"](o["k"],{icon:"likefill",label:"\u6700\u7231\u7684",value:k,onChange:n=>V(n.key),options:l,placeholder:"Please choose"})))}},xD7I:function(n,e,t){var r=t("MMxC"),a=Math.PI/180;r({target:"Math",stat:!0},{radians:function(n){return n*a}})},xF6R:function(n,e,t){"use strict";var r=t("MMxC"),a=t("Zcjx"),o=t("f1E4"),i=t("7BAe"),l=t("PPXv"),s=t("IuhT");r({target:"Map",proto:!0,real:!0,forced:a},{some:function(n){var e=o(this),t=l(e),r=i(n,arguments.length>1?arguments[1]:void 0,3);return s(t,(function(n,t){if(r(t,n,e))return s.stop()}),void 0,!0,!0).stopped}})},xH5X:function(n,e,t){"use strict";var r=t("eYKs").charAt;n.exports=function(n,e,t){return e+(t?r(n,e).length:1)}},xRZI:function(n,e,t){var r=t("Qlla");n.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},xaQh:function(n,e,t){var r=t("MMxC"),a=t("ls1J"),o=t("f1E4"),i=a.toKey,l=a.set;r({target:"Reflect",stat:!0},{defineMetadata:function(n,e,t){var r=arguments.length<4?void 0:i(arguments[3]);l(n,e,o(t),r)}})},xtlo:function(n,e,t){"use strict";var r=t("MMxC"),a=t("m0kY"),o=t("F52u"),i=t("+rjg"),l=t("MVys"),s=1..toFixed,c=Math.floor,p=function(n,e,t){return 0===e?t:e%2===1?p(n,e-1,t*n):p(n*n,e/2,t)},u=function(n){var e=0,t=n;while(t>=4096)e+=12,t/=4096;while(t>=2)e+=1,t/=2;return e},d=s&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!l((function(){s.call({})}));r({target:"Number",proto:!0,forced:d},{toFixed:function(n){var e,t,r,l,s=o(this),d=a(n),m=[0,0,0,0,0,0],f="",h="0",x=function(n,e){var t=-1,r=e;while(++t<6)r+=n*m[t],m[t]=r%1e7,r=c(r/1e7)},g=function(n){var e=6,t=0;while(--e>=0)t+=m[e],m[e]=c(t/n),t=t%n*1e7},y=function(){var n=6,e="";while(--n>=0)if(""!==e||0===n||0!==m[n]){var t=String(m[n]);e=""===e?t:e+i.call("0",7-t.length)+t}return e};if(d<0||d>20)throw RangeError("Incorrect fraction digits");if(s!=s)return"NaN";if(s<=-1e21||s>=1e21)return String(s);if(s<0&&(f="-",s=-s),s>1e-21)if(e=u(s*p(2,69,1))-69,t=e<0?s*p(2,-e,1):s/p(2,e,1),t*=4503599627370496,e=52-e,e>0){x(0,t),r=d;while(r>=7)x(1e7,0),r-=7;x(p(10,r,1),0),r=e-1;while(r>=23)g(1<<23),r-=23;g(1<<r),x(1,1),g(2),h=y()}else x(0,t),x(1<<-e,0),h=y()+i.call("0",d);return d>0?(l=h.length,h=f+(l<=d?"0."+i.call("0",d-l)+h:h.slice(0,l-d)+"."+h.slice(l-d))):h=f+h,h}})},xutz:function(n,e,t){"use strict";(function(n){var r=t("XqMk"),a="object"==typeof exports&&exports&&!exports.nodeType&&exports,o=a&&"object"==typeof n&&n&&!n.nodeType&&n,i=o&&o.exports===a,l=i&&r["a"].process,s=function(){try{var n=o&&o.require&&o.require("util").types;return n||l&&l.binding&&l.binding("util")}catch(e){}}();e["a"]=s}).call(this,t("dAyf")(n))},xxaU:function(n,e,t){var r=t("Zcjx"),a=t("pb5k");(n.exports=function(n,e){return a[n]||(a[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.6.5",mode:r?"pure":"global",copyright:"\xa9 2020 Denis Pushkarev (zloirock.ru)"})},"y36+":function(n,e,t){var r=t("Mi8B");r("Uint8",(function(n){return function(e,t,r){return n(this,e,t,r)}}),!0)},y9mK:function(n,e,t){var r=t("Qlla");n.exports=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(r)},yelY:function(n,e,t){},yiTY:function(n,e,t){var r=t("Mi8B");r("Int32",(function(n){return function(e,t,r){return n(this,e,t,r)}}))},yj7k:function(n,e,t){var r=t("29mP");n.exports=r("document","documentElement")},yl30:function(n,e,t){"use strict";var r=t("q1tI"),a=t("MgzW"),o=t("QCnb");function i(n){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+n,t=1;t<arguments.length;t++)e+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+n+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));function l(n,e,t,r,a,o,i,l,s){var c=Array.prototype.slice.call(arguments,3);try{e.apply(t,c)}catch(p){this.onError(p)}}var s=!1,c=null,p=!1,u=null,d={onError:function(n){s=!0,c=n}};function m(n,e,t,r,a,o,i,p,u){s=!1,c=null,l.apply(d,arguments)}function f(n,e,t,r,a,o,l,d,f){if(m.apply(this,arguments),s){if(!s)throw Error(i(198));var h=c;s=!1,c=null,p||(p=!0,u=h)}}var h=null,x=null,g=null;function y(n,e,t){var r=n.type||"unknown-event";n.currentTarget=g(t),f(r,e,void 0,n),n.currentTarget=null}var C=null,w={};function v(){if(C)for(var n in w){var e=w[n],t=C.indexOf(n);if(!(-1<t))throw Error(i(96,n));if(!k[t]){if(!e.extractEvents)throw Error(i(97,n));for(var r in k[t]=e,t=e.eventTypes,t){var a=void 0,o=t[r],l=e,s=r;if(V.hasOwnProperty(s))throw Error(i(99,s));V[s]=o;var c=o.phasedRegistrationNames;if(c){for(a in c)c.hasOwnProperty(a)&&b(c[a],l,s);a=!0}else o.registrationName?(b(o.registrationName,l,s),a=!0):a=!1;if(!a)throw Error(i(98,r,n))}}}}function b(n,e,t){if(P[n])throw Error(i(100,n));P[n]=e,N[n]=e.eventTypes[t].dependencies}var k=[],V={},P={},N={};function R(n){var e,t=!1;for(e in n)if(n.hasOwnProperty(e)){var r=n[e];if(!w.hasOwnProperty(e)||w[e]!==r){if(w[e])throw Error(i(102,e));w[e]=r,t=!0}}t&&v()}var S=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),T=null,E=null,$=null;function I(n){if(n=x(n)){if("function"!==typeof T)throw Error(i(280));var e=n.stateNode;e&&(e=h(e),T(n.stateNode,n.type,e))}}function _(n){E?$?$.push(n):$=[n]:E=n}function F(){if(E){var n=E,e=$;if($=E=null,I(n),e)for(n=0;n<e.length;n++)I(e[n])}}function O(n,e){return n(e)}function A(n,e,t,r,a){return n(e,t,r,a)}function M(){}var z=O,j=!1,B=!1;function D(){null===E&&null===$||(M(),F())}function L(n,e,t){if(B)return n(e,t);B=!0;try{return z(n,e,t)}finally{B=!1,D()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,K=Object.prototype.hasOwnProperty,q={},W={};function H(n){return!!K.call(W,n)||!K.call(q,n)&&(U.test(n)?W[n]=!0:(q[n]=!0,!1))}function G(n,e,t,r){if(null!==t&&0===t.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:(n=n.toLowerCase().slice(0,5),"data-"!==n&&"aria-"!==n));default:return!1}}function X(n,e,t,r){if(null===e||"undefined"===typeof e||G(n,e,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function Y(n,e,t,r,a,o){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=n,this.type=e,this.sanitizeURL=o}var Z={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(n){Z[n]=new Y(n,0,!1,n,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(n){var e=n[0];Z[e]=new Y(e,1,!1,n[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(n){Z[n]=new Y(n,2,!1,n.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(n){Z[n]=new Y(n,2,!1,n,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(n){Z[n]=new Y(n,3,!1,n.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(n){Z[n]=new Y(n,3,!0,n,null,!1)})),["capture","download"].forEach((function(n){Z[n]=new Y(n,4,!1,n,null,!1)})),["cols","rows","size","span"].forEach((function(n){Z[n]=new Y(n,6,!1,n,null,!1)})),["rowSpan","start"].forEach((function(n){Z[n]=new Y(n,5,!1,n.toLowerCase(),null,!1)}));var Q=/[\-:]([a-z])/g;function J(n){return n[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(n){var e=n.replace(Q,J);Z[e]=new Y(e,1,!1,n,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(n){var e=n.replace(Q,J);Z[e]=new Y(e,1,!1,n,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(n){var e=n.replace(Q,J);Z[e]=new Y(e,1,!1,n,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(n){Z[n]=new Y(n,1,!1,n.toLowerCase(),null,!1)})),Z.xlinkHref=new Y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(n){Z[n]=new Y(n,1,!1,n.toLowerCase(),null,!0)}));var nn=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function en(n,e,t,r){var a=Z.hasOwnProperty(e)?Z[e]:null,o=null!==a?0===a.type:!r&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1]));o||(X(e,t,a,r)&&(t=null),r||null===a?H(e)&&(null===t?n.removeAttribute(e):n.setAttribute(e,""+t)):a.mustUseProperty?n[a.propertyName]=null===t?3!==a.type&&"":t:(e=a.attributeName,r=a.attributeNamespace,null===t?n.removeAttribute(e):(a=a.type,t=3===a||4===a&&!0===t?"":""+t,r?n.setAttributeNS(r,e,t):n.setAttribute(e,t))))}nn.hasOwnProperty("ReactCurrentDispatcher")||(nn.ReactCurrentDispatcher={current:null}),nn.hasOwnProperty("ReactCurrentBatchConfig")||(nn.ReactCurrentBatchConfig={suspense:null});var tn=/^(.*)[\\\/]/,rn="function"===typeof Symbol&&Symbol.for,an=rn?Symbol.for("react.element"):60103,on=rn?Symbol.for("react.portal"):60106,ln=rn?Symbol.for("react.fragment"):60107,sn=rn?Symbol.for("react.strict_mode"):60108,cn=rn?Symbol.for("react.profiler"):60114,pn=rn?Symbol.for("react.provider"):60109,un=rn?Symbol.for("react.context"):60110,dn=rn?Symbol.for("react.concurrent_mode"):60111,mn=rn?Symbol.for("react.forward_ref"):60112,fn=rn?Symbol.for("react.suspense"):60113,hn=rn?Symbol.for("react.suspense_list"):60120,xn=rn?Symbol.for("react.memo"):60115,gn=rn?Symbol.for("react.lazy"):60116,yn=rn?Symbol.for("react.block"):60121,Cn="function"===typeof Symbol&&Symbol.iterator;function wn(n){return null===n||"object"!==typeof n?null:(n=Cn&&n[Cn]||n["@@iterator"],"function"===typeof n?n:null)}function vn(n){if(-1===n._status){n._status=0;var e=n._ctor;e=e(),n._result=e,e.then((function(e){0===n._status&&(e=e.default,n._status=1,n._result=e)}),(function(e){0===n._status&&(n._status=2,n._result=e)}))}}function bn(n){if(null==n)return null;if("function"===typeof n)return n.displayName||n.name||null;if("string"===typeof n)return n;switch(n){case ln:return"Fragment";case on:return"Portal";case cn:return"Profiler";case sn:return"StrictMode";case fn:return"Suspense";case hn:return"SuspenseList"}if("object"===typeof n)switch(n.$$typeof){case un:return"Context.Consumer";case pn:return"Context.Provider";case mn:var e=n.render;return e=e.displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case xn:return bn(n.type);case yn:return bn(n.render);case gn:if(n=1===n._status?n._result:null)return bn(n)}return null}function kn(n){var e="";do{n:switch(n.tag){case 3:case 4:case 6:case 7:case 10:case 9:var t="";break n;default:var r=n._debugOwner,a=n._debugSource,o=bn(n.type);t=null,r&&(t=bn(r.type)),r=o,o="",a?o=" (at "+a.fileName.replace(tn,"")+":"+a.lineNumber+")":t&&(o=" (created by "+t+")"),t="\n    in "+(r||"Unknown")+o}e+=t,n=n.return}while(n);return e}function Vn(n){switch(typeof n){case"boolean":case"number":case"object":case"string":case"undefined":return n;default:return""}}function Pn(n){var e=n.type;return(n=n.nodeName)&&"input"===n.toLowerCase()&&("checkbox"===e||"radio"===e)}function Nn(n){var e=Pn(n)?"checked":"value",t=Object.getOwnPropertyDescriptor(n.constructor.prototype,e),r=""+n[e];if(!n.hasOwnProperty(e)&&"undefined"!==typeof t&&"function"===typeof t.get&&"function"===typeof t.set){var a=t.get,o=t.set;return Object.defineProperty(n,e,{configurable:!0,get:function(){return a.call(this)},set:function(n){r=""+n,o.call(this,n)}}),Object.defineProperty(n,e,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(n){r=""+n},stopTracking:function(){n._valueTracker=null,delete n[e]}}}}function Rn(n){n._valueTracker||(n._valueTracker=Nn(n))}function Sn(n){if(!n)return!1;var e=n._valueTracker;if(!e)return!0;var t=e.getValue(),r="";return n&&(r=Pn(n)?n.checked?"true":"false":n.value),n=r,n!==t&&(e.setValue(n),!0)}function Tn(n,e){var t=e.checked;return a({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:n._wrapperState.initialChecked})}function En(n,e){var t=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;t=Vn(null!=e.value?e.value:t),n._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function $n(n,e){e=e.checked,null!=e&&en(n,"checked",e,!1)}function In(n,e){$n(n,e);var t=Vn(e.value),r=e.type;if(null!=t)"number"===r?(0===t&&""===n.value||n.value!=t)&&(n.value=""+t):n.value!==""+t&&(n.value=""+t);else if("submit"===r||"reset"===r)return void n.removeAttribute("value");e.hasOwnProperty("value")?Fn(n,e.type,t):e.hasOwnProperty("defaultValue")&&Fn(n,e.type,Vn(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(n.defaultChecked=!!e.defaultChecked)}function _n(n,e,t){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+n._wrapperState.initialValue,t||e===n.value||(n.value=e),n.defaultValue=e}t=n.name,""!==t&&(n.name=""),n.defaultChecked=!!n._wrapperState.initialChecked,""!==t&&(n.name=t)}function Fn(n,e,t){"number"===e&&n.ownerDocument.activeElement===n||(null==t?n.defaultValue=""+n._wrapperState.initialValue:n.defaultValue!==""+t&&(n.defaultValue=""+t))}function On(n){var e="";return r.Children.forEach(n,(function(n){null!=n&&(e+=n)})),e}function An(n,e){return n=a({children:void 0},e),(e=On(e.children))&&(n.children=e),n}function Mn(n,e,t,r){if(n=n.options,e){e={};for(var a=0;a<t.length;a++)e["$"+t[a]]=!0;for(t=0;t<n.length;t++)a=e.hasOwnProperty("$"+n[t].value),n[t].selected!==a&&(n[t].selected=a),a&&r&&(n[t].defaultSelected=!0)}else{for(t=""+Vn(t),e=null,a=0;a<n.length;a++){if(n[a].value===t)return n[a].selected=!0,void(r&&(n[a].defaultSelected=!0));null!==e||n[a].disabled||(e=n[a])}null!==e&&(e.selected=!0)}}function zn(n,e){if(null!=e.dangerouslySetInnerHTML)throw Error(i(91));return a({},e,{value:void 0,defaultValue:void 0,children:""+n._wrapperState.initialValue})}function jn(n,e){var t=e.value;if(null==t){if(t=e.children,e=e.defaultValue,null!=t){if(null!=e)throw Error(i(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(i(93));t=t[0]}e=t}null==e&&(e=""),t=e}n._wrapperState={initialValue:Vn(t)}}function Bn(n,e){var t=Vn(e.value),r=Vn(e.defaultValue);null!=t&&(t=""+t,t!==n.value&&(n.value=t),null==e.defaultValue&&n.defaultValue!==t&&(n.defaultValue=t)),null!=r&&(n.defaultValue=""+r)}function Dn(n){var e=n.textContent;e===n._wrapperState.initialValue&&""!==e&&null!==e&&(n.value=e)}var Ln={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Un(n){switch(n){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Kn(n,e){return null==n||"http://www.w3.org/1999/xhtml"===n?Un(e):"http://www.w3.org/2000/svg"===n&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":n}var qn,Wn=function(n){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,a){MSApp.execUnsafeLocalFunction((function(){return n(e,t,r,a)}))}:n}((function(n,e){if(n.namespaceURI!==Ln.svg||"innerHTML"in n)n.innerHTML=e;else{for(qn=qn||document.createElement("div"),qn.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=qn.firstChild;n.firstChild;)n.removeChild(n.firstChild);for(;e.firstChild;)n.appendChild(e.firstChild)}}));function Hn(n,e){if(e){var t=n.firstChild;if(t&&t===n.lastChild&&3===t.nodeType)return void(t.nodeValue=e)}n.textContent=e}function Gn(n,e){var t={};return t[n.toLowerCase()]=e.toLowerCase(),t["Webkit"+n]="webkit"+e,t["Moz"+n]="moz"+e,t}var Xn={animationend:Gn("Animation","AnimationEnd"),animationiteration:Gn("Animation","AnimationIteration"),animationstart:Gn("Animation","AnimationStart"),transitionend:Gn("Transition","TransitionEnd")},Yn={},Zn={};function Qn(n){if(Yn[n])return Yn[n];if(!Xn[n])return n;var e,t=Xn[n];for(e in t)if(t.hasOwnProperty(e)&&e in Zn)return Yn[n]=t[e];return n}S&&(Zn=document.createElement("div").style,"AnimationEvent"in window||(delete Xn.animationend.animation,delete Xn.animationiteration.animation,delete Xn.animationstart.animation),"TransitionEvent"in window||delete Xn.transitionend.transition);var Jn=Qn("animationend"),ne=Qn("animationiteration"),ee=Qn("animationstart"),te=Qn("transitionend"),re="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ae=new("function"===typeof WeakMap?WeakMap:Map);function oe(n){var e=ae.get(n);return void 0===e&&(e=new Map,ae.set(n,e)),e}function ie(n){var e=n,t=n;if(n.alternate)for(;e.return;)e=e.return;else{n=e;do{e=n,0!==(1026&e.effectTag)&&(t=e.return),n=e.return}while(n)}return 3===e.tag?t:null}function le(n){if(13===n.tag){var e=n.memoizedState;if(null===e&&(n=n.alternate,null!==n&&(e=n.memoizedState)),null!==e)return e.dehydrated}return null}function se(n){if(ie(n)!==n)throw Error(i(188))}function ce(n){var e=n.alternate;if(!e){if(e=ie(n),null===e)throw Error(i(188));return e!==n?null:n}for(var t=n,r=e;;){var a=t.return;if(null===a)break;var o=a.alternate;if(null===o){if(r=a.return,null!==r){t=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===t)return se(a),n;if(o===r)return se(a),e;o=o.sibling}throw Error(i(188))}if(t.return!==r.return)t=a,r=o;else{for(var l=!1,s=a.child;s;){if(s===t){l=!0,t=a,r=o;break}if(s===r){l=!0,r=a,t=o;break}s=s.sibling}if(!l){for(s=o.child;s;){if(s===t){l=!0,t=o,r=a;break}if(s===r){l=!0,r=o,t=a;break}s=s.sibling}if(!l)throw Error(i(189))}}if(t.alternate!==r)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?n:e}function pe(n){if(n=ce(n),!n)return null;for(var e=n;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===n)break;for(;!e.sibling;){if(!e.return||e.return===n)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}function ue(n,e){if(null==e)throw Error(i(30));return null==n?e:Array.isArray(n)?Array.isArray(e)?(n.push.apply(n,e),n):(n.push(e),n):Array.isArray(e)?[n].concat(e):[n,e]}function de(n,e,t){Array.isArray(n)?n.forEach(e,t):n&&e.call(t,n)}var me=null;function fe(n){if(n){var e=n._dispatchListeners,t=n._dispatchInstances;if(Array.isArray(e))for(var r=0;r<e.length&&!n.isPropagationStopped();r++)y(n,e[r],t[r]);else e&&y(n,e,t);n._dispatchListeners=null,n._dispatchInstances=null,n.isPersistent()||n.constructor.release(n)}}function he(n){if(null!==n&&(me=ue(me,n)),n=me,me=null,n){if(de(n,fe),me)throw Error(i(95));if(p)throw n=u,p=!1,u=null,n}}function xe(n){return n=n.target||n.srcElement||window,n.correspondingUseElement&&(n=n.correspondingUseElement),3===n.nodeType?n.parentNode:n}function ge(n){if(!S)return!1;n="on"+n;var e=n in document;return e||(e=document.createElement("div"),e.setAttribute(n,"return;"),e="function"===typeof e[n]),e}var ye=[];function Ce(n){n.topLevelType=null,n.nativeEvent=null,n.targetInst=null,n.ancestors.length=0,10>ye.length&&ye.push(n)}function we(n,e,t,r){if(ye.length){var a=ye.pop();return a.topLevelType=n,a.eventSystemFlags=r,a.nativeEvent=e,a.targetInst=t,a}return{topLevelType:n,eventSystemFlags:r,nativeEvent:e,targetInst:t,ancestors:[]}}function ve(n){var e=n.targetInst,t=e;do{if(!t){n.ancestors.push(t);break}var r=t;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;e=t.tag,5!==e&&6!==e||n.ancestors.push(t),t=Dt(r)}while(t);for(t=0;t<n.ancestors.length;t++){e=n.ancestors[t];var a=xe(n.nativeEvent);r=n.topLevelType;var o=n.nativeEvent,i=n.eventSystemFlags;0===t&&(i|=64);for(var l=null,s=0;s<k.length;s++){var c=k[s];c&&(c=c.extractEvents(r,e,o,a,i))&&(l=ue(l,c))}he(l)}}function be(n,e,t){if(!t.has(n)){switch(n){case"scroll":at(e,"scroll",!0);break;case"focus":case"blur":at(e,"focus",!0),at(e,"blur",!0),t.set("blur",null),t.set("focus",null);break;case"cancel":case"close":ge(n)&&at(e,n,!0);break;case"invalid":case"submit":case"reset":break;default:-1===re.indexOf(n)&&rt(n,e)}t.set(n,null)}}var ke,Ve,Pe,Ne=!1,Re=[],Se=null,Te=null,Ee=null,$e=new Map,Ie=new Map,_e=[],Fe="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Oe="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Ae(n,e){var t=oe(e);Fe.forEach((function(n){be(n,e,t)})),Oe.forEach((function(n){be(n,e,t)}))}function Me(n,e,t,r,a){return{blockedOn:n,topLevelType:e,eventSystemFlags:32|t,nativeEvent:a,container:r}}function ze(n,e){switch(n){case"focus":case"blur":Se=null;break;case"dragenter":case"dragleave":Te=null;break;case"mouseover":case"mouseout":Ee=null;break;case"pointerover":case"pointerout":$e.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ie.delete(e.pointerId)}}function je(n,e,t,r,a,o){return null===n||n.nativeEvent!==o?(n=Me(e,t,r,a,o),null!==e&&(e=Lt(e),null!==e&&Ve(e)),n):(n.eventSystemFlags|=r,n)}function Be(n,e,t,r,a){switch(e){case"focus":return Se=je(Se,n,e,t,r,a),!0;case"dragenter":return Te=je(Te,n,e,t,r,a),!0;case"mouseover":return Ee=je(Ee,n,e,t,r,a),!0;case"pointerover":var o=a.pointerId;return $e.set(o,je($e.get(o)||null,n,e,t,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Ie.set(o,je(Ie.get(o)||null,n,e,t,r,a)),!0}return!1}function De(n){var e=Dt(n.target);if(null!==e){var t=ie(e);if(null!==t)if(e=t.tag,13===e){if(e=le(t),null!==e)return n.blockedOn=e,void o.unstable_runWithPriority(n.priority,(function(){Pe(t)}))}else if(3===e&&t.stateNode.hydrate)return void(n.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}n.blockedOn=null}function Le(n){if(null!==n.blockedOn)return!1;var e=st(n.topLevelType,n.eventSystemFlags,n.container,n.nativeEvent);if(null!==e){var t=Lt(e);return null!==t&&Ve(t),n.blockedOn=e,!1}return!0}function Ue(n,e,t){Le(n)&&t.delete(e)}function Ke(){for(Ne=!1;0<Re.length;){var n=Re[0];if(null!==n.blockedOn){n=Lt(n.blockedOn),null!==n&&ke(n);break}var e=st(n.topLevelType,n.eventSystemFlags,n.container,n.nativeEvent);null!==e?n.blockedOn=e:Re.shift()}null!==Se&&Le(Se)&&(Se=null),null!==Te&&Le(Te)&&(Te=null),null!==Ee&&Le(Ee)&&(Ee=null),$e.forEach(Ue),Ie.forEach(Ue)}function qe(n,e){n.blockedOn===e&&(n.blockedOn=null,Ne||(Ne=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Ke)))}function We(n){function e(e){return qe(e,n)}if(0<Re.length){qe(Re[0],n);for(var t=1;t<Re.length;t++){var r=Re[t];r.blockedOn===n&&(r.blockedOn=null)}}for(null!==Se&&qe(Se,n),null!==Te&&qe(Te,n),null!==Ee&&qe(Ee,n),$e.forEach(e),Ie.forEach(e),t=0;t<_e.length;t++)r=_e[t],r.blockedOn===n&&(r.blockedOn=null);for(;0<_e.length&&(t=_e[0],null===t.blockedOn);)De(t),null===t.blockedOn&&_e.shift()}var He={},Ge=new Map,Xe=new Map,Ye=["abort","abort",Jn,"animationEnd",ne,"animationIteration",ee,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",te,"transitionEnd","waiting","waiting"];function Ze(n,e){for(var t=0;t<n.length;t+=2){var r=n[t],a=n[t+1],o="on"+(a[0].toUpperCase()+a.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[r],eventPriority:e},Xe.set(r,e),Ge.set(r,o),He[a]=o}}Ze("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ze("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ze(Ye,2);for(var Qe="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Je=0;Je<Qe.length;Je++)Xe.set(Qe[Je],0);var nt=o.unstable_UserBlockingPriority,et=o.unstable_runWithPriority,tt=!0;function rt(n,e){at(e,n,!1)}function at(n,e,t){var r=Xe.get(e);switch(void 0===r?2:r){case 0:r=ot.bind(null,e,1,n);break;case 1:r=it.bind(null,e,1,n);break;default:r=lt.bind(null,e,1,n)}t?n.addEventListener(e,r,!0):n.addEventListener(e,r,!1)}function ot(n,e,t,r){j||M();var a=lt,o=j;j=!0;try{A(a,n,e,t,r)}finally{(j=o)||D()}}function it(n,e,t,r){et(nt,lt.bind(null,n,e,t,r))}function lt(n,e,t,r){if(tt)if(0<Re.length&&-1<Fe.indexOf(n))n=Me(null,n,e,t,r),Re.push(n);else{var a=st(n,e,t,r);if(null===a)ze(n,r);else if(-1<Fe.indexOf(n))n=Me(a,n,e,t,r),Re.push(n);else if(!Be(a,n,e,t,r)){ze(n,r),n=we(n,r,null,e);try{L(ve,n)}finally{Ce(n)}}}}function st(n,e,t,r){if(t=xe(r),t=Dt(t),null!==t){var a=ie(t);if(null===a)t=null;else{var o=a.tag;if(13===o){if(t=le(a),null!==t)return t;t=null}else if(3===o){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;t=null}else a!==t&&(t=null)}}n=we(n,r,t,e);try{L(ve,n)}finally{Ce(n)}return null}var ct={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pt=["Webkit","ms","Moz","O"];function ut(n,e,t){return null==e||"boolean"===typeof e||""===e?"":t||"number"!==typeof e||0===e||ct.hasOwnProperty(n)&&ct[n]?(""+e).trim():e+"px"}function dt(n,e){for(var t in n=n.style,e)if(e.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=ut(t,e[t],r);"float"===t&&(t="cssFloat"),r?n.setProperty(t,a):n[t]=a}}Object.keys(ct).forEach((function(n){pt.forEach((function(e){e=e+n.charAt(0).toUpperCase()+n.substring(1),ct[e]=ct[n]}))}));var mt=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ft(n,e){if(e){if(mt[n]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(i(137,n,""));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(i(60));if("object"!==typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=e.style&&"object"!==typeof e.style)throw Error(i(62,""))}}function ht(n,e){if(-1===n.indexOf("-"))return"string"===typeof e.is;switch(n){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xt=Ln.html;function gt(n,e){n=9===n.nodeType||11===n.nodeType?n:n.ownerDocument;var t=oe(n);e=N[e];for(var r=0;r<e.length;r++)be(e[r],n,t)}function yt(){}function Ct(n){if(n=n||("undefined"!==typeof document?document:void 0),"undefined"===typeof n)return null;try{return n.activeElement||n.body}catch(e){return n.body}}function wt(n){for(;n&&n.firstChild;)n=n.firstChild;return n}function vt(n,e){var t,r=wt(n);for(n=0;r;){if(3===r.nodeType){if(t=n+r.textContent.length,n<=e&&t>=e)return{node:r,offset:e-n};n=t}n:{for(;r;){if(r.nextSibling){r=r.nextSibling;break n}r=r.parentNode}r=void 0}r=wt(r)}}function bt(n,e){return!(!n||!e)&&(n===e||(!n||3!==n.nodeType)&&(e&&3===e.nodeType?bt(n,e.parentNode):"contains"in n?n.contains(e):!!n.compareDocumentPosition&&!!(16&n.compareDocumentPosition(e))))}function kt(){for(var n=window,e=Ct();e instanceof n.HTMLIFrameElement;){try{var t="string"===typeof e.contentWindow.location.href}catch(r){t=!1}if(!t)break;n=e.contentWindow,e=Ct(n.document)}return e}function Vt(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return e&&("input"===e&&("text"===n.type||"search"===n.type||"tel"===n.type||"url"===n.type||"password"===n.type)||"textarea"===e||"true"===n.contentEditable)}var Pt="$",Nt="/$",Rt="$?",St="$!",Tt=null,Et=null;function $t(n,e){switch(n){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function It(n,e){return"textarea"===n||"option"===n||"noscript"===n||"string"===typeof e.children||"number"===typeof e.children||"object"===typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var _t="function"===typeof setTimeout?setTimeout:void 0,Ft="function"===typeof clearTimeout?clearTimeout:void 0;function Ot(n){for(;null!=n;n=n.nextSibling){var e=n.nodeType;if(1===e||3===e)break}return n}function At(n){n=n.previousSibling;for(var e=0;n;){if(8===n.nodeType){var t=n.data;if(t===Pt||t===St||t===Rt){if(0===e)return n;e--}else t===Nt&&e++}n=n.previousSibling}return null}var Mt=Math.random().toString(36).slice(2),zt="__reactInternalInstance$"+Mt,jt="__reactEventHandlers$"+Mt,Bt="__reactContainere$"+Mt;function Dt(n){var e=n[zt];if(e)return e;for(var t=n.parentNode;t;){if(e=t[Bt]||t[zt]){if(t=e.alternate,null!==e.child||null!==t&&null!==t.child)for(n=At(n);null!==n;){if(t=n[zt])return t;n=At(n)}return e}n=t,t=n.parentNode}return null}function Lt(n){return n=n[zt]||n[Bt],!n||5!==n.tag&&6!==n.tag&&13!==n.tag&&3!==n.tag?null:n}function Ut(n){if(5===n.tag||6===n.tag)return n.stateNode;throw Error(i(33))}function Kt(n){return n[jt]||null}function qt(n){do{n=n.return}while(n&&5!==n.tag);return n||null}function Wt(n,e){var t=n.stateNode;if(!t)return null;var r=h(t);if(!r)return null;t=r[e];n:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(n=n.type,r=!("button"===n||"input"===n||"select"===n||"textarea"===n)),n=!r;break n;default:n=!1}if(n)return null;if(t&&"function"!==typeof t)throw Error(i(231,e,typeof t));return t}function Ht(n,e,t){(e=Wt(n,t.dispatchConfig.phasedRegistrationNames[e]))&&(t._dispatchListeners=ue(t._dispatchListeners,e),t._dispatchInstances=ue(t._dispatchInstances,n))}function Gt(n){if(n&&n.dispatchConfig.phasedRegistrationNames){for(var e=n._targetInst,t=[];e;)t.push(e),e=qt(e);for(e=t.length;0<e--;)Ht(t[e],"captured",n);for(e=0;e<t.length;e++)Ht(t[e],"bubbled",n)}}function Xt(n,e,t){n&&t&&t.dispatchConfig.registrationName&&(e=Wt(n,t.dispatchConfig.registrationName))&&(t._dispatchListeners=ue(t._dispatchListeners,e),t._dispatchInstances=ue(t._dispatchInstances,n))}function Yt(n){n&&n.dispatchConfig.registrationName&&Xt(n._targetInst,null,n)}function Zt(n){de(n,Gt)}var Qt=null,Jt=null,nr=null;function er(){if(nr)return nr;var n,e,t=Jt,r=t.length,a="value"in Qt?Qt.value:Qt.textContent,o=a.length;for(n=0;n<r&&t[n]===a[n];n++);var i=r-n;for(e=1;e<=i&&t[r-e]===a[o-e];e++);return nr=a.slice(n,1<e?1-e:void 0)}function tr(){return!0}function rr(){return!1}function ar(n,e,t,r){for(var a in this.dispatchConfig=n,this._targetInst=e,this.nativeEvent=t,n=this.constructor.Interface,n)n.hasOwnProperty(a)&&((e=n[a])?this[a]=e(t):"target"===a?this.target=r:this[a]=t[a]);return this.isDefaultPrevented=(null!=t.defaultPrevented?t.defaultPrevented:!1===t.returnValue)?tr:rr,this.isPropagationStopped=rr,this}function or(n,e,t,r){if(this.eventPool.length){var a=this.eventPool.pop();return this.call(a,n,e,t,r),a}return new this(n,e,t,r)}function ir(n){if(!(n instanceof this))throw Error(i(279));n.destructor(),10>this.eventPool.length&&this.eventPool.push(n)}function lr(n){n.eventPool=[],n.getPooled=or,n.release=ir}a(ar.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():"unknown"!==typeof n.returnValue&&(n.returnValue=!1),this.isDefaultPrevented=tr)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():"unknown"!==typeof n.cancelBubble&&(n.cancelBubble=!0),this.isPropagationStopped=tr)},persist:function(){this.isPersistent=tr},isPersistent:rr,destructor:function(){var n,e=this.constructor.Interface;for(n in e)this[n]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=rr,this._dispatchInstances=this._dispatchListeners=null}}),ar.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(n){return n.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ar.extend=function(n){function e(){}function t(){return r.apply(this,arguments)}var r=this;e.prototype=r.prototype;var o=new e;return a(o,t.prototype),t.prototype=o,t.prototype.constructor=t,t.Interface=a({},r.Interface,n),t.extend=r.extend,lr(t),t},lr(ar);var sr=ar.extend({data:null}),cr=ar.extend({data:null}),pr=[9,13,27,32],ur=S&&"CompositionEvent"in window,dr=null;S&&"documentMode"in document&&(dr=document.documentMode);var mr=S&&"TextEvent"in window&&!dr,fr=S&&(!ur||dr&&8<dr&&11>=dr),hr=String.fromCharCode(32),xr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},gr=!1;function yr(n,e){switch(n){case"keyup":return-1!==pr.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Cr(n){return n=n.detail,"object"===typeof n&&"data"in n?n.data:null}var wr=!1;function vr(n,e){switch(n){case"compositionend":return Cr(e);case"keypress":return 32!==e.which?null:(gr=!0,hr);case"textInput":return n=e.data,n===hr&&gr?null:n;default:return null}}function br(n,e){if(wr)return"compositionend"===n||!ur&&yr(n,e)?(n=er(),nr=Jt=Qt=null,wr=!1,n):null;switch(n){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return fr&&"ko"!==e.locale?null:e.data;default:return null}}var kr={eventTypes:xr,extractEvents:function(n,e,t,r){var a;if(ur)n:{switch(n){case"compositionstart":var o=xr.compositionStart;break n;case"compositionend":o=xr.compositionEnd;break n;case"compositionupdate":o=xr.compositionUpdate;break n}o=void 0}else wr?yr(n,t)&&(o=xr.compositionEnd):"keydown"===n&&229===t.keyCode&&(o=xr.compositionStart);return o?(fr&&"ko"!==t.locale&&(wr||o!==xr.compositionStart?o===xr.compositionEnd&&wr&&(a=er()):(Qt=r,Jt="value"in Qt?Qt.value:Qt.textContent,wr=!0)),o=sr.getPooled(o,e,t,r),a?o.data=a:(a=Cr(t),null!==a&&(o.data=a)),Zt(o),a=o):a=null,(n=mr?vr(n,t):br(n,t))?(e=cr.getPooled(xr.beforeInput,e,t,r),e.data=n,Zt(e)):e=null,null===a?e:null===e?a:[a,e]}},Vr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Pr(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return"input"===e?!!Vr[n.type]:"textarea"===e}var Nr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Rr(n,e,t){return n=ar.getPooled(Nr.change,n,e,t),n.type="change",_(t),Zt(n),n}var Sr=null,Tr=null;function Er(n){he(n)}function $r(n){var e=Ut(n);if(Sn(e))return n}function Ir(n,e){if("change"===n)return e}var _r=!1;function Fr(){Sr&&(Sr.detachEvent("onpropertychange",Or),Tr=Sr=null)}function Or(n){if("value"===n.propertyName&&$r(Tr))if(n=Rr(Tr,n,xe(n)),j)he(n);else{j=!0;try{O(Er,n)}finally{j=!1,D()}}}function Ar(n,e,t){"focus"===n?(Fr(),Sr=e,Tr=t,Sr.attachEvent("onpropertychange",Or)):"blur"===n&&Fr()}function Mr(n){if("selectionchange"===n||"keyup"===n||"keydown"===n)return $r(Tr)}function zr(n,e){if("click"===n)return $r(e)}function jr(n,e){if("input"===n||"change"===n)return $r(e)}S&&(_r=ge("input")&&(!document.documentMode||9<document.documentMode));var Br={eventTypes:Nr,_isInputEventSupported:_r,extractEvents:function(n,e,t,r){var a=e?Ut(e):window,o=a.nodeName&&a.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===a.type)var i=Ir;else if(Pr(a))if(_r)i=jr;else{i=Mr;var l=Ar}else(o=a.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(i=zr);if(i&&(i=i(n,e)))return Rr(i,t,r);l&&l(n,a,e),"blur"===n&&(n=a._wrapperState)&&n.controlled&&"number"===a.type&&Fn(a,"number",a.value)}},Dr=ar.extend({view:null,detail:null}),Lr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ur(n){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(n):!!(n=Lr[n])&&!!e[n]}function Kr(){return Ur}var qr=0,Wr=0,Hr=!1,Gr=!1,Xr=Dr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Kr,button:null,buttons:null,relatedTarget:function(n){return n.relatedTarget||(n.fromElement===n.srcElement?n.toElement:n.fromElement)},movementX:function(n){if("movementX"in n)return n.movementX;var e=qr;return qr=n.screenX,Hr?"mousemove"===n.type?n.screenX-e:0:(Hr=!0,0)},movementY:function(n){if("movementY"in n)return n.movementY;var e=Wr;return Wr=n.screenY,Gr?"mousemove"===n.type?n.screenY-e:0:(Gr=!0,0)}}),Yr=Xr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Zr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Qr={eventTypes:Zr,extractEvents:function(n,e,t,r,a){var o="mouseover"===n||"pointerover"===n,i="mouseout"===n||"pointerout"===n;if(o&&0===(32&a)&&(t.relatedTarget||t.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i){if(i=e,e=(e=t.relatedTarget||t.toElement)?Dt(e):null,null!==e){var l=ie(e);(e!==l||5!==e.tag&&6!==e.tag)&&(e=null)}}else i=null;if(i===e)return null;if("mouseout"===n||"mouseover"===n)var s=Xr,c=Zr.mouseLeave,p=Zr.mouseEnter,u="mouse";else"pointerout"!==n&&"pointerover"!==n||(s=Yr,c=Zr.pointerLeave,p=Zr.pointerEnter,u="pointer");if(n=null==i?o:Ut(i),o=null==e?o:Ut(e),c=s.getPooled(c,i,t,r),c.type=u+"leave",c.target=n,c.relatedTarget=o,t=s.getPooled(p,e,t,r),t.type=u+"enter",t.target=o,t.relatedTarget=n,r=i,u=e,r&&u)n:{for(s=r,p=u,i=0,n=s;n;n=qt(n))i++;for(n=0,e=p;e;e=qt(e))n++;for(;0<i-n;)s=qt(s),i--;for(;0<n-i;)p=qt(p),n--;for(;i--;){if(s===p||s===p.alternate)break n;s=qt(s),p=qt(p)}s=null}else s=null;for(p=s,s=[];r&&r!==p;){if(i=r.alternate,null!==i&&i===p)break;s.push(r),r=qt(r)}for(r=[];u&&u!==p;){if(i=u.alternate,null!==i&&i===p)break;r.push(u),u=qt(u)}for(u=0;u<s.length;u++)Xt(s[u],"bubbled",c);for(u=r.length;0<u--;)Xt(r[u],"captured",t);return 0===(64&a)?[c]:[c,t]}};function Jr(n,e){return n===e&&(0!==n||1/n===1/e)||n!==n&&e!==e}var na="function"===typeof Object.is?Object.is:Jr,ea=Object.prototype.hasOwnProperty;function ta(n,e){if(na(n,e))return!0;if("object"!==typeof n||null===n||"object"!==typeof e||null===e)return!1;var t=Object.keys(n),r=Object.keys(e);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++)if(!ea.call(e,t[r])||!na(n[t[r]],e[t[r]]))return!1;return!0}var ra=S&&"documentMode"in document&&11>=document.documentMode,aa={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},oa=null,ia=null,la=null,sa=!1;function ca(n,e){var t=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return sa||null==oa||oa!==Ct(t)?null:(t=oa,"selectionStart"in t&&Vt(t)?t={start:t.selectionStart,end:t.selectionEnd}:(t=(t.ownerDocument&&t.ownerDocument.defaultView||window).getSelection(),t={anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}),la&&ta(la,t)?null:(la=t,n=ar.getPooled(aa.select,ia,n,e),n.type="select",n.target=oa,Zt(n),n))}var pa={eventTypes:aa,extractEvents:function(n,e,t,r,a,o){if(a=o||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument),!(o=!a)){n:{a=oe(a),o=N.onSelect;for(var i=0;i<o.length;i++)if(!a.has(o[i])){a=!1;break n}a=!0}o=!a}if(o)return null;switch(a=e?Ut(e):window,n){case"focus":(Pr(a)||"true"===a.contentEditable)&&(oa=a,ia=e,la=null);break;case"blur":la=ia=oa=null;break;case"mousedown":sa=!0;break;case"contextmenu":case"mouseup":case"dragend":return sa=!1,ca(t,r);case"selectionchange":if(ra)break;case"keydown":case"keyup":return ca(t,r)}return null}},ua=ar.extend({animationName:null,elapsedTime:null,pseudoElement:null}),da=ar.extend({clipboardData:function(n){return"clipboardData"in n?n.clipboardData:window.clipboardData}}),ma=Dr.extend({relatedTarget:null});function fa(n){var e=n.keyCode;return"charCode"in n?(n=n.charCode,0===n&&13===e&&(n=13)):n=e,10===n&&(n=13),32<=n||13===n?n:0}var ha={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xa={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ga=Dr.extend({key:function(n){if(n.key){var e=ha[n.key]||n.key;if("Unidentified"!==e)return e}return"keypress"===n.type?(n=fa(n),13===n?"Enter":String.fromCharCode(n)):"keydown"===n.type||"keyup"===n.type?xa[n.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Kr,charCode:function(n){return"keypress"===n.type?fa(n):0},keyCode:function(n){return"keydown"===n.type||"keyup"===n.type?n.keyCode:0},which:function(n){return"keypress"===n.type?fa(n):"keydown"===n.type||"keyup"===n.type?n.keyCode:0}}),ya=Xr.extend({dataTransfer:null}),Ca=Dr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Kr}),wa=ar.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),va=Xr.extend({deltaX:function(n){return"deltaX"in n?n.deltaX:"wheelDeltaX"in n?-n.wheelDeltaX:0},deltaY:function(n){return"deltaY"in n?n.deltaY:"wheelDeltaY"in n?-n.wheelDeltaY:"wheelDelta"in n?-n.wheelDelta:0},deltaZ:null,deltaMode:null}),ba={eventTypes:He,extractEvents:function(n,e,t,r){var a=Ge.get(n);if(!a)return null;switch(n){case"keypress":if(0===fa(t))return null;case"keydown":case"keyup":n=ga;break;case"blur":case"focus":n=ma;break;case"click":if(2===t.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":n=Xr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":n=ya;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":n=Ca;break;case Jn:case ne:case ee:n=ua;break;case te:n=wa;break;case"scroll":n=Dr;break;case"wheel":n=va;break;case"copy":case"cut":case"paste":n=da;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":n=Yr;break;default:n=ar}return e=n.getPooled(a,e,t,r),Zt(e),e}};if(C)throw Error(i(101));C=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),v();var ka=Lt;h=Kt,x=ka,g=Ut,R({SimpleEventPlugin:ba,EnterLeaveEventPlugin:Qr,ChangeEventPlugin:Br,SelectEventPlugin:pa,BeforeInputEventPlugin:kr});var Va=[],Pa=-1;function Na(n){0>Pa||(n.current=Va[Pa],Va[Pa]=null,Pa--)}function Ra(n,e){Pa++,Va[Pa]=n.current,n.current=e}var Sa={},Ta={current:Sa},Ea={current:!1},$a=Sa;function Ia(n,e){var t=n.type.contextTypes;if(!t)return Sa;var r=n.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in t)o[a]=e[a];return r&&(n=n.stateNode,n.__reactInternalMemoizedUnmaskedChildContext=e,n.__reactInternalMemoizedMaskedChildContext=o),o}function _a(n){return n=n.childContextTypes,null!==n&&void 0!==n}function Fa(){Na(Ea),Na(Ta)}function Oa(n,e,t){if(Ta.current!==Sa)throw Error(i(168));Ra(Ta,e),Ra(Ea,t)}function Aa(n,e,t){var r=n.stateNode;if(n=e.childContextTypes,"function"!==typeof r.getChildContext)return t;for(var o in r=r.getChildContext(),r)if(!(o in n))throw Error(i(108,bn(e)||"Unknown",o));return a({},t,{},r)}function Ma(n){return n=(n=n.stateNode)&&n.__reactInternalMemoizedMergedChildContext||Sa,$a=Ta.current,Ra(Ta,n),Ra(Ea,Ea.current),!0}function za(n,e,t){var r=n.stateNode;if(!r)throw Error(i(169));t?(n=Aa(n,e,$a),r.__reactInternalMemoizedMergedChildContext=n,Na(Ea),Na(Ta),Ra(Ta,n)):Na(Ea),Ra(Ea,t)}var ja=o.unstable_runWithPriority,Ba=o.unstable_scheduleCallback,Da=o.unstable_cancelCallback,La=o.unstable_requestPaint,Ua=o.unstable_now,Ka=o.unstable_getCurrentPriorityLevel,qa=o.unstable_ImmediatePriority,Wa=o.unstable_UserBlockingPriority,Ha=o.unstable_NormalPriority,Ga=o.unstable_LowPriority,Xa=o.unstable_IdlePriority,Ya={},Za=o.unstable_shouldYield,Qa=void 0!==La?La:function(){},Ja=null,no=null,eo=!1,to=Ua(),ro=1e4>to?Ua:function(){return Ua()-to};function ao(){switch(Ka()){case qa:return 99;case Wa:return 98;case Ha:return 97;case Ga:return 96;case Xa:return 95;default:throw Error(i(332))}}function oo(n){switch(n){case 99:return qa;case 98:return Wa;case 97:return Ha;case 96:return Ga;case 95:return Xa;default:throw Error(i(332))}}function io(n,e){return n=oo(n),ja(n,e)}function lo(n,e,t){return n=oo(n),Ba(n,e,t)}function so(n){return null===Ja?(Ja=[n],no=Ba(qa,po)):Ja.push(n),Ya}function co(){if(null!==no){var n=no;no=null,Da(n)}po()}function po(){if(!eo&&null!==Ja){eo=!0;var n=0;try{var e=Ja;io(99,(function(){for(;n<e.length;n++){var t=e[n];do{t=t(!0)}while(null!==t)}})),Ja=null}catch(t){throw null!==Ja&&(Ja=Ja.slice(n+1)),Ba(qa,co),t}finally{eo=!1}}}function uo(n,e,t){return t/=10,1073741821-(1+((1073741821-n+e/10)/t|0))*t}function mo(n,e){if(n&&n.defaultProps)for(var t in e=a({},e),n=n.defaultProps,n)void 0===e[t]&&(e[t]=n[t]);return e}var fo={current:null},ho=null,xo=null,go=null;function yo(){go=xo=ho=null}function Co(n){var e=fo.current;Na(fo),n.type._context._currentValue=e}function wo(n,e){for(;null!==n;){var t=n.alternate;if(n.childExpirationTime<e)n.childExpirationTime=e,null!==t&&t.childExpirationTime<e&&(t.childExpirationTime=e);else{if(!(null!==t&&t.childExpirationTime<e))break;t.childExpirationTime=e}n=n.return}}function vo(n,e){ho=n,go=xo=null,n=n.dependencies,null!==n&&null!==n.firstContext&&(n.expirationTime>=e&&(Gi=!0),n.firstContext=null)}function bo(n,e){if(go!==n&&!1!==e&&0!==e)if("number"===typeof e&&1073741823!==e||(go=n,e=1073741823),e={context:n,observedBits:e,next:null},null===xo){if(null===ho)throw Error(i(308));xo=e,ho.dependencies={expirationTime:0,firstContext:e,responders:null}}else xo=xo.next=e;return n._currentValue}var ko=!1;function Vo(n){n.updateQueue={baseState:n.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function Po(n,e){n=n.updateQueue,e.updateQueue===n&&(e.updateQueue={baseState:n.baseState,baseQueue:n.baseQueue,shared:n.shared,effects:n.effects})}function No(n,e){return n={expirationTime:n,suspenseConfig:e,tag:0,payload:null,callback:null,next:null},n.next=n}function Ro(n,e){if(n=n.updateQueue,null!==n){n=n.shared;var t=n.pending;null===t?e.next=e:(e.next=t.next,t.next=e),n.pending=e}}function So(n,e){var t=n.alternate;null!==t&&Po(t,n),n=n.updateQueue,t=n.baseQueue,null===t?(n.baseQueue=e.next=e,e.next=e):(e.next=t.next,t.next=e)}function To(n,e,t,r){var o=n.updateQueue;ko=!1;var i=o.baseQueue,l=o.shared.pending;if(null!==l){if(null!==i){var s=i.next;i.next=l.next,l.next=s}i=l,o.shared.pending=null,s=n.alternate,null!==s&&(s=s.updateQueue,null!==s&&(s.baseQueue=l))}if(null!==i){s=i.next;var c=o.baseState,p=0,u=null,d=null,m=null;if(null!==s){var f=s;do{if(l=f.expirationTime,l<r){var h={expirationTime:f.expirationTime,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null};null===m?(d=m=h,u=c):m=m.next=h,l>p&&(p=l)}else{null!==m&&(m=m.next={expirationTime:1073741823,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null}),As(l,f.suspenseConfig);n:{var x=n,g=f;switch(l=e,h=t,g.tag){case 1:if(x=g.payload,"function"===typeof x){c=x.call(h,c,l);break n}c=x;break n;case 3:x.effectTag=-4097&x.effectTag|64;case 0:if(x=g.payload,l="function"===typeof x?x.call(h,c,l):x,null===l||void 0===l)break n;c=a({},c,l);break n;case 2:ko=!0}}null!==f.callback&&(n.effectTag|=32,l=o.effects,null===l?o.effects=[f]:l.push(f))}if(f=f.next,null===f||f===s){if(l=o.shared.pending,null===l)break;f=i.next=l.next,l.next=s,o.baseQueue=i=l,o.shared.pending=null}}while(1)}null===m?u=c:m.next=d,o.baseState=u,o.baseQueue=m,Ms(p),n.expirationTime=p,n.memoizedState=c}}function Eo(n,e,t){if(n=e.effects,e.effects=null,null!==n)for(e=0;e<n.length;e++){var r=n[e],a=r.callback;if(null!==a){if(r.callback=null,r=a,a=t,"function"!==typeof r)throw Error(i(191,r));r.call(a)}}}var $o=nn.ReactCurrentBatchConfig,Io=(new r.Component).refs;function _o(n,e,t,r){e=n.memoizedState,t=t(r,e),t=null===t||void 0===t?e:a({},e,t),n.memoizedState=t,0===n.expirationTime&&(n.updateQueue.baseState=t)}var Fo={isMounted:function(n){return!!(n=n._reactInternalFiber)&&ie(n)===n},enqueueSetState:function(n,e,t){n=n._reactInternalFiber;var r=bs(),a=$o.suspense;r=ks(r,n,a),a=No(r,a),a.payload=e,void 0!==t&&null!==t&&(a.callback=t),Ro(n,a),Vs(n,r)},enqueueReplaceState:function(n,e,t){n=n._reactInternalFiber;var r=bs(),a=$o.suspense;r=ks(r,n,a),a=No(r,a),a.tag=1,a.payload=e,void 0!==t&&null!==t&&(a.callback=t),Ro(n,a),Vs(n,r)},enqueueForceUpdate:function(n,e){n=n._reactInternalFiber;var t=bs(),r=$o.suspense;t=ks(t,n,r),r=No(t,r),r.tag=2,void 0!==e&&null!==e&&(r.callback=e),Ro(n,r),Vs(n,t)}};function Oo(n,e,t,r,a,o,i){return n=n.stateNode,"function"===typeof n.shouldComponentUpdate?n.shouldComponentUpdate(r,o,i):!e.prototype||!e.prototype.isPureReactComponent||(!ta(t,r)||!ta(a,o))}function Ao(n,e,t){var r=!1,a=Sa,o=e.contextType;return"object"===typeof o&&null!==o?o=bo(o):(a=_a(e)?$a:Ta.current,r=e.contextTypes,o=(r=null!==r&&void 0!==r)?Ia(n,a):Sa),e=new e(t,o),n.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=Fo,n.stateNode=e,e._reactInternalFiber=n,r&&(n=n.stateNode,n.__reactInternalMemoizedUnmaskedChildContext=a,n.__reactInternalMemoizedMaskedChildContext=o),e}function Mo(n,e,t,r){n=e.state,"function"===typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(t,r),"function"===typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(t,r),e.state!==n&&Fo.enqueueReplaceState(e,e.state,null)}function zo(n,e,t,r){var a=n.stateNode;a.props=t,a.state=n.memoizedState,a.refs=Io,Vo(n);var o=e.contextType;"object"===typeof o&&null!==o?a.context=bo(o):(o=_a(e)?$a:Ta.current,a.context=Ia(n,o)),To(n,t,a,r),a.state=n.memoizedState,o=e.getDerivedStateFromProps,"function"===typeof o&&(_o(n,e,o,t),a.state=n.memoizedState),"function"===typeof e.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(e=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),e!==a.state&&Fo.enqueueReplaceState(a,a.state,null),To(n,t,a,r),a.state=n.memoizedState),"function"===typeof a.componentDidMount&&(n.effectTag|=4)}var jo=Array.isArray;function Bo(n,e,t){if(n=t.ref,null!==n&&"function"!==typeof n&&"object"!==typeof n){if(t._owner){if(t=t._owner,t){if(1!==t.tag)throw Error(i(309));var r=t.stateNode}if(!r)throw Error(i(147,n));var a=""+n;return null!==e&&null!==e.ref&&"function"===typeof e.ref&&e.ref._stringRef===a?e.ref:(e=function(n){var e=r.refs;e===Io&&(e=r.refs={}),null===n?delete e[a]:e[a]=n},e._stringRef=a,e)}if("string"!==typeof n)throw Error(i(284));if(!t._owner)throw Error(i(290,n))}return n}function Do(n,e){if("textarea"!==n.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,""))}function Lo(n){function e(e,t){if(n){var r=e.lastEffect;null!==r?(r.nextEffect=t,e.lastEffect=t):e.firstEffect=e.lastEffect=t,t.nextEffect=null,t.effectTag=8}}function t(t,r){if(!n)return null;for(;null!==r;)e(t,r),r=r.sibling;return null}function r(n,e){for(n=new Map;null!==e;)null!==e.key?n.set(e.key,e):n.set(e.index,e),e=e.sibling;return n}function a(n,e){return n=oc(n,e),n.index=0,n.sibling=null,n}function o(e,t,r){return e.index=r,n?(r=e.alternate,null!==r?(r=r.index,r<t?(e.effectTag=2,t):r):(e.effectTag=2,t)):t}function l(e){return n&&null===e.alternate&&(e.effectTag=2),e}function s(n,e,t,r){return null===e||6!==e.tag?(e=sc(t,n.mode,r),e.return=n,e):(e=a(e,t),e.return=n,e)}function c(n,e,t,r){return null!==e&&e.elementType===t.type?(r=a(e,t.props),r.ref=Bo(n,e,t),r.return=n,r):(r=ic(t.type,t.key,t.props,null,n.mode,r),r.ref=Bo(n,e,t),r.return=n,r)}function p(n,e,t,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==t.containerInfo||e.stateNode.implementation!==t.implementation?(e=cc(t,n.mode,r),e.return=n,e):(e=a(e,t.children||[]),e.return=n,e)}function u(n,e,t,r,o){return null===e||7!==e.tag?(e=lc(t,n.mode,r,o),e.return=n,e):(e=a(e,t),e.return=n,e)}function d(n,e,t){if("string"===typeof e||"number"===typeof e)return e=sc(""+e,n.mode,t),e.return=n,e;if("object"===typeof e&&null!==e){switch(e.$$typeof){case an:return t=ic(e.type,e.key,e.props,null,n.mode,t),t.ref=Bo(n,null,e),t.return=n,t;case on:return e=cc(e,n.mode,t),e.return=n,e}if(jo(e)||wn(e))return e=lc(e,n.mode,t,null),e.return=n,e;Do(n,e)}return null}function m(n,e,t,r){var a=null!==e?e.key:null;if("string"===typeof t||"number"===typeof t)return null!==a?null:s(n,e,""+t,r);if("object"===typeof t&&null!==t){switch(t.$$typeof){case an:return t.key===a?t.type===ln?u(n,e,t.props.children,r,a):c(n,e,t,r):null;case on:return t.key===a?p(n,e,t,r):null}if(jo(t)||wn(t))return null!==a?null:u(n,e,t,r,null);Do(n,t)}return null}function f(n,e,t,r,a){if("string"===typeof r||"number"===typeof r)return n=n.get(t)||null,s(e,n,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case an:return n=n.get(null===r.key?t:r.key)||null,r.type===ln?u(e,n,r.props.children,a,r.key):c(e,n,r,a);case on:return n=n.get(null===r.key?t:r.key)||null,p(e,n,r,a)}if(jo(r)||wn(r))return n=n.get(t)||null,u(e,n,r,a,null);Do(e,r)}return null}function h(a,i,l,s){for(var c=null,p=null,u=i,h=i=0,x=null;null!==u&&h<l.length;h++){u.index>h?(x=u,u=null):x=u.sibling;var g=m(a,u,l[h],s);if(null===g){null===u&&(u=x);break}n&&u&&null===g.alternate&&e(a,u),i=o(g,i,h),null===p?c=g:p.sibling=g,p=g,u=x}if(h===l.length)return t(a,u),c;if(null===u){for(;h<l.length;h++)u=d(a,l[h],s),null!==u&&(i=o(u,i,h),null===p?c=u:p.sibling=u,p=u);return c}for(u=r(a,u);h<l.length;h++)x=f(u,a,h,l[h],s),null!==x&&(n&&null!==x.alternate&&u.delete(null===x.key?h:x.key),i=o(x,i,h),null===p?c=x:p.sibling=x,p=x);return n&&u.forEach((function(n){return e(a,n)})),c}function x(a,l,s,c){var p=wn(s);if("function"!==typeof p)throw Error(i(150));if(s=p.call(s),null==s)throw Error(i(151));for(var u=p=null,h=l,x=l=0,g=null,y=s.next();null!==h&&!y.done;x++,y=s.next()){h.index>x?(g=h,h=null):g=h.sibling;var C=m(a,h,y.value,c);if(null===C){null===h&&(h=g);break}n&&h&&null===C.alternate&&e(a,h),l=o(C,l,x),null===u?p=C:u.sibling=C,u=C,h=g}if(y.done)return t(a,h),p;if(null===h){for(;!y.done;x++,y=s.next())y=d(a,y.value,c),null!==y&&(l=o(y,l,x),null===u?p=y:u.sibling=y,u=y);return p}for(h=r(a,h);!y.done;x++,y=s.next())y=f(h,a,x,y.value,c),null!==y&&(n&&null!==y.alternate&&h.delete(null===y.key?x:y.key),l=o(y,l,x),null===u?p=y:u.sibling=y,u=y);return n&&h.forEach((function(n){return e(a,n)})),p}return function(n,r,o,s){var c="object"===typeof o&&null!==o&&o.type===ln&&null===o.key;c&&(o=o.props.children);var p="object"===typeof o&&null!==o;if(p)switch(o.$$typeof){case an:n:{for(p=o.key,c=r;null!==c;){if(c.key===p){switch(c.tag){case 7:if(o.type===ln){t(n,c.sibling),r=a(c,o.props.children),r.return=n,n=r;break n}break;default:if(c.elementType===o.type){t(n,c.sibling),r=a(c,o.props),r.ref=Bo(n,c,o),r.return=n,n=r;break n}}t(n,c);break}e(n,c),c=c.sibling}o.type===ln?(r=lc(o.props.children,n.mode,s,o.key),r.return=n,n=r):(s=ic(o.type,o.key,o.props,null,n.mode,s),s.ref=Bo(n,r,o),s.return=n,n=s)}return l(n);case on:n:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){t(n,r.sibling),r=a(r,o.children||[]),r.return=n,n=r;break n}t(n,r);break}e(n,r),r=r.sibling}r=cc(o,n.mode,s),r.return=n,n=r}return l(n)}if("string"===typeof o||"number"===typeof o)return o=""+o,null!==r&&6===r.tag?(t(n,r.sibling),r=a(r,o),r.return=n,n=r):(t(n,r),r=sc(o,n.mode,s),r.return=n,n=r),l(n);if(jo(o))return h(n,r,o,s);if(wn(o))return x(n,r,o,s);if(p&&Do(n,o),"undefined"===typeof o&&!c)switch(n.tag){case 1:case 0:throw n=n.type,Error(i(152,n.displayName||n.name||"Component"))}return t(n,r)}}var Uo=Lo(!0),Ko=Lo(!1),qo={},Wo={current:qo},Ho={current:qo},Go={current:qo};function Xo(n){if(n===qo)throw Error(i(174));return n}function Yo(n,e){switch(Ra(Go,e),Ra(Ho,n),Ra(Wo,qo),n=e.nodeType,n){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Kn(null,"");break;default:n=8===n?e.parentNode:e,e=n.namespaceURI||null,n=n.tagName,e=Kn(e,n)}Na(Wo),Ra(Wo,e)}function Zo(){Na(Wo),Na(Ho),Na(Go)}function Qo(n){Xo(Go.current);var e=Xo(Wo.current),t=Kn(e,n.type);e!==t&&(Ra(Ho,n),Ra(Wo,t))}function Jo(n){Ho.current===n&&(Na(Wo),Na(Ho))}var ni={current:0};function ei(n){for(var e=n;null!==e;){if(13===e.tag){var t=e.memoizedState;if(null!==t&&(t=t.dehydrated,null===t||t.data===Rt||t.data===St))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!==(64&e.effectTag))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}function ti(n,e){return{responder:n,props:e}}var ri=nn.ReactCurrentDispatcher,ai=nn.ReactCurrentBatchConfig,oi=0,ii=null,li=null,si=null,ci=!1;function pi(){throw Error(i(321))}function ui(n,e){if(null===e)return!1;for(var t=0;t<e.length&&t<n.length;t++)if(!na(n[t],e[t]))return!1;return!0}function di(n,e,t,r,a,o){if(oi=o,ii=e,e.memoizedState=null,e.updateQueue=null,e.expirationTime=0,ri.current=null===n||null===n.memoizedState?Oi:Ai,n=t(r,a),e.expirationTime===oi){o=0;do{if(e.expirationTime=0,!(25>o))throw Error(i(301));o+=1,si=li=null,e.updateQueue=null,ri.current=Mi,n=t(r,a)}while(e.expirationTime===oi)}if(ri.current=Fi,e=null!==li&&null!==li.next,oi=0,si=li=ii=null,ci=!1,e)throw Error(i(300));return n}function mi(){var n={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===si?ii.memoizedState=si=n:si=si.next=n,si}function fi(){if(null===li){var n=ii.alternate;n=null!==n?n.memoizedState:null}else n=li.next;var e=null===si?ii.memoizedState:si.next;if(null!==e)si=e,li=n;else{if(null===n)throw Error(i(310));li=n,n={memoizedState:li.memoizedState,baseState:li.baseState,baseQueue:li.baseQueue,queue:li.queue,next:null},null===si?ii.memoizedState=si=n:si=si.next=n}return si}function hi(n,e){return"function"===typeof e?e(n):e}function xi(n){var e=fi(),t=e.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=n;var r=li,a=r.baseQueue,o=t.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,t.pending=null}if(null!==a){a=a.next,r=r.baseState;var s=l=o=null,c=a;do{var p=c.expirationTime;if(p<oi){var u={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===s?(l=s=u,o=r):s=s.next=u,p>ii.expirationTime&&(ii.expirationTime=p,Ms(p))}else null!==s&&(s=s.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),As(p,c.suspenseConfig),r=c.eagerReducer===n?c.eagerState:n(r,c.action);c=c.next}while(null!==c&&c!==a);null===s?o=r:s.next=l,na(r,e.memoizedState)||(Gi=!0),e.memoizedState=r,e.baseState=o,e.baseQueue=s,t.lastRenderedState=r}return[e.memoizedState,t.dispatch]}function gi(n){var e=fi(),t=e.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=n;var r=t.dispatch,a=t.pending,o=e.memoizedState;if(null!==a){t.pending=null;var l=a=a.next;do{o=n(o,l.action),l=l.next}while(l!==a);na(o,e.memoizedState)||(Gi=!0),e.memoizedState=o,null===e.baseQueue&&(e.baseState=o),t.lastRenderedState=o}return[o,r]}function yi(n){var e=mi();return"function"===typeof n&&(n=n()),e.memoizedState=e.baseState=n,n=e.queue={pending:null,dispatch:null,lastRenderedReducer:hi,lastRenderedState:n},n=n.dispatch=_i.bind(null,ii,n),[e.memoizedState,n]}function Ci(n,e,t,r){return n={tag:n,create:e,destroy:t,deps:r,next:null},e=ii.updateQueue,null===e?(e={lastEffect:null},ii.updateQueue=e,e.lastEffect=n.next=n):(t=e.lastEffect,null===t?e.lastEffect=n.next=n:(r=t.next,t.next=n,n.next=r,e.lastEffect=n)),n}function wi(){return fi().memoizedState}function vi(n,e,t,r){var a=mi();ii.effectTag|=n,a.memoizedState=Ci(1|e,t,void 0,void 0===r?null:r)}function bi(n,e,t,r){var a=fi();r=void 0===r?null:r;var o=void 0;if(null!==li){var i=li.memoizedState;if(o=i.destroy,null!==r&&ui(r,i.deps))return void Ci(e,t,o,r)}ii.effectTag|=n,a.memoizedState=Ci(1|e,t,o,r)}function ki(n,e){return vi(516,4,n,e)}function Vi(n,e){return bi(516,4,n,e)}function Pi(n,e){return bi(4,2,n,e)}function Ni(n,e){return"function"===typeof e?(n=n(),e(n),function(){e(null)}):null!==e&&void 0!==e?(n=n(),e.current=n,function(){e.current=null}):void 0}function Ri(n,e,t){return t=null!==t&&void 0!==t?t.concat([n]):null,bi(4,2,Ni.bind(null,e,n),t)}function Si(){}function Ti(n,e){return mi().memoizedState=[n,void 0===e?null:e],n}function Ei(n,e){var t=fi();e=void 0===e?null:e;var r=t.memoizedState;return null!==r&&null!==e&&ui(e,r[1])?r[0]:(t.memoizedState=[n,e],n)}function $i(n,e){var t=fi();e=void 0===e?null:e;var r=t.memoizedState;return null!==r&&null!==e&&ui(e,r[1])?r[0]:(n=n(),t.memoizedState=[n,e],n)}function Ii(n,e,t){var r=ao();io(98>r?98:r,(function(){n(!0)})),io(97<r?97:r,(function(){var r=ai.suspense;ai.suspense=void 0===e?null:e;try{n(!1),t()}finally{ai.suspense=r}}))}function _i(n,e,t){var r=bs(),a=$o.suspense;r=ks(r,n,a),a={expirationTime:r,suspenseConfig:a,action:t,eagerReducer:null,eagerState:null,next:null};var o=e.pending;if(null===o?a.next=a:(a.next=o.next,o.next=a),e.pending=a,o=n.alternate,n===ii||null!==o&&o===ii)ci=!0,a.expirationTime=oi,ii.expirationTime=oi;else{if(0===n.expirationTime&&(null===o||0===o.expirationTime)&&(o=e.lastRenderedReducer,null!==o))try{var i=e.lastRenderedState,l=o(i,t);if(a.eagerReducer=o,a.eagerState=l,na(l,i))return}catch(s){}Vs(n,r)}}var Fi={readContext:bo,useCallback:pi,useContext:pi,useEffect:pi,useImperativeHandle:pi,useLayoutEffect:pi,useMemo:pi,useReducer:pi,useRef:pi,useState:pi,useDebugValue:pi,useResponder:pi,useDeferredValue:pi,useTransition:pi},Oi={readContext:bo,useCallback:Ti,useContext:bo,useEffect:ki,useImperativeHandle:function(n,e,t){return t=null!==t&&void 0!==t?t.concat([n]):null,vi(4,2,Ni.bind(null,e,n),t)},useLayoutEffect:function(n,e){return vi(4,2,n,e)},useMemo:function(n,e){var t=mi();return e=void 0===e?null:e,n=n(),t.memoizedState=[n,e],n},useReducer:function(n,e,t){var r=mi();return e=void 0!==t?t(e):e,r.memoizedState=r.baseState=e,n=r.queue={pending:null,dispatch:null,lastRenderedReducer:n,lastRenderedState:e},n=n.dispatch=_i.bind(null,ii,n),[r.memoizedState,n]},useRef:function(n){var e=mi();return n={current:n},e.memoizedState=n},useState:yi,useDebugValue:Si,useResponder:ti,useDeferredValue:function(n,e){var t=yi(n),r=t[0],a=t[1];return ki((function(){var t=ai.suspense;ai.suspense=void 0===e?null:e;try{a(n)}finally{ai.suspense=t}}),[n,e]),r},useTransition:function(n){var e=yi(!1),t=e[0];return e=e[1],[Ti(Ii.bind(null,e,n),[e,n]),t]}},Ai={readContext:bo,useCallback:Ei,useContext:bo,useEffect:Vi,useImperativeHandle:Ri,useLayoutEffect:Pi,useMemo:$i,useReducer:xi,useRef:wi,useState:function(){return xi(hi)},useDebugValue:Si,useResponder:ti,useDeferredValue:function(n,e){var t=xi(hi),r=t[0],a=t[1];return Vi((function(){var t=ai.suspense;ai.suspense=void 0===e?null:e;try{a(n)}finally{ai.suspense=t}}),[n,e]),r},useTransition:function(n){var e=xi(hi),t=e[0];return e=e[1],[Ei(Ii.bind(null,e,n),[e,n]),t]}},Mi={readContext:bo,useCallback:Ei,useContext:bo,useEffect:Vi,useImperativeHandle:Ri,useLayoutEffect:Pi,useMemo:$i,useReducer:gi,useRef:wi,useState:function(){return gi(hi)},useDebugValue:Si,useResponder:ti,useDeferredValue:function(n,e){var t=gi(hi),r=t[0],a=t[1];return Vi((function(){var t=ai.suspense;ai.suspense=void 0===e?null:e;try{a(n)}finally{ai.suspense=t}}),[n,e]),r},useTransition:function(n){var e=gi(hi),t=e[0];return e=e[1],[Ei(Ii.bind(null,e,n),[e,n]),t]}},zi=null,ji=null,Bi=!1;function Di(n,e){var t=tc(5,null,null,0);t.elementType="DELETED",t.type="DELETED",t.stateNode=e,t.return=n,t.effectTag=8,null!==n.lastEffect?(n.lastEffect.nextEffect=t,n.lastEffect=t):n.firstEffect=n.lastEffect=t}function Li(n,e){switch(n.tag){case 5:var t=n.type;return e=1!==e.nodeType||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e,null!==e&&(n.stateNode=e,!0);case 6:return e=""===n.pendingProps||3!==e.nodeType?null:e,null!==e&&(n.stateNode=e,!0);case 13:return!1;default:return!1}}function Ui(n){if(Bi){var e=ji;if(e){var t=e;if(!Li(n,e)){if(e=Ot(t.nextSibling),!e||!Li(n,e))return n.effectTag=-1025&n.effectTag|2,Bi=!1,void(zi=n);Di(zi,t)}zi=n,ji=Ot(e.firstChild)}else n.effectTag=-1025&n.effectTag|2,Bi=!1,zi=n}}function Ki(n){for(n=n.return;null!==n&&5!==n.tag&&3!==n.tag&&13!==n.tag;)n=n.return;zi=n}function qi(n){if(n!==zi)return!1;if(!Bi)return Ki(n),Bi=!0,!1;var e=n.type;if(5!==n.tag||"head"!==e&&"body"!==e&&!It(e,n.memoizedProps))for(e=ji;e;)Di(n,e),e=Ot(e.nextSibling);if(Ki(n),13===n.tag){if(n=n.memoizedState,n=null!==n?n.dehydrated:null,!n)throw Error(i(317));n:{for(n=n.nextSibling,e=0;n;){if(8===n.nodeType){var t=n.data;if(t===Nt){if(0===e){ji=Ot(n.nextSibling);break n}e--}else t!==Pt&&t!==St&&t!==Rt||e++}n=n.nextSibling}ji=null}}else ji=zi?Ot(n.stateNode.nextSibling):null;return!0}function Wi(){ji=zi=null,Bi=!1}var Hi=nn.ReactCurrentOwner,Gi=!1;function Xi(n,e,t,r){e.child=null===n?Ko(e,null,t,r):Uo(e,n.child,t,r)}function Yi(n,e,t,r,a){t=t.render;var o=e.ref;return vo(e,a),r=di(n,e,t,r,o,a),null===n||Gi?(e.effectTag|=1,Xi(n,e,r,a),e.child):(e.updateQueue=n.updateQueue,e.effectTag&=-517,n.expirationTime<=a&&(n.expirationTime=0),ml(n,e,a))}function Zi(n,e,t,r,a,o){if(null===n){var i=t.type;return"function"!==typeof i||rc(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?(n=ic(t.type,null,r,null,e.mode,o),n.ref=e.ref,n.return=e,e.child=n):(e.tag=15,e.type=i,Qi(n,e,i,r,a,o))}return i=n.child,a<o&&(a=i.memoizedProps,t=t.compare,t=null!==t?t:ta,t(a,r)&&n.ref===e.ref)?ml(n,e,o):(e.effectTag|=1,n=oc(i,r),n.ref=e.ref,n.return=e,e.child=n)}function Qi(n,e,t,r,a,o){return null!==n&&ta(n.memoizedProps,r)&&n.ref===e.ref&&(Gi=!1,a<o)?(e.expirationTime=n.expirationTime,ml(n,e,o)):nl(n,e,t,r,o)}function Ji(n,e){var t=e.ref;(null===n&&null!==t||null!==n&&n.ref!==t)&&(e.effectTag|=128)}function nl(n,e,t,r,a){var o=_a(t)?$a:Ta.current;return o=Ia(e,o),vo(e,a),t=di(n,e,t,r,o,a),null===n||Gi?(e.effectTag|=1,Xi(n,e,t,a),e.child):(e.updateQueue=n.updateQueue,e.effectTag&=-517,n.expirationTime<=a&&(n.expirationTime=0),ml(n,e,a))}function el(n,e,t,r,a){if(_a(t)){var o=!0;Ma(e)}else o=!1;if(vo(e,a),null===e.stateNode)null!==n&&(n.alternate=null,e.alternate=null,e.effectTag|=2),Ao(e,t,r),zo(e,t,r,a),r=!0;else if(null===n){var i=e.stateNode,l=e.memoizedProps;i.props=l;var s=i.context,c=t.contextType;"object"===typeof c&&null!==c?c=bo(c):(c=_a(t)?$a:Ta.current,c=Ia(e,c));var p=t.getDerivedStateFromProps,u="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate;u||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==r||s!==c)&&Mo(e,i,r,c),ko=!1;var d=e.memoizedState;i.state=d,To(e,r,i,a),s=e.memoizedState,l!==r||d!==s||Ea.current||ko?("function"===typeof p&&(_o(e,t,p,r),s=e.memoizedState),(l=ko||Oo(e,t,l,r,d,s,c))?(u||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(e.effectTag|=4)):("function"===typeof i.componentDidMount&&(e.effectTag|=4),e.memoizedProps=r,e.memoizedState=s),i.props=r,i.state=s,i.context=c,r=l):("function"===typeof i.componentDidMount&&(e.effectTag|=4),r=!1)}else i=e.stateNode,Po(n,e),l=e.memoizedProps,i.props=e.type===e.elementType?l:mo(e.type,l),s=i.context,c=t.contextType,"object"===typeof c&&null!==c?c=bo(c):(c=_a(t)?$a:Ta.current,c=Ia(e,c)),p=t.getDerivedStateFromProps,(u="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==r||s!==c)&&Mo(e,i,r,c),ko=!1,s=e.memoizedState,i.state=s,To(e,r,i,a),d=e.memoizedState,l!==r||s!==d||Ea.current||ko?("function"===typeof p&&(_o(e,t,p,r),d=e.memoizedState),(p=ko||Oo(e,t,l,r,s,d,c))?(u||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,c),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,c)),"function"===typeof i.componentDidUpdate&&(e.effectTag|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!==typeof i.componentDidUpdate||l===n.memoizedProps&&s===n.memoizedState||(e.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===n.memoizedProps&&s===n.memoizedState||(e.effectTag|=256),e.memoizedProps=r,e.memoizedState=d),i.props=r,i.state=d,i.context=c,r=p):("function"!==typeof i.componentDidUpdate||l===n.memoizedProps&&s===n.memoizedState||(e.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===n.memoizedProps&&s===n.memoizedState||(e.effectTag|=256),r=!1);return tl(n,e,t,r,o,a)}function tl(n,e,t,r,a,o){Ji(n,e);var i=0!==(64&e.effectTag);if(!r&&!i)return a&&za(e,t,!1),ml(n,e,o);r=e.stateNode,Hi.current=e;var l=i&&"function"!==typeof t.getDerivedStateFromError?null:r.render();return e.effectTag|=1,null!==n&&i?(e.child=Uo(e,n.child,null,o),e.child=Uo(e,null,l,o)):Xi(n,e,l,o),e.memoizedState=r.state,a&&za(e,t,!0),e.child}function rl(n){var e=n.stateNode;e.pendingContext?Oa(n,e.pendingContext,e.pendingContext!==e.context):e.context&&Oa(n,e.context,!1),Yo(n,e.containerInfo)}var al,ol,il,ll,sl={dehydrated:null,retryTime:0};function cl(n,e,t){var r,a=e.mode,o=e.pendingProps,i=ni.current,l=!1;if((r=0!==(64&e.effectTag))||(r=0!==(2&i)&&(null===n||null!==n.memoizedState)),r?(l=!0,e.effectTag&=-65):null!==n&&null===n.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(i|=1),Ra(ni,1&i),null===n){if(void 0!==o.fallback&&Ui(e),l){if(l=o.fallback,o=lc(null,a,0,null),o.return=e,0===(2&e.mode))for(n=null!==e.memoizedState?e.child.child:e.child,o.child=n;null!==n;)n.return=o,n=n.sibling;return t=lc(l,a,t,null),t.return=e,o.sibling=t,e.memoizedState=sl,e.child=o,t}return a=o.children,e.memoizedState=null,e.child=Ko(e,null,a,t)}if(null!==n.memoizedState){if(n=n.child,a=n.sibling,l){if(o=o.fallback,t=oc(n,n.pendingProps),t.return=e,0===(2&e.mode)&&(l=null!==e.memoizedState?e.child.child:e.child,l!==n.child))for(t.child=l;null!==l;)l.return=t,l=l.sibling;return a=oc(a,o),a.return=e,t.sibling=a,t.childExpirationTime=0,e.memoizedState=sl,e.child=t,a}return t=Uo(e,n.child,o.children,t),e.memoizedState=null,e.child=t}if(n=n.child,l){if(l=o.fallback,o=lc(null,a,0,null),o.return=e,o.child=n,null!==n&&(n.return=o),0===(2&e.mode))for(n=null!==e.memoizedState?e.child.child:e.child,o.child=n;null!==n;)n.return=o,n=n.sibling;return t=lc(l,a,t,null),t.return=e,o.sibling=t,t.effectTag|=2,o.childExpirationTime=0,e.memoizedState=sl,e.child=o,t}return e.memoizedState=null,e.child=Uo(e,n,o.children,t)}function pl(n,e){n.expirationTime<e&&(n.expirationTime=e);var t=n.alternate;null!==t&&t.expirationTime<e&&(t.expirationTime=e),wo(n.return,e)}function ul(n,e,t,r,a,o){var i=n.memoizedState;null===i?n.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:t,tailExpiration:0,tailMode:a,lastEffect:o}:(i.isBackwards=e,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailExpiration=0,i.tailMode=a,i.lastEffect=o)}function dl(n,e,t){var r=e.pendingProps,a=r.revealOrder,o=r.tail;if(Xi(n,e,r.children,t),r=ni.current,0!==(2&r))r=1&r|2,e.effectTag|=64;else{if(null!==n&&0!==(64&n.effectTag))n:for(n=e.child;null!==n;){if(13===n.tag)null!==n.memoizedState&&pl(n,t);else if(19===n.tag)pl(n,t);else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break n;for(;null===n.sibling;){if(null===n.return||n.return===e)break n;n=n.return}n.sibling.return=n.return,n=n.sibling}r&=1}if(Ra(ni,r),0===(2&e.mode))e.memoizedState=null;else switch(a){case"forwards":for(t=e.child,a=null;null!==t;)n=t.alternate,null!==n&&null===ei(n)&&(a=t),t=t.sibling;t=a,null===t?(a=e.child,e.child=null):(a=t.sibling,t.sibling=null),ul(e,!1,a,t,o,e.lastEffect);break;case"backwards":for(t=null,a=e.child,e.child=null;null!==a;){if(n=a.alternate,null!==n&&null===ei(n)){e.child=a;break}n=a.sibling,a.sibling=t,t=a,a=n}ul(e,!0,t,null,o,e.lastEffect);break;case"together":ul(e,!1,null,null,void 0,e.lastEffect);break;default:e.memoizedState=null}return e.child}function ml(n,e,t){null!==n&&(e.dependencies=n.dependencies);var r=e.expirationTime;if(0!==r&&Ms(r),e.childExpirationTime<t)return null;if(null!==n&&e.child!==n.child)throw Error(i(153));if(null!==e.child){for(n=e.child,t=oc(n,n.pendingProps),e.child=t,t.return=e;null!==n.sibling;)n=n.sibling,t=t.sibling=oc(n,n.pendingProps),t.return=e;t.sibling=null}return e.child}function fl(n,e){switch(n.tailMode){case"hidden":e=n.tail;for(var t=null;null!==e;)null!==e.alternate&&(t=e),e=e.sibling;null===t?n.tail=null:t.sibling=null;break;case"collapsed":t=n.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e||null===n.tail?n.tail=null:n.tail.sibling=null:r.sibling=null}}function hl(n,e,t){var r=e.pendingProps;switch(e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return _a(e.type)&&Fa(),null;case 3:return Zo(),Na(Ea),Na(Ta),t=e.stateNode,t.pendingContext&&(t.context=t.pendingContext,t.pendingContext=null),null!==n&&null!==n.child||!qi(e)||(e.effectTag|=4),ol(e),null;case 5:Jo(e),t=Xo(Go.current);var o=e.type;if(null!==n&&null!=e.stateNode)il(n,e,o,r,t),n.ref!==e.ref&&(e.effectTag|=128);else{if(!r){if(null===e.stateNode)throw Error(i(166));return null}if(n=Xo(Wo.current),qi(e)){r=e.stateNode,o=e.type;var l=e.memoizedProps;switch(r[zt]=e,r[jt]=l,o){case"iframe":case"object":case"embed":rt("load",r);break;case"video":case"audio":for(n=0;n<re.length;n++)rt(re[n],r);break;case"source":rt("error",r);break;case"img":case"image":case"link":rt("error",r),rt("load",r);break;case"form":rt("reset",r),rt("submit",r);break;case"details":rt("toggle",r);break;case"input":En(r,l),rt("invalid",r),gt(t,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},rt("invalid",r),gt(t,"onChange");break;case"textarea":jn(r,l),rt("invalid",r),gt(t,"onChange")}for(var s in ft(o,l),n=null,l)if(l.hasOwnProperty(s)){var c=l[s];"children"===s?"string"===typeof c?r.textContent!==c&&(n=["children",c]):"number"===typeof c&&r.textContent!==""+c&&(n=["children",""+c]):P.hasOwnProperty(s)&&null!=c&&gt(t,s)}switch(o){case"input":Rn(r),_n(r,l,!0);break;case"textarea":Rn(r),Dn(r);break;case"select":case"option":break;default:"function"===typeof l.onClick&&(r.onclick=yt)}t=n,e.updateQueue=t,null!==t&&(e.effectTag|=4)}else{switch(s=9===t.nodeType?t:t.ownerDocument,n===xt&&(n=Un(o)),n===xt?"script"===o?(n=s.createElement("div"),n.innerHTML="<script><\/script>",n=n.removeChild(n.firstChild)):"string"===typeof r.is?n=s.createElement(o,{is:r.is}):(n=s.createElement(o),"select"===o&&(s=n,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):n=s.createElementNS(n,o),n[zt]=e,n[jt]=r,al(n,e,!1,!1),e.stateNode=n,s=ht(o,r),o){case"iframe":case"object":case"embed":rt("load",n),c=r;break;case"video":case"audio":for(c=0;c<re.length;c++)rt(re[c],n);c=r;break;case"source":rt("error",n),c=r;break;case"img":case"image":case"link":rt("error",n),rt("load",n),c=r;break;case"form":rt("reset",n),rt("submit",n),c=r;break;case"details":rt("toggle",n),c=r;break;case"input":En(n,r),c=Tn(n,r),rt("invalid",n),gt(t,"onChange");break;case"option":c=An(n,r);break;case"select":n._wrapperState={wasMultiple:!!r.multiple},c=a({},r,{value:void 0}),rt("invalid",n),gt(t,"onChange");break;case"textarea":jn(n,r),c=zn(n,r),rt("invalid",n),gt(t,"onChange");break;default:c=r}ft(o,c);var p=c;for(l in p)if(p.hasOwnProperty(l)){var u=p[l];"style"===l?dt(n,u):"dangerouslySetInnerHTML"===l?(u=u?u.__html:void 0,null!=u&&Wn(n,u)):"children"===l?"string"===typeof u?("textarea"!==o||""!==u)&&Hn(n,u):"number"===typeof u&&Hn(n,""+u):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(P.hasOwnProperty(l)?null!=u&&gt(t,l):null!=u&&en(n,l,u,s))}switch(o){case"input":Rn(n),_n(n,r,!1);break;case"textarea":Rn(n),Dn(n);break;case"option":null!=r.value&&n.setAttribute("value",""+Vn(r.value));break;case"select":n.multiple=!!r.multiple,t=r.value,null!=t?Mn(n,!!r.multiple,t,!1):null!=r.defaultValue&&Mn(n,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof c.onClick&&(n.onclick=yt)}$t(o,r)&&(e.effectTag|=4)}null!==e.ref&&(e.effectTag|=128)}return null;case 6:if(n&&null!=e.stateNode)ll(n,e,n.memoizedProps,r);else{if("string"!==typeof r&&null===e.stateNode)throw Error(i(166));t=Xo(Go.current),Xo(Wo.current),qi(e)?(t=e.stateNode,r=e.memoizedProps,t[zt]=e,t.nodeValue!==r&&(e.effectTag|=4)):(t=(9===t.nodeType?t:t.ownerDocument).createTextNode(r),t[zt]=e,e.stateNode=t)}return null;case 13:return Na(ni),r=e.memoizedState,0!==(64&e.effectTag)?(e.expirationTime=t,e):(t=null!==r,r=!1,null===n?void 0!==e.memoizedProps.fallback&&qi(e):(o=n.memoizedState,r=null!==o,t||null===o||(o=n.child.sibling,null!==o&&(l=e.firstEffect,null!==l?(e.firstEffect=o,o.nextEffect=l):(e.firstEffect=e.lastEffect=o,o.nextEffect=null),o.effectTag=8))),t&&!r&&0!==(2&e.mode)&&(null===n&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!==(1&ni.current)?ts===Wl&&(ts=Xl):(ts!==Wl&&ts!==Xl||(ts=Yl),0!==ls&&null!==Jl&&(dc(Jl,es),mc(Jl,ls)))),(t||r)&&(e.effectTag|=4),null);case 4:return Zo(),ol(e),null;case 10:return Co(e),null;case 17:return _a(e.type)&&Fa(),null;case 19:if(Na(ni),r=e.memoizedState,null===r)return null;if(o=0!==(64&e.effectTag),l=r.rendering,null===l){if(o)fl(r,!1);else if(ts!==Wl||null!==n&&0!==(64&n.effectTag))for(l=e.child;null!==l;){if(n=ei(l),null!==n){for(e.effectTag|=64,fl(r,!1),o=n.updateQueue,null!==o&&(e.updateQueue=o,e.effectTag|=4),null===r.lastEffect&&(e.firstEffect=null),e.lastEffect=r.lastEffect,r=e.child;null!==r;)o=r,l=t,o.effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,n=o.alternate,null===n?(o.childExpirationTime=0,o.expirationTime=l,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=n.childExpirationTime,o.expirationTime=n.expirationTime,o.child=n.child,o.memoizedProps=n.memoizedProps,o.memoizedState=n.memoizedState,o.updateQueue=n.updateQueue,l=n.dependencies,o.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return Ra(ni,1&ni.current|2),e.child}l=l.sibling}}else{if(!o)if(n=ei(l),null!==n){if(e.effectTag|=64,o=!0,t=n.updateQueue,null!==t&&(e.updateQueue=t,e.effectTag|=4),fl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return e=e.lastEffect=r.lastEffect,null!==e&&(e.nextEffect=null),null}else 2*ro()-r.renderingStartTime>r.tailExpiration&&1<t&&(e.effectTag|=64,o=!0,fl(r,!1),e.expirationTime=e.childExpirationTime=t-1);r.isBackwards?(l.sibling=e.child,e.child=l):(t=r.last,null!==t?t.sibling=l:e.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=ro()+500),t=r.tail,r.rendering=t,r.tail=t.sibling,r.lastEffect=e.lastEffect,r.renderingStartTime=ro(),t.sibling=null,e=ni.current,Ra(ni,o?1&e|2:1&e),t):null}throw Error(i(156,e.tag))}function xl(n){switch(n.tag){case 1:_a(n.type)&&Fa();var e=n.effectTag;return 4096&e?(n.effectTag=-4097&e|64,n):null;case 3:if(Zo(),Na(Ea),Na(Ta),e=n.effectTag,0!==(64&e))throw Error(i(285));return n.effectTag=-4097&e|64,n;case 5:return Jo(n),null;case 13:return Na(ni),e=n.effectTag,4096&e?(n.effectTag=-4097&e|64,n):null;case 19:return Na(ni),null;case 4:return Zo(),null;case 10:return Co(n),null;default:return null}}function gl(n,e){return{value:n,source:e,stack:kn(e)}}al=function(n,e){for(var t=e.child;null!==t;){if(5===t.tag||6===t.tag)n.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},ol=function(){},il=function(n,e,t,r,o){var i=n.memoizedProps;if(i!==r){var l,s,c=e.stateNode;switch(Xo(Wo.current),n=null,t){case"input":i=Tn(c,i),r=Tn(c,r),n=[];break;case"option":i=An(c,i),r=An(c,r),n=[];break;case"select":i=a({},i,{value:void 0}),r=a({},r,{value:void 0}),n=[];break;case"textarea":i=zn(c,i),r=zn(c,r),n=[];break;default:"function"!==typeof i.onClick&&"function"===typeof r.onClick&&(c.onclick=yt)}for(l in ft(t,r),t=null,i)if(!r.hasOwnProperty(l)&&i.hasOwnProperty(l)&&null!=i[l])if("style"===l)for(s in c=i[l],c)c.hasOwnProperty(s)&&(t||(t={}),t[s]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(P.hasOwnProperty(l)?n||(n=[]):(n=n||[]).push(l,null));for(l in r){var p=r[l];if(c=null!=i?i[l]:void 0,r.hasOwnProperty(l)&&p!==c&&(null!=p||null!=c))if("style"===l)if(c){for(s in c)!c.hasOwnProperty(s)||p&&p.hasOwnProperty(s)||(t||(t={}),t[s]="");for(s in p)p.hasOwnProperty(s)&&c[s]!==p[s]&&(t||(t={}),t[s]=p[s])}else t||(n||(n=[]),n.push(l,t)),t=p;else"dangerouslySetInnerHTML"===l?(p=p?p.__html:void 0,c=c?c.__html:void 0,null!=p&&c!==p&&(n=n||[]).push(l,p)):"children"===l?c===p||"string"!==typeof p&&"number"!==typeof p||(n=n||[]).push(l,""+p):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(P.hasOwnProperty(l)?(null!=p&&gt(o,l),n||c===p||(n=[])):(n=n||[]).push(l,p))}t&&(n=n||[]).push("style",t),o=n,(e.updateQueue=o)&&(e.effectTag|=4)}},ll=function(n,e,t,r){t!==r&&(e.effectTag|=4)};var yl="function"===typeof WeakSet?WeakSet:Set;function Cl(n,e){var t=e.source,r=e.stack;null===r&&null!==t&&(r=kn(t)),null!==t&&bn(t.type),e=e.value,null!==n&&1===n.tag&&bn(n.type);try{console.error(e)}catch(a){setTimeout((function(){throw a}))}}function wl(n,e){try{e.props=n.memoizedProps,e.state=n.memoizedState,e.componentWillUnmount()}catch(t){Xs(n,t)}}function vl(n){var e=n.ref;if(null!==e)if("function"===typeof e)try{e(null)}catch(t){Xs(n,t)}else e.current=null}function bl(n,e){switch(e.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&e.effectTag&&null!==n){var t=n.memoizedProps,r=n.memoizedState;n=e.stateNode,e=n.getSnapshotBeforeUpdate(e.elementType===e.type?t:mo(e.type,t),r),n.__reactInternalSnapshotBeforeUpdate=e}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(i(163))}function kl(n,e){if(e=e.updateQueue,e=null!==e?e.lastEffect:null,null!==e){var t=e=e.next;do{if((t.tag&n)===n){var r=t.destroy;t.destroy=void 0,void 0!==r&&r()}t=t.next}while(t!==e)}}function Vl(n,e){if(e=e.updateQueue,e=null!==e?e.lastEffect:null,null!==e){var t=e=e.next;do{if((t.tag&n)===n){var r=t.create;t.destroy=r()}t=t.next}while(t!==e)}}function Pl(n,e,t){switch(t.tag){case 0:case 11:case 15:case 22:return void Vl(3,t);case 1:if(n=t.stateNode,4&t.effectTag)if(null===e)n.componentDidMount();else{var r=t.elementType===t.type?e.memoizedProps:mo(t.type,e.memoizedProps);n.componentDidUpdate(r,e.memoizedState,n.__reactInternalSnapshotBeforeUpdate)}return e=t.updateQueue,void(null!==e&&Eo(t,e,n));case 3:if(e=t.updateQueue,null!==e){if(n=null,null!==t.child)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}Eo(t,e,n)}return;case 5:return n=t.stateNode,void(null===e&&4&t.effectTag&&$t(t.type,t.memoizedProps)&&n.focus());case 6:return;case 4:return;case 12:return;case 13:return void(null===t.memoizedState&&(t=t.alternate,null!==t&&(t=t.memoizedState,null!==t&&(t=t.dehydrated,null!==t&&We(t)))));case 19:case 17:case 20:case 21:return}throw Error(i(163))}function Nl(n,e,t){switch("function"===typeof Js&&Js(e),e.tag){case 0:case 11:case 14:case 15:case 22:if(n=e.updateQueue,null!==n&&(n=n.lastEffect,null!==n)){var r=n.next;io(97<t?97:t,(function(){var n=r;do{var t=n.destroy;if(void 0!==t){var a=e;try{t()}catch(o){Xs(a,o)}}n=n.next}while(n!==r)}))}break;case 1:vl(e),t=e.stateNode,"function"===typeof t.componentWillUnmount&&wl(e,t);break;case 5:vl(e);break;case 4:Il(n,e,t)}}function Rl(n){var e=n.alternate;n.return=null,n.child=null,n.memoizedState=null,n.updateQueue=null,n.dependencies=null,n.alternate=null,n.firstEffect=null,n.lastEffect=null,n.pendingProps=null,n.memoizedProps=null,n.stateNode=null,null!==e&&Rl(e)}function Sl(n){return 5===n.tag||3===n.tag||4===n.tag}function Tl(n){n:{for(var e=n.return;null!==e;){if(Sl(e)){var t=e;break n}e=e.return}throw Error(i(160))}switch(e=t.stateNode,t.tag){case 5:var r=!1;break;case 3:e=e.containerInfo,r=!0;break;case 4:e=e.containerInfo,r=!0;break;default:throw Error(i(161))}16&t.effectTag&&(Hn(e,""),t.effectTag&=-17);n:e:for(t=n;;){for(;null===t.sibling;){if(null===t.return||Sl(t.return)){t=null;break n}t=t.return}for(t.sibling.return=t.return,t=t.sibling;5!==t.tag&&6!==t.tag&&18!==t.tag;){if(2&t.effectTag)continue e;if(null===t.child||4===t.tag)continue e;t.child.return=t,t=t.child}if(!(2&t.effectTag)){t=t.stateNode;break n}}r?El(n,t,e):$l(n,t,e)}function El(n,e,t){var r=n.tag,a=5===r||6===r;if(a)n=a?n.stateNode:n.stateNode.instance,e?8===t.nodeType?t.parentNode.insertBefore(n,e):t.insertBefore(n,e):(8===t.nodeType?(e=t.parentNode,e.insertBefore(n,t)):(e=t,e.appendChild(n)),t=t._reactRootContainer,null!==t&&void 0!==t||null!==e.onclick||(e.onclick=yt));else if(4!==r&&(n=n.child,null!==n))for(El(n,e,t),n=n.sibling;null!==n;)El(n,e,t),n=n.sibling}function $l(n,e,t){var r=n.tag,a=5===r||6===r;if(a)n=a?n.stateNode:n.stateNode.instance,e?t.insertBefore(n,e):t.appendChild(n);else if(4!==r&&(n=n.child,null!==n))for($l(n,e,t),n=n.sibling;null!==n;)$l(n,e,t),n=n.sibling}function Il(n,e,t){for(var r,a,o=e,l=!1;;){if(!l){l=o.return;n:for(;;){if(null===l)throw Error(i(160));switch(r=l.stateNode,l.tag){case 5:a=!1;break n;case 3:r=r.containerInfo,a=!0;break n;case 4:r=r.containerInfo,a=!0;break n}l=l.return}l=!0}if(5===o.tag||6===o.tag){n:for(var s=n,c=o,p=t,u=c;;)if(Nl(s,u,p),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===c)break n;for(;null===u.sibling;){if(null===u.return||u.return===c)break n;u=u.return}u.sibling.return=u.return,u=u.sibling}a?(s=r,c=o.stateNode,8===s.nodeType?s.parentNode.removeChild(c):s.removeChild(c)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,a=!0,o.child.return=o,o=o.child;continue}}else if(Nl(n,o,t),null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return,4===o.tag&&(l=!1)}o.sibling.return=o.return,o=o.sibling}}function _l(n,e){switch(e.tag){case 0:case 11:case 14:case 15:case 22:return void kl(3,e);case 1:return;case 5:var t=e.stateNode;if(null!=t){var r=e.memoizedProps,a=null!==n?n.memoizedProps:r;n=e.type;var o=e.updateQueue;if(e.updateQueue=null,null!==o){for(t[jt]=r,"input"===n&&"radio"===r.type&&null!=r.name&&$n(t,r),ht(n,a),e=ht(n,r),a=0;a<o.length;a+=2){var l=o[a],s=o[a+1];"style"===l?dt(t,s):"dangerouslySetInnerHTML"===l?Wn(t,s):"children"===l?Hn(t,s):en(t,l,s,e)}switch(n){case"input":In(t,r);break;case"textarea":Bn(t,r);break;case"select":e=t._wrapperState.wasMultiple,t._wrapperState.wasMultiple=!!r.multiple,n=r.value,null!=n?Mn(t,!!r.multiple,n,!1):e!==!!r.multiple&&(null!=r.defaultValue?Mn(t,!!r.multiple,r.defaultValue,!0):Mn(t,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===e.stateNode)throw Error(i(162));return void(e.stateNode.nodeValue=e.memoizedProps);case 3:return e=e.stateNode,void(e.hydrate&&(e.hydrate=!1,We(e.containerInfo)));case 12:return;case 13:if(t=e,null===e.memoizedState?r=!1:(r=!0,t=e.child,cs=ro()),null!==t)n:for(n=t;;){if(5===n.tag)o=n.stateNode,r?(o=o.style,"function"===typeof o.setProperty?o.setProperty("display","none","important"):o.display="none"):(o=n.stateNode,a=n.memoizedProps.style,a=void 0!==a&&null!==a&&a.hasOwnProperty("display")?a.display:null,o.style.display=ut("display",a));else if(6===n.tag)n.stateNode.nodeValue=r?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState&&null===n.memoizedState.dehydrated){o=n.child.sibling,o.return=n,n=o;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)break n;n=n.return}n.sibling.return=n.return,n=n.sibling}return void Fl(e);case 19:return void Fl(e);case 17:return}throw Error(i(163))}function Fl(n){var e=n.updateQueue;if(null!==e){n.updateQueue=null;var t=n.stateNode;null===t&&(t=n.stateNode=new yl),e.forEach((function(e){var r=Zs.bind(null,n,e);t.has(e)||(t.add(e),e.then(r,r))}))}}var Ol="function"===typeof WeakMap?WeakMap:Map;function Al(n,e,t){t=No(t,null),t.tag=3,t.payload={element:null};var r=e.value;return t.callback=function(){ds||(ds=!0,ms=r),Cl(n,e)},t}function Ml(n,e,t){t=No(t,null),t.tag=3;var r=n.type.getDerivedStateFromError;if("function"===typeof r){var a=e.value;t.payload=function(){return Cl(n,e),r(a)}}var o=n.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(t.callback=function(){"function"!==typeof r&&(null===fs?fs=new Set([this]):fs.add(this),Cl(n,e));var t=e.stack;this.componentDidCatch(e.value,{componentStack:null!==t?t:""})}),t}var zl,jl=Math.ceil,Bl=nn.ReactCurrentDispatcher,Dl=nn.ReactCurrentOwner,Ll=0,Ul=8,Kl=16,ql=32,Wl=0,Hl=1,Gl=2,Xl=3,Yl=4,Zl=5,Ql=Ll,Jl=null,ns=null,es=0,ts=Wl,rs=null,as=1073741823,os=1073741823,is=null,ls=0,ss=!1,cs=0,ps=500,us=null,ds=!1,ms=null,fs=null,hs=!1,xs=null,gs=90,ys=null,Cs=0,ws=null,vs=0;function bs(){return(Ql&(Kl|ql))!==Ll?1073741821-(ro()/10|0):0!==vs?vs:vs=1073741821-(ro()/10|0)}function ks(n,e,t){if(e=e.mode,0===(2&e))return 1073741823;var r=ao();if(0===(4&e))return 99===r?1073741823:1073741822;if((Ql&Kl)!==Ll)return es;if(null!==t)n=uo(n,0|t.timeoutMs||5e3,250);else switch(r){case 99:n=1073741823;break;case 98:n=uo(n,150,100);break;case 97:case 96:n=uo(n,5e3,250);break;case 95:n=2;break;default:throw Error(i(326))}return null!==Jl&&n===es&&--n,n}function Vs(n,e){if(50<Cs)throw Cs=0,ws=null,Error(i(185));if(n=Ps(n,e),null!==n){var t=ao();1073741823===e?(Ql&Ul)!==Ll&&(Ql&(Kl|ql))===Ll?Ts(n):(Rs(n),Ql===Ll&&co()):Rs(n),(4&Ql)===Ll||98!==t&&99!==t||(null===ys?ys=new Map([[n,e]]):(t=ys.get(n),(void 0===t||t>e)&&ys.set(n,e)))}}function Ps(n,e){n.expirationTime<e&&(n.expirationTime=e);var t=n.alternate;null!==t&&t.expirationTime<e&&(t.expirationTime=e);var r=n.return,a=null;if(null===r&&3===n.tag)a=n.stateNode;else for(;null!==r;){if(t=r.alternate,r.childExpirationTime<e&&(r.childExpirationTime=e),null!==t&&t.childExpirationTime<e&&(t.childExpirationTime=e),null===r.return&&3===r.tag){a=r.stateNode;break}r=r.return}return null!==a&&(Jl===a&&(Ms(e),ts===Yl&&dc(a,es)),mc(a,e)),a}function Ns(n){var e=n.lastExpiredTime;if(0!==e)return e;if(e=n.firstPendingTime,!uc(n,e))return e;var t=n.lastPingedTime;return n=n.nextKnownPendingLevel,n=t>n?t:n,2>=n&&e!==n?0:n}function Rs(n){if(0!==n.lastExpiredTime)n.callbackExpirationTime=1073741823,n.callbackPriority=99,n.callbackNode=so(Ts.bind(null,n));else{var e=Ns(n),t=n.callbackNode;if(0===e)null!==t&&(n.callbackNode=null,n.callbackExpirationTime=0,n.callbackPriority=90);else{var r=bs();if(1073741823===e?r=99:1===e||2===e?r=95:(r=10*(1073741821-e)-10*(1073741821-r),r=0>=r?99:250>=r?98:5250>=r?97:95),null!==t){var a=n.callbackPriority;if(n.callbackExpirationTime===e&&a>=r)return;t!==Ya&&Da(t)}n.callbackExpirationTime=e,n.callbackPriority=r,e=1073741823===e?so(Ts.bind(null,n)):lo(r,Ss.bind(null,n),{timeout:10*(1073741821-e)-ro()}),n.callbackNode=e}}}function Ss(n,e){if(vs=0,e)return e=bs(),fc(n,e),Rs(n),null;var t=Ns(n);if(0!==t){if(e=n.callbackNode,(Ql&(Kl|ql))!==Ll)throw Error(i(327));if(Ws(),n===Jl&&t===es||_s(n,t),null!==ns){var r=Ql;Ql|=Kl;var a=Os();do{try{js();break}catch(s){Fs(n,s)}}while(1);if(yo(),Ql=r,Bl.current=a,ts===Hl)throw e=rs,_s(n,t),dc(n,t),Rs(n),e;if(null===ns)switch(a=n.finishedWork=n.current.alternate,n.finishedExpirationTime=t,r=ts,Jl=null,r){case Wl:case Hl:throw Error(i(345));case Gl:fc(n,2<t?2:t);break;case Xl:if(dc(n,t),r=n.lastSuspendedTime,t===r&&(n.nextKnownPendingLevel=Ls(a)),1073741823===as&&(a=cs+ps-ro(),10<a)){if(ss){var o=n.lastPingedTime;if(0===o||o>=t){n.lastPingedTime=t,_s(n,t);break}}if(o=Ns(n),0!==o&&o!==t)break;if(0!==r&&r!==t){n.lastPingedTime=r;break}n.timeoutHandle=_t(Us.bind(null,n),a);break}Us(n);break;case Yl:if(dc(n,t),r=n.lastSuspendedTime,t===r&&(n.nextKnownPendingLevel=Ls(a)),ss&&(a=n.lastPingedTime,0===a||a>=t)){n.lastPingedTime=t,_s(n,t);break}if(a=Ns(n),0!==a&&a!==t)break;if(0!==r&&r!==t){n.lastPingedTime=r;break}if(1073741823!==os?r=10*(1073741821-os)-ro():1073741823===as?r=0:(r=10*(1073741821-as)-5e3,a=ro(),t=10*(1073741821-t)-a,r=a-r,0>r&&(r=0),r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*jl(r/1960))-r,t<r&&(r=t)),10<r){n.timeoutHandle=_t(Us.bind(null,n),r);break}Us(n);break;case Zl:if(1073741823!==as&&null!==is){o=as;var l=is;if(r=0|l.busyMinDurationMs,0>=r?r=0:(a=0|l.busyDelayMs,o=ro()-(10*(1073741821-o)-(0|l.timeoutMs||5e3)),r=o<=a?0:a+r-o),10<r){dc(n,t),n.timeoutHandle=_t(Us.bind(null,n),r);break}}Us(n);break;default:throw Error(i(329))}if(Rs(n),n.callbackNode===e)return Ss.bind(null,n)}}return null}function Ts(n){var e=n.lastExpiredTime;if(e=0!==e?e:1073741823,(Ql&(Kl|ql))!==Ll)throw Error(i(327));if(Ws(),n===Jl&&e===es||_s(n,e),null!==ns){var t=Ql;Ql|=Kl;var r=Os();do{try{zs();break}catch(a){Fs(n,a)}}while(1);if(yo(),Ql=t,Bl.current=r,ts===Hl)throw t=rs,_s(n,e),dc(n,e),Rs(n),t;if(null!==ns)throw Error(i(261));n.finishedWork=n.current.alternate,n.finishedExpirationTime=e,Jl=null,Us(n),Rs(n)}return null}function Es(){if(null!==ys){var n=ys;ys=null,n.forEach((function(n,e){fc(e,n),Rs(e)})),co()}}function $s(n,e){var t=Ql;Ql|=1;try{return n(e)}finally{Ql=t,Ql===Ll&&co()}}function Is(n,e){var t=Ql;Ql&=-2,Ql|=Ul;try{return n(e)}finally{Ql=t,Ql===Ll&&co()}}function _s(n,e){n.finishedWork=null,n.finishedExpirationTime=0;var t=n.timeoutHandle;if(-1!==t&&(n.timeoutHandle=-1,Ft(t)),null!==ns)for(t=ns.return;null!==t;){var r=t;switch(r.tag){case 1:r=r.type.childContextTypes,null!==r&&void 0!==r&&Fa();break;case 3:Zo(),Na(Ea),Na(Ta);break;case 5:Jo(r);break;case 4:Zo();break;case 13:Na(ni);break;case 19:Na(ni);break;case 10:Co(r)}t=t.return}Jl=n,ns=oc(n.current,null),es=e,ts=Wl,rs=null,os=as=1073741823,is=null,ls=0,ss=!1}function Fs(n,e){do{try{if(yo(),ri.current=Fi,ci)for(var t=ii.memoizedState;null!==t;){var r=t.queue;null!==r&&(r.pending=null),t=t.next}if(oi=0,si=li=ii=null,ci=!1,null===ns||null===ns.return)return ts=Hl,rs=e,ns=null;n:{var a=n,o=ns.return,i=ns,l=e;if(e=es,i.effectTag|=2048,i.firstEffect=i.lastEffect=null,null!==l&&"object"===typeof l&&"function"===typeof l.then){var s=l;if(0===(2&i.mode)){var c=i.alternate;c?(i.updateQueue=c.updateQueue,i.memoizedState=c.memoizedState,i.expirationTime=c.expirationTime):(i.updateQueue=null,i.memoizedState=null)}var p=0!==(1&ni.current),u=o;do{var d;if(d=13===u.tag){var m=u.memoizedState;if(null!==m)d=null!==m.dehydrated;else{var f=u.memoizedProps;d=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!p)}}if(d){var h=u.updateQueue;if(null===h){var x=new Set;x.add(s),u.updateQueue=x}else h.add(s);if(0===(2&u.mode)){if(u.effectTag|=64,i.effectTag&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=No(1073741823,null);g.tag=2,Ro(i,g)}i.expirationTime=1073741823;break n}l=void 0,i=e;var y=a.pingCache;if(null===y?(y=a.pingCache=new Ol,l=new Set,y.set(s,l)):(l=y.get(s),void 0===l&&(l=new Set,y.set(s,l))),!l.has(i)){l.add(i);var C=Ys.bind(null,a,s,i);s.then(C,C)}u.effectTag|=4096,u.expirationTime=e;break n}u=u.return}while(null!==u);l=Error((bn(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+kn(i))}ts!==Zl&&(ts=Gl),l=gl(l,i),u=o;do{switch(u.tag){case 3:s=l,u.effectTag|=4096,u.expirationTime=e;var w=Al(u,s,e);So(u,w);break n;case 1:s=l;var v=u.type,b=u.stateNode;if(0===(64&u.effectTag)&&("function"===typeof v.getDerivedStateFromError||null!==b&&"function"===typeof b.componentDidCatch&&(null===fs||!fs.has(b)))){u.effectTag|=4096,u.expirationTime=e;var k=Ml(u,s,e);So(u,k);break n}}u=u.return}while(null!==u)}ns=Ds(ns)}catch(V){e=V;continue}break}while(1)}function Os(){var n=Bl.current;return Bl.current=Fi,null===n?Fi:n}function As(n,e){n<as&&2<n&&(as=n),null!==e&&n<os&&2<n&&(os=n,is=e)}function Ms(n){n>ls&&(ls=n)}function zs(){for(;null!==ns;)ns=Bs(ns)}function js(){for(;null!==ns&&!Za();)ns=Bs(ns)}function Bs(n){var e=zl(n.alternate,n,es);return n.memoizedProps=n.pendingProps,null===e&&(e=Ds(n)),Dl.current=null,e}function Ds(n){ns=n;do{var e=ns.alternate;if(n=ns.return,0===(2048&ns.effectTag)){if(e=hl(e,ns,es),1===es||1!==ns.childExpirationTime){for(var t=0,r=ns.child;null!==r;){var a=r.expirationTime,o=r.childExpirationTime;a>t&&(t=a),o>t&&(t=o),r=r.sibling}ns.childExpirationTime=t}if(null!==e)return e;null!==n&&0===(2048&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=ns.firstEffect),null!==ns.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=ns.firstEffect),n.lastEffect=ns.lastEffect),1<ns.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=ns:n.firstEffect=ns,n.lastEffect=ns))}else{if(e=xl(ns),null!==e)return e.effectTag&=2047,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=2048)}if(e=ns.sibling,null!==e)return e;ns=n}while(null!==ns);return ts===Wl&&(ts=Zl),null}function Ls(n){var e=n.expirationTime;return n=n.childExpirationTime,e>n?e:n}function Us(n){var e=ao();return io(99,Ks.bind(null,n,e)),null}function Ks(n,e){do{Ws()}while(null!==xs);if((Ql&(Kl|ql))!==Ll)throw Error(i(327));var t=n.finishedWork,r=n.finishedExpirationTime;if(null===t)return null;if(n.finishedWork=null,n.finishedExpirationTime=0,t===n.current)throw Error(i(177));n.callbackNode=null,n.callbackExpirationTime=0,n.callbackPriority=90,n.nextKnownPendingLevel=0;var a=Ls(t);if(n.firstPendingTime=a,r<=n.lastSuspendedTime?n.firstSuspendedTime=n.lastSuspendedTime=n.nextKnownPendingLevel=0:r<=n.firstSuspendedTime&&(n.firstSuspendedTime=r-1),r<=n.lastPingedTime&&(n.lastPingedTime=0),r<=n.lastExpiredTime&&(n.lastExpiredTime=0),n===Jl&&(ns=Jl=null,es=0),1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,a=t.firstEffect):a=t:a=t.firstEffect,null!==a){var o=Ql;Ql|=ql,Dl.current=null,Tt=tt;var l=kt();if(Vt(l)){if("selectionStart"in l)var s={start:l.selectionStart,end:l.selectionEnd};else n:{s=(s=l.ownerDocument)&&s.defaultView||window;var c=s.getSelection&&s.getSelection();if(c&&0!==c.rangeCount){s=c.anchorNode;var p=c.anchorOffset,u=c.focusNode;c=c.focusOffset;try{s.nodeType,u.nodeType}catch(N){s=null;break n}var d=0,m=-1,f=-1,h=0,x=0,g=l,y=null;e:for(;;){for(var C;;){if(g!==s||0!==p&&3!==g.nodeType||(m=d+p),g!==u||0!==c&&3!==g.nodeType||(f=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null===(C=g.firstChild))break;y=g,g=C}for(;;){if(g===l)break e;if(y===s&&++h===p&&(m=d),y===u&&++x===c&&(f=d),null!==(C=g.nextSibling))break;g=y,y=g.parentNode}g=C}s=-1===m||-1===f?null:{start:m,end:f}}else s=null}s=s||{start:0,end:0}}else s=null;Et={activeElementDetached:null,focusedElem:l,selectionRange:s},tt=!1,us=a;do{try{qs()}catch(N){if(null===us)throw Error(i(330));Xs(us,N),us=us.nextEffect}}while(null!==us);us=a;do{try{for(l=n,s=e;null!==us;){var w=us.effectTag;if(16&w&&Hn(us.stateNode,""),128&w){var v=us.alternate;if(null!==v){var b=v.ref;null!==b&&("function"===typeof b?b(null):b.current=null)}}switch(1038&w){case 2:Tl(us),us.effectTag&=-3;break;case 6:Tl(us),us.effectTag&=-3,_l(us.alternate,us);break;case 1024:us.effectTag&=-1025;break;case 1028:us.effectTag&=-1025,_l(us.alternate,us);break;case 4:_l(us.alternate,us);break;case 8:p=us,Il(l,p,s),Rl(p)}us=us.nextEffect}}catch(N){if(null===us)throw Error(i(330));Xs(us,N),us=us.nextEffect}}while(null!==us);if(b=Et,v=kt(),w=b.focusedElem,s=b.selectionRange,v!==w&&w&&w.ownerDocument&&bt(w.ownerDocument.documentElement,w)){null!==s&&Vt(w)&&(v=s.start,b=s.end,void 0===b&&(b=v),"selectionStart"in w?(w.selectionStart=v,w.selectionEnd=Math.min(b,w.value.length)):(b=(v=w.ownerDocument||document)&&v.defaultView||window,b.getSelection&&(b=b.getSelection(),p=w.textContent.length,l=Math.min(s.start,p),s=void 0===s.end?l:Math.min(s.end,p),!b.extend&&l>s&&(p=s,s=l,l=p),p=vt(w,l),u=vt(w,s),p&&u&&(1!==b.rangeCount||b.anchorNode!==p.node||b.anchorOffset!==p.offset||b.focusNode!==u.node||b.focusOffset!==u.offset)&&(v=v.createRange(),v.setStart(p.node,p.offset),b.removeAllRanges(),l>s?(b.addRange(v),b.extend(u.node,u.offset)):(v.setEnd(u.node,u.offset),b.addRange(v)))))),v=[];for(b=w;b=b.parentNode;)1===b.nodeType&&v.push({element:b,left:b.scrollLeft,top:b.scrollTop});for("function"===typeof w.focus&&w.focus(),w=0;w<v.length;w++)b=v[w],b.element.scrollLeft=b.left,b.element.scrollTop=b.top}tt=!!Tt,Et=Tt=null,n.current=t,us=a;do{try{for(w=n;null!==us;){var k=us.effectTag;if(36&k&&Pl(w,us.alternate,us),128&k){v=void 0;var V=us.ref;if(null!==V){var P=us.stateNode;switch(us.tag){case 5:v=P;break;default:v=P}"function"===typeof V?V(v):V.current=v}}us=us.nextEffect}}catch(N){if(null===us)throw Error(i(330));Xs(us,N),us=us.nextEffect}}while(null!==us);us=null,Qa(),Ql=o}else n.current=t;if(hs)hs=!1,xs=n,gs=e;else for(us=a;null!==us;)e=us.nextEffect,us.nextEffect=null,us=e;if(e=n.firstPendingTime,0===e&&(fs=null),1073741823===e?n===ws?Cs++:(Cs=0,ws=n):Cs=0,"function"===typeof Qs&&Qs(t.stateNode,r),Rs(n),ds)throw ds=!1,n=ms,ms=null,n;return(Ql&Ul)!==Ll||co(),null}function qs(){for(;null!==us;){var n=us.effectTag;0!==(256&n)&&bl(us.alternate,us),0===(512&n)||hs||(hs=!0,lo(97,(function(){return Ws(),null}))),us=us.nextEffect}}function Ws(){if(90!==gs){var n=97<gs?97:gs;return gs=90,io(n,Hs)}}function Hs(){if(null===xs)return!1;var n=xs;if(xs=null,(Ql&(Kl|ql))!==Ll)throw Error(i(331));var e=Ql;for(Ql|=ql,n=n.current.firstEffect;null!==n;){try{var t=n;if(0!==(512&t.effectTag))switch(t.tag){case 0:case 11:case 15:case 22:kl(5,t),Vl(5,t)}}catch(r){if(null===n)throw Error(i(330));Xs(n,r)}t=n.nextEffect,n.nextEffect=null,n=t}return Ql=e,co(),!0}function Gs(n,e,t){e=gl(t,e),e=Al(n,e,1073741823),Ro(n,e),n=Ps(n,1073741823),null!==n&&Rs(n)}function Xs(n,e){if(3===n.tag)Gs(n,n,e);else for(var t=n.return;null!==t;){if(3===t.tag){Gs(t,n,e);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===fs||!fs.has(r))){n=gl(e,n),n=Ml(t,n,1073741823),Ro(t,n),t=Ps(t,1073741823),null!==t&&Rs(t);break}}t=t.return}}function Ys(n,e,t){var r=n.pingCache;null!==r&&r.delete(e),Jl===n&&es===t?ts===Yl||ts===Xl&&1073741823===as&&ro()-cs<ps?_s(n,es):ss=!0:uc(n,t)&&(e=n.lastPingedTime,0!==e&&e<t||(n.lastPingedTime=t,Rs(n)))}function Zs(n,e){var t=n.stateNode;null!==t&&t.delete(e),e=0,0===e&&(e=bs(),e=ks(e,n,null)),n=Ps(n,e),null!==n&&Rs(n)}zl=function(n,e,t){var r=e.expirationTime;if(null!==n){var a=e.pendingProps;if(n.memoizedProps!==a||Ea.current)Gi=!0;else{if(r<t){switch(Gi=!1,e.tag){case 3:rl(e),Wi();break;case 5:if(Qo(e),4&e.mode&&1!==t&&a.hidden)return e.expirationTime=e.childExpirationTime=1,null;break;case 1:_a(e.type)&&Ma(e);break;case 4:Yo(e,e.stateNode.containerInfo);break;case 10:r=e.memoizedProps.value,a=e.type._context,Ra(fo,a._currentValue),a._currentValue=r;break;case 13:if(null!==e.memoizedState)return r=e.child.childExpirationTime,0!==r&&r>=t?cl(n,e,t):(Ra(ni,1&ni.current),e=ml(n,e,t),null!==e?e.sibling:null);Ra(ni,1&ni.current);break;case 19:if(r=e.childExpirationTime>=t,0!==(64&n.effectTag)){if(r)return dl(n,e,t);e.effectTag|=64}if(a=e.memoizedState,null!==a&&(a.rendering=null,a.tail=null),Ra(ni,ni.current),!r)return null}return ml(n,e,t)}Gi=!1}}else Gi=!1;switch(e.expirationTime=0,e.tag){case 2:if(r=e.type,null!==n&&(n.alternate=null,e.alternate=null,e.effectTag|=2),n=e.pendingProps,a=Ia(e,Ta.current),vo(e,t),a=di(null,e,r,n,a,t),e.effectTag|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof){if(e.tag=1,e.memoizedState=null,e.updateQueue=null,_a(r)){var o=!0;Ma(e)}else o=!1;e.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Vo(e);var l=r.getDerivedStateFromProps;"function"===typeof l&&_o(e,r,l,n),a.updater=Fo,e.stateNode=a,a._reactInternalFiber=e,zo(e,r,n,t),e=tl(null,e,r,!0,o,t)}else e.tag=0,Xi(null,e,a,t),e=e.child;return e;case 16:n:{if(a=e.elementType,null!==n&&(n.alternate=null,e.alternate=null,e.effectTag|=2),n=e.pendingProps,vn(a),1!==a._status)throw a._result;switch(a=a._result,e.type=a,o=e.tag=ac(a),n=mo(a,n),o){case 0:e=nl(null,e,a,n,t);break n;case 1:e=el(null,e,a,n,t);break n;case 11:e=Yi(null,e,a,n,t);break n;case 14:e=Zi(null,e,a,mo(a.type,n),r,t);break n}throw Error(i(306,a,""))}return e;case 0:return r=e.type,a=e.pendingProps,a=e.elementType===r?a:mo(r,a),nl(n,e,r,a,t);case 1:return r=e.type,a=e.pendingProps,a=e.elementType===r?a:mo(r,a),el(n,e,r,a,t);case 3:if(rl(e),r=e.updateQueue,null===n||null===r)throw Error(i(282));if(r=e.pendingProps,a=e.memoizedState,a=null!==a?a.element:null,Po(n,e),To(e,r,null,t),r=e.memoizedState.element,r===a)Wi(),e=ml(n,e,t);else{if((a=e.stateNode.hydrate)&&(ji=Ot(e.stateNode.containerInfo.firstChild),zi=e,a=Bi=!0),a)for(t=Ko(e,null,r,t),e.child=t;t;)t.effectTag=-3&t.effectTag|1024,t=t.sibling;else Xi(n,e,r,t),Wi();e=e.child}return e;case 5:return Qo(e),null===n&&Ui(e),r=e.type,a=e.pendingProps,o=null!==n?n.memoizedProps:null,l=a.children,It(r,a)?l=null:null!==o&&It(r,o)&&(e.effectTag|=16),Ji(n,e),4&e.mode&&1!==t&&a.hidden?(e.expirationTime=e.childExpirationTime=1,e=null):(Xi(n,e,l,t),e=e.child),e;case 6:return null===n&&Ui(e),null;case 13:return cl(n,e,t);case 4:return Yo(e,e.stateNode.containerInfo),r=e.pendingProps,null===n?e.child=Uo(e,null,r,t):Xi(n,e,r,t),e.child;case 11:return r=e.type,a=e.pendingProps,a=e.elementType===r?a:mo(r,a),Yi(n,e,r,a,t);case 7:return Xi(n,e,e.pendingProps,t),e.child;case 8:return Xi(n,e,e.pendingProps.children,t),e.child;case 12:return Xi(n,e,e.pendingProps.children,t),e.child;case 10:n:{r=e.type._context,a=e.pendingProps,l=e.memoizedProps,o=a.value;var s=e.type._context;if(Ra(fo,s._currentValue),s._currentValue=o,null!==l)if(s=l.value,o=na(s,o)?0:0|("function"===typeof r._calculateChangedBits?r._calculateChangedBits(s,o):1073741823),0===o){if(l.children===a.children&&!Ea.current){e=ml(n,e,t);break n}}else for(s=e.child,null!==s&&(s.return=e);null!==s;){var c=s.dependencies;if(null!==c){l=s.child;for(var p=c.firstContext;null!==p;){if(p.context===r&&0!==(p.observedBits&o)){1===s.tag&&(p=No(t,null),p.tag=2,Ro(s,p)),s.expirationTime<t&&(s.expirationTime=t),p=s.alternate,null!==p&&p.expirationTime<t&&(p.expirationTime=t),wo(s.return,t),c.expirationTime<t&&(c.expirationTime=t);break}p=p.next}}else l=10===s.tag&&s.type===e.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===e){l=null;break}if(s=l.sibling,null!==s){s.return=l.return,l=s;break}l=l.return}s=l}Xi(n,e,a.children,t),e=e.child}return e;case 9:return a=e.type,o=e.pendingProps,r=o.children,vo(e,t),a=bo(a,o.unstable_observedBits),r=r(a),e.effectTag|=1,Xi(n,e,r,t),e.child;case 14:return a=e.type,o=mo(a,e.pendingProps),o=mo(a.type,o),Zi(n,e,a,o,r,t);case 15:return Qi(n,e,e.type,e.pendingProps,r,t);case 17:return r=e.type,a=e.pendingProps,a=e.elementType===r?a:mo(r,a),null!==n&&(n.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,_a(r)?(n=!0,Ma(e)):n=!1,vo(e,t),Ao(e,r,a),zo(e,r,a,t),tl(null,e,r,!0,n,t);case 19:return dl(n,e,t)}throw Error(i(156,e.tag))};var Qs=null,Js=null;function nc(n){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var t=e.inject(n);Qs=function(n){try{e.onCommitFiberRoot(t,n,void 0,64===(64&n.current.effectTag))}catch(r){}},Js=function(n){try{e.onCommitFiberUnmount(t,n)}catch(r){}}}catch(r){}return!0}function ec(n,e,t,r){this.tag=n,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function tc(n,e,t,r){return new ec(n,e,t,r)}function rc(n){return n=n.prototype,!(!n||!n.isReactComponent)}function ac(n){if("function"===typeof n)return rc(n)?1:0;if(void 0!==n&&null!==n){if(n=n.$$typeof,n===mn)return 11;if(n===xn)return 14}return 2}function oc(n,e){var t=n.alternate;return null===t?(t=tc(n.tag,e,n.key,n.mode),t.elementType=n.elementType,t.type=n.type,t.stateNode=n.stateNode,t.alternate=n,n.alternate=t):(t.pendingProps=e,t.effectTag=0,t.nextEffect=null,t.firstEffect=null,t.lastEffect=null),t.childExpirationTime=n.childExpirationTime,t.expirationTime=n.expirationTime,t.child=n.child,t.memoizedProps=n.memoizedProps,t.memoizedState=n.memoizedState,t.updateQueue=n.updateQueue,e=n.dependencies,t.dependencies=null===e?null:{expirationTime:e.expirationTime,firstContext:e.firstContext,responders:e.responders},t.sibling=n.sibling,t.index=n.index,t.ref=n.ref,t}function ic(n,e,t,r,a,o){var l=2;if(r=n,"function"===typeof n)rc(n)&&(l=1);else if("string"===typeof n)l=5;else n:switch(n){case ln:return lc(t.children,a,o,e);case dn:l=8,a|=7;break;case sn:l=8,a|=1;break;case cn:return n=tc(12,t,e,8|a),n.elementType=cn,n.type=cn,n.expirationTime=o,n;case fn:return n=tc(13,t,e,a),n.type=fn,n.elementType=fn,n.expirationTime=o,n;case hn:return n=tc(19,t,e,a),n.elementType=hn,n.expirationTime=o,n;default:if("object"===typeof n&&null!==n)switch(n.$$typeof){case pn:l=10;break n;case un:l=9;break n;case mn:l=11;break n;case xn:l=14;break n;case gn:l=16,r=null;break n;case yn:l=22;break n}throw Error(i(130,null==n?n:typeof n,""))}return e=tc(l,t,e,a),e.elementType=n,e.type=r,e.expirationTime=o,e}function lc(n,e,t,r){return n=tc(7,n,r,e),n.expirationTime=t,n}function sc(n,e,t){return n=tc(6,n,null,e),n.expirationTime=t,n}function cc(n,e,t){return e=tc(4,null!==n.children?n.children:[],n.key,e),e.expirationTime=t,e.stateNode={containerInfo:n.containerInfo,pendingChildren:null,implementation:n.implementation},e}function pc(n,e,t){this.tag=e,this.current=null,this.containerInfo=n,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=t,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function uc(n,e){var t=n.firstSuspendedTime;return n=n.lastSuspendedTime,0!==t&&t>=e&&n<=e}function dc(n,e){var t=n.firstSuspendedTime,r=n.lastSuspendedTime;t<e&&(n.firstSuspendedTime=e),(r>e||0===t)&&(n.lastSuspendedTime=e),e<=n.lastPingedTime&&(n.lastPingedTime=0),e<=n.lastExpiredTime&&(n.lastExpiredTime=0)}function mc(n,e){e>n.firstPendingTime&&(n.firstPendingTime=e);var t=n.firstSuspendedTime;0!==t&&(e>=t?n.firstSuspendedTime=n.lastSuspendedTime=n.nextKnownPendingLevel=0:e>=n.lastSuspendedTime&&(n.lastSuspendedTime=e+1),e>n.nextKnownPendingLevel&&(n.nextKnownPendingLevel=e))}function fc(n,e){var t=n.lastExpiredTime;(0===t||t>e)&&(n.lastExpiredTime=e)}function hc(n,e,t,r){var a=e.current,o=bs(),l=$o.suspense;o=ks(o,a,l);n:if(t){t=t._reactInternalFiber;e:{if(ie(t)!==t||1!==t.tag)throw Error(i(170));var s=t;do{switch(s.tag){case 3:s=s.stateNode.context;break e;case 1:if(_a(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break e}}s=s.return}while(null!==s);throw Error(i(171))}if(1===t.tag){var c=t.type;if(_a(c)){t=Aa(t,c,s);break n}}t=s}else t=Sa;return null===e.context?e.context=t:e.pendingContext=t,e=No(o,l),e.payload={element:n},r=void 0===r?null:r,null!==r&&(e.callback=r),Ro(a,e),Vs(a,o),o}function xc(n){if(n=n.current,!n.child)return null;switch(n.child.tag){case 5:return n.child.stateNode;default:return n.child.stateNode}}function gc(n,e){n=n.memoizedState,null!==n&&null!==n.dehydrated&&n.retryTime<e&&(n.retryTime=e)}function yc(n,e){gc(n,e),(n=n.alternate)&&gc(n,e)}function Cc(n,e,t){t=null!=t&&!0===t.hydrate;var r=new pc(n,e,t),a=tc(3,null,null,2===e?7:1===e?3:0);r.current=a,a.stateNode=r,Vo(a),n[Bt]=r.current,t&&0!==e&&Ae(n,9===n.nodeType?n:n.ownerDocument),this._internalRoot=r}function wc(n){return!(!n||1!==n.nodeType&&9!==n.nodeType&&11!==n.nodeType&&(8!==n.nodeType||" react-mount-point-unstable "!==n.nodeValue))}function vc(n,e){if(e||(e=n?9===n.nodeType?n.documentElement:n.firstChild:null,e=!(!e||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var t;t=n.lastChild;)n.removeChild(t);return new Cc(n,0,e?{hydrate:!0}:void 0)}function bc(n,e,t,r,a){var o=t._reactRootContainer;if(o){var i=o._internalRoot;if("function"===typeof a){var l=a;a=function(){var n=xc(i);l.call(n)}}hc(e,i,n,a)}else{if(o=t._reactRootContainer=vc(t,r),i=o._internalRoot,"function"===typeof a){var s=a;a=function(){var n=xc(i);s.call(n)}}Is((function(){hc(e,i,n,a)}))}return xc(i)}function kc(n,e,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:on,key:null==r?null:""+r,children:n,containerInfo:e,implementation:t}}function Vc(n,e){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!wc(e))throw Error(i(200));return kc(n,e,null,t)}Cc.prototype.render=function(n){hc(n,this._internalRoot,null,null)},Cc.prototype.unmount=function(){var n=this._internalRoot,e=n.containerInfo;hc(null,n,null,(function(){e[Bt]=null}))},ke=function(n){if(13===n.tag){var e=uo(bs(),150,100);Vs(n,e),yc(n,e)}},Ve=function(n){13===n.tag&&(Vs(n,3),yc(n,3))},Pe=function(n){if(13===n.tag){var e=bs();e=ks(e,n,null),Vs(n,e),yc(n,e)}},T=function(n,e,t){switch(e){case"input":if(In(n,t),e=t.name,"radio"===t.type&&null!=e){for(t=n;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<t.length;e++){var r=t[e];if(r!==n&&r.form===n.form){var a=Kt(r);if(!a)throw Error(i(90));Sn(r),In(r,a)}}}break;case"textarea":Bn(n,t);break;case"select":e=t.value,null!=e&&Mn(n,!!t.multiple,e,!1)}},O=$s,A=function(n,e,t,r,a){var o=Ql;Ql|=4;try{return io(98,n.bind(null,e,t,r,a))}finally{Ql=o,Ql===Ll&&co()}},M=function(){(Ql&(1|Kl|ql))===Ll&&(Es(),Ws())},z=function(n,e){var t=Ql;Ql|=2;try{return n(e)}finally{Ql=t,Ql===Ll&&co()}};var Pc={Events:[Lt,Ut,Kt,R,V,Zt,function(n){de(n,Yt)},_,F,lt,he,Ws,{current:!1}]};(function(n){var e=n.findFiberByHostInstance;nc(a({},n,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:nn.ReactCurrentDispatcher,findHostInstanceByFiber:function(n){return n=pe(n),null===n?null:n.stateNode},findFiberByHostInstance:function(n){return e?e(n):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:Dt,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}),e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Pc,e.createPortal=Vc,e.findDOMNode=function(n){if(null==n)return null;if(1===n.nodeType)return n;var e=n._reactInternalFiber;if(void 0===e){if("function"===typeof n.render)throw Error(i(188));throw Error(i(268,Object.keys(n)))}return n=pe(e),n=null===n?null:n.stateNode,n},e.flushSync=function(n,e){if((Ql&(Kl|ql))!==Ll)throw Error(i(187));var t=Ql;Ql|=1;try{return io(99,n.bind(null,e))}finally{Ql=t,co()}},e.hydrate=function(n,e,t){if(!wc(e))throw Error(i(200));return bc(null,n,e,!0,t)},e.render=function(n,e,t){if(!wc(e))throw Error(i(200));return bc(null,n,e,!1,t)},e.unmountComponentAtNode=function(n){if(!wc(n))throw Error(i(40));return!!n._reactRootContainer&&(Is((function(){bc(null,null,n,!1,(function(){n._reactRootContainer=null,n[Bt]=null}))})),!0)},e.unstable_batchedUpdates=$s,e.unstable_createPortal=function(n,e){return Vc(n,e,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},e.unstable_renderSubtreeIntoContainer=function(n,e,t,r){if(!wc(t))throw Error(i(200));if(null==n||void 0===n._reactInternalFiber)throw Error(i(38));return bc(n,e,t,!1,r)},e.version="16.13.1"},z9fm:function(n,e,t){"use strict";var r=t("ENif"),a=t("f1E4"),o=t("oa35"),i=t("FCfD"),l=t("xH5X"),s=t("dagG");r("match",1,(function(n,e,t){return[function(e){var t=i(this),r=void 0==e?void 0:e[n];return void 0!==r?r.call(e,t):new RegExp(e)[n](String(t))},function(n){var r=t(e,n,this);if(r.done)return r.value;var i=a(n),c=String(this);if(!i.global)return s(i,c);var p=i.unicode;i.lastIndex=0;var u,d=[],m=0;while(null!==(u=s(i,c))){var f=String(u[0]);d[m]=f,""===f&&(i.lastIndex=l(c,o(i.lastIndex),p)),m++}return 0===m?null:d}]}))},zLVn:function(n,e,t){"use strict";function r(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}t.d(e,"a",(function(){return r}))},zTPR:function(n,e,t){"use strict";var r=t("/gva"),a=t("vO0A");n.exports=r("Set",(function(n){return function(){return n(this,arguments.length?arguments[0]:void 0)}}),a)},zfr2:function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t("YCKM"),i=t("f4X2"),l=t("IOv4");e["default"]=()=>{var n=a["useState"](!1),e=Object(r["a"])(n,2),t=e[0],s=e[1],c=a["useState"](!1),p=Object(r["a"])(c,2),u=p[0],d=p[1],m=a["useState"](!1),f=Object(r["a"])(m,2),h=f[0],x=f[1],g=a["useState"](!1),y=Object(r["a"])(g,2),C=y[0],w=y[1],v=a["useState"](!1),b=Object(r["a"])(v,2),k=b[0],V=b[1];return a["createElement"](l["b"],{padding:!0,style:{overflow:"hidden"}},a["createElement"](l["a"],{title:"Basic"},a["createElement"](i["a"],{type:"primary",size:"large",block:!0,onTap:()=>s(!0)},"Click here")),a["createElement"](l["a"],{title:"With Title"},a["createElement"](i["a"],{type:"primary",size:"large",block:!0,onTap:()=>d(!0)},"Click here")),a["createElement"](l["a"],{title:"Closeable"},a["createElement"](i["a"],{type:"primary",size:"large",block:!0,onTap:()=>x(!0)},"Click here")),a["createElement"](l["a"],{title:"Position"},a["createElement"](i["a"],{type:"primary",size:"large",block:!0,onTap:()=>w(!0)},"Left")),a["createElement"](l["a"],{title:"Curve"},a["createElement"](i["a"],{type:"primary",size:"large",block:!0,onTap:()=>V(!0)},"Click here")),a["createElement"](i["l"],{open:t,onClose:()=>{s(!1)}},a["createElement"](o["d"],{style:{height:"12.5rem",padding:"0.94rem 0.75rem"}},"content")),a["createElement"](i["l"],{title:"title",open:u,onClose:()=>{d(!1)}},a["createElement"](o["d"],{style:{height:"12.5rem",padding:"0 0.75rem"}},"content")),a["createElement"](i["l"],{title:"title",closeable:!0,open:h,onClose:()=>{x(!1)}},a["createElement"](o["d"],{style:{height:"12.5rem",padding:"0 0.75rem"}},"content")),a["createElement"](i["l"],{position:"left",title:"title",open:C,onClose:()=>{w(!1)}},a["createElement"](o["d"],{style:{width:"12.5rem",padding:"0 0.75rem"}})),a["createElement"](i["l"],{position:"top",title:"title",open:k,onClose:()=>{V(!1)}},a["createElement"](o["d"],{style:{height:"12.5rem",padding:"0 0.75rem"}},"content")))}},zlVK:function(n,e,t){"use strict";var r=t("WmNS");function a(n){return n&&"object"===typeof n&&"default"in n?n["default"]:n}Object.defineProperty(e,"__esModule",{value:!0});var o=t("i8i4"),i=t("q1tI"),l=a(i),s=t("LtsZ"),c=t("V/vL");function p(n,e,t,r,a,o,i){try{var l=n[o](i),s=l.value}catch(c){return void t(c)}l.done?e(s):Promise.resolve(s).then(r,a)}function u(n){return function(){var e=this,t=arguments;return new Promise((function(r,a){var o=n.apply(e,t);function i(n){p(o,r,a,i,l,"next",n)}function l(n){p(o,r,a,i,l,"throw",n)}i(void 0)}))}}function d(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function m(){return m=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},m.apply(this,arguments)}function f(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function h(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?f(Object(t),!0).forEach((function(e){d(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):f(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function x(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}function g(n,e){if(null==n)return{};var t,r,a=x(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}function y(n,e){return C(n)||w(n,e)||v(n,e)||k()}function C(n){if(Array.isArray(n))return n}function w(n,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,l=n[Symbol.iterator]();!(r=(i=l.next()).done);r=!0)if(t.push(i.value),e&&t.length===e)break}catch(s){a=!0,o=s}finally{try{r||null==l["return"]||l["return"]()}finally{if(a)throw o}}return t}}function v(n,e){if(n){if("string"===typeof n)return b(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?b(n,e):void 0}}function b(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function k(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function V(n){return l.createElement(s.__RouterContext.Consumer,null,(function(e){var t,r=n.children,a=g(n,["children"]),o=e.location,i=null;return l.Children.forEach(r,(function(n){if(null===i&&l.isValidElement(n)){t=n;var r=n.props.path||n.props.from;i=r?s.matchPath(o.pathname,h({},n.props,{path:r})):e.match}})),i?l.cloneElement(t,{location:o,computedMatch:i,layoutProps:a}):null}))}function P(n){return l.createElement(s.__RouterContext.Consumer,null,(function(e){var t=e.location,r=n.computedMatch,a=h({},e,{location:t,match:r}),o=n.render;return l.createElement(s.__RouterContext.Provider,{value:a},a.match?o(h({},n.layoutProps,{},a)):null)}))}function N(n){return function(e){var t=i.useState(),a=y(t,2),o=a[0],s=a[1];return i.useEffect((function(){u(r.mark((function e(){var t;return r.wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,n.getInitialProps();case 2:t=e.sent,s(t);case 4:case"end":return e.stop()}}),e)})))()}),[]),l.createElement(n,m({},e,o))}}function R(n){var e=n.route,t=n.opts,r=n.props,a=T(h({},t,{routes:e.routes||[]})),o=e.component,i=e.wrappers;if(o){o.getInitialProps&&(o=N(o));var s=h({},r,{},t.extraProps,{route:e}),c=l.createElement(o,s,a);if(i){var p=i.length-1;while(p>=0)c=l.createElement(i[p],s,c),p-=1}return c}return a}function S(n){var e=n.route,t=n.index,r=n.opts,a={key:e.key||t,exact:e.exact,strict:e.strict,sensitive:e.sensitive,path:e.path};return e.redirect?l.createElement(s.Redirect,m({},a,{from:e.path,to:e.redirect})):l.createElement(P,m({},a,{render:function(n){return R({route:e,opts:r,props:n})}}))}function T(n){return n.routes?l.createElement(V,null,n.routes.map((function(e,t){return S({route:e,index:t,opts:n})}))):null}function E(n){var e=n.history,t=g(n,["history"]);return i.useEffect((function(){function r(e,r){var a=c.matchRoutes(n.routes,e.pathname);"undefined"!==typeof document&&void 0!==t.defaultTitle&&(document.title=a.length&&a[a.length-1].route.title||t.defaultTitle||""),n.plugin.applyPlugins({key:"onRouteChange",type:s.ApplyPluginsType.event,args:{routes:n.routes,matchedRoutes:a,location:e,action:r}})}return r(e.location,"POP"),e.listen(r)}),[e]),l.createElement(s.Router,{history:e},T(t))}function $(n){var e=n.plugin.applyPlugins({type:s.ApplyPluginsType.modify,key:"rootContainer",initialValue:l.createElement(E,{history:n.history,routes:n.routes,plugin:n.plugin,ssrProps:n.ssrProps,defaultTitle:n.defaultTitle}),args:{history:n.history,routes:n.routes,plugin:n.plugin}});if(!n.rootElement)return e;var t="string"===typeof n.rootElement?document.getElementById(n.rootElement):n.rootElement;o[n.ssrProps?"hydrate":"render"](e,t)}e.renderClient=$,e.renderRoutes=T},zv1X:function(n,e,t){var r=t("7BAe"),a=t("EzR6"),o=t("cTDu"),i=t("oa35"),l=t("nMuc"),s=[].push,c=function(n){var e=1==n,t=2==n,c=3==n,p=4==n,u=6==n,d=5==n||u;return function(m,f,h,x){for(var g,y,C=o(m),w=a(C),v=r(f,h,3),b=i(w.length),k=0,V=x||l,P=e?V(m,b):t?V(m,0):void 0;b>k;k++)if((d||k in w)&&(g=w[k],y=v(g,k,C),n))if(e)P[k]=y;else if(y)switch(n){case 3:return!0;case 5:return g;case 6:return k;case 2:s.call(P,g)}else if(p)return!1;return u?-1:c||p?p:P}};n.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6)}}});